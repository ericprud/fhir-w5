All mapped:
recorder: {
  "FiveWs.author": [
    "AdverseEvent",
    "AllergyIntolerance",
    "Condition",
    "Procedure"
  ],
  "FiveWs.who": [
    "MedicationRequest"
  ]
}
enterer: {
  "FiveWs.actor": [
    "ChargeItem"
  ],
  "FiveWs.author": [
    "Claim",
    "CoverageEligibilityRequest",
    "ExplanationOfBenefit",
    "MessageHeader"
  ]
}
provider: {
  "FiveWs.source": [
    "Claim",
    "ClaimResponse.addItem",
    "CoverageEligibilityRequest",
    "CoverageEligibilityRequest.item",
    "CoverageEligibilityResponse.insurance.item",
    "ExplanationOfBenefit",
    "ExplanationOfBenefit.addItem",
    "PaymentNotice"
  ],
  "FiveWs.actor": [
    "Claim.careTeam",
    "EnrollmentRequest",
    "ExplanationOfBenefit.careTeam"
  ]
}
sender: {
  "FiveWs.actor": [
    "Communication"
  ],
  "FiveWs.subject[x]": [
    "MessageHeader"
  ]
}


none mapped:
coverage: [
  "Account",
  "Account.coverage",
  "Claim.insurance",
  "ClaimResponse.insurance",
  "CoverageEligibilityRequest.insurance",
  "CoverageEligibilityResponse.insurance",
  "EnrollmentRequest",
  "ExplanationOfBenefit.insurance",
  "InsurancePlan"
]
partOf: [
  "Account",
  "CarePlan",
  "ChargeItem",
  "ChargeItemDefinition",
  "Communication",
  "DeviceDispense",
  "Encounter",
  "Location",
  "MedicationAdministration",
  "MedicationDispense",
  "NutritionIntake",
  "Observation",
  "Organization",
  "Procedure",
  "QuestionnaireResponse",
  "ResearchStudy",
  "SupplyDelivery",
  "Task"
]
title: [
  "ActivityDefinition",
  "CanonicalResource",
  "CapabilityStatement",
  "CapabilityStatement2",
  "CarePlan",
  "ChargeItemDefinition",
  "Citation",
  "Citation.citedArtifact",
  "Citation.citedArtifact.publicationForm.publishedIn",
  "CodeSystem",
  "Composition",
  "Composition.section",
  "ConceptMap",
  "ConceptMap2",
  "ConditionDefinition",
  "Contract",
  "EventDefinition",
  "Evidence",
  "EvidenceReport.section",
  "EvidenceVariable",
  "ExampleScenario.process",
  "ExampleScenario.process.step.alternative",
  "ImagingStudy.series.instance",
  "ImplementationGuide",
  "ImplementationGuide.definition.page",
  "ImplementationGuide.manifest.page",
  "Library",
  "List",
  "Measure",
  "MessageDefinition",
  "NamingSystem",
  "ObservationDefinition",
  "OperationDefinition",
  "PlanDefinition",
  "PlanDefinition.actor",
  "PlanDefinition.action",
  "PlanDefinition.action.input",
  "PlanDefinition.action.output",
  "Questionnaire",
  "RequestGroup.action",
  "ResearchStudy",
  "SpecimenDefinition",
  "StructureMap",
  "SubscriptionTopic",
  "TerminologyCapabilities",
  "TestScript",
  "ValueSet"
]
subtitle: [
  "ActivityDefinition",
  "ConditionDefinition",
  "Contract",
  "EventDefinition",
  "EvidenceVariable",
  "Library",
  "Measure",
  "PlanDefinition"
]
subject[x]: [
  "ActivityDefinition",
  "EventDefinition",
  "Library",
  "Measure",
  "PlanDefinition",
  "PlanDefinition.action",
  "SpecimenDefinition"
]
useContext: [
  "ActivityDefinition",
  "CanonicalResource",
  "CapabilityStatement",
  "CapabilityStatement2",
  "ChargeItemDefinition",
  "Citation",
  "CodeSystem",
  "ConceptMap",
  "ConceptMap2",
  "ConditionDefinition",
  "DeviceDefinition.guideline",
  "DeviceDefinition.chargeItem",
  "EventDefinition",
  "Evidence",
  "EvidenceReport",
  "EvidenceVariable",
  "ExampleScenario",
  "GraphDefinition",
  "ImplementationGuide",
  "Library",
  "Measure",
  "MessageDefinition",
  "NamingSystem",
  "ObservationDefinition",
  "OperationDefinition",
  "PlanDefinition",
  "Questionnaire",
  "SearchParameter",
  "SpecimenDefinition",
  "StructureMap",
  "SubscriptionTopic",
  "TerminologyCapabilities",
  "TestScript",
  "ValueSet"
]
jurisdiction: [
  "ActivityDefinition",
  "CanonicalResource",
  "CapabilityStatement",
  "CapabilityStatement2",
  "ChargeItemDefinition",
  "Citation",
  "CodeSystem",
  "ConceptMap",
  "ConceptMap2",
  "ConditionDefinition",
  "Device.udiCarrier",
  "DeviceDefinition.udiDeviceIdentifier",
  "DeviceDefinition.packaging.udiDeviceIdentifier",
  "EventDefinition",
  "ExampleScenario",
  "GraphDefinition",
  "ImplementationGuide",
  "Library",
  "Measure",
  "MedicinalProductDefinition.name.countryLanguage",
  "MessageDefinition",
  "NamingSystem",
  "ObservationDefinition",
  "OperationDefinition",
  "PlanDefinition",
  "Questionnaire",
  "SearchParameter",
  "SpecimenDefinition",
  "StructureMap",
  "SubscriptionTopic",
  "SubstanceDefinition.name",
  "TerminologyCapabilities",
  "TestScript",
  "ValueSet"
]
usage: [
  "ActivityDefinition",
  "EventDefinition",
  "Library",
  "Measure",
  "Measure.supplementalData",
  "NamingSystem",
  "PlanDefinition"
]
copyright: [
  "ActivityDefinition",
  "CanonicalResource",
  "CapabilityStatement",
  "CapabilityStatement2",
  "ChargeItemDefinition",
  "Citation",
  "Citation.citedArtifact.abstract",
  "Citation.citedArtifact.publicationForm",
  "CodeSystem",
  "ConceptMap",
  "ConceptMap2",
  "Contract.contentDefinition",
  "EventDefinition",
  "ExampleScenario",
  "ImplementationGuide",
  "Library",
  "Measure",
  "MessageDefinition",
  "ObservationDefinition",
  "PlanDefinition",
  "Questionnaire",
  "SpecimenDefinition",
  "StructureMap",
  "SubscriptionTopic",
  "TerminologyCapabilities",
  "TestScript",
  "ValueSet",
  "ValueSet.compose.include"
]
approvalDate: [
  "ActivityDefinition",
  "ChargeItemDefinition",
  "Citation",
  "EventDefinition",
  "Evidence",
  "Library",
  "Measure",
  "MetadataResource",
  "ObservationDefinition",
  "PlanDefinition",
  "Questionnaire",
  "SpecimenDefinition",
  "SubscriptionTopic"
]
lastReviewDate: [
  "ActivityDefinition",
  "ChargeItemDefinition",
  "Citation",
  "EventDefinition",
  "Evidence",
  "Library",
  "Measure",
  "MetadataResource",
  "ObservationDefinition",
  "PlanDefinition",
  "Questionnaire",
  "SpecimenDefinition",
  "SubscriptionTopic"
]
effectivePeriod: [
  "ActivityDefinition",
  "CatalogEntry",
  "ChargeItemDefinition",
  "Citation",
  "DeviceDefinition.chargeItem",
  "EventDefinition",
  "Library",
  "Measure",
  "MetadataResource",
  "ObservationDefinition",
  "PlanDefinition",
  "Questionnaire",
  "SpecimenDefinition",
  "SubscriptionTopic"
]
editor: [
  "ActivityDefinition",
  "Citation",
  "EventDefinition",
  "Evidence",
  "EvidenceReport",
  "EvidenceVariable",
  "Library",
  "Measure",
  "MetadataResource",
  "PlanDefinition"
]
reviewer: [
  "ActivityDefinition",
  "Citation",
  "EventDefinition",
  "Evidence",
  "EvidenceReport",
  "EvidenceVariable",
  "Library",
  "Measure",
  "MetadataResource",
  "PlanDefinition"
]
endorser: [
  "ActivityDefinition",
  "Citation",
  "EventDefinition",
  "Evidence",
  "EvidenceReport",
  "EvidenceVariable",
  "Library",
  "Measure",
  "MetadataResource",
  "PlanDefinition"
]
relatedArtifact: [
  "ActivityDefinition",
  "DeviceDefinition.guideline",
  "EventDefinition",
  "Evidence",
  "EvidenceReport",
  "EvidenceVariable",
  "Library",
  "Measure",
  "MetadataResource",
  "PlanDefinition",
  "ResearchStudy"
]
library: [
  "ActivityDefinition",
  "Measure",
  "PlanDefinition"
]
profile: [
  "ActivityDefinition",
  "CapabilityStatement.rest.resource",
  "CapabilityStatement.document",
  "CapabilityStatement2.rest.resource",
  "GraphDefinition",
  "GraphDefinition.link.target",
  "ImplementationGuide.global",
  "MessageDefinition.focus",
  "TestScript.origin",
  "TestScript.destination",
  "TestScript"
]
doNotPerform: [
  "ActivityDefinition",
  "CarePlan.activity.plannedActivityDetail",
  "CommunicationRequest",
  "Contract.term.action",
  "DeviceRequest",
  "MedicationRequest",
  "ServiceRequest"
]
typeReference: [
  "ActivityDefinition.participant",
  "Contract.term.asset",
  "PlanDefinition.actor.option",
  "PlanDefinition.action.participant",
  "RequestGroup.action.participant"
]
function: [
  "ActivityDefinition.participant",
  "AdverseEvent.participant",
  "ChargeItem.performer",
  "DeviceDispense.performer",
  "ImagingStudy.series.performer",
  "Immunization.performer",
  "Ingredient",
  "MedicationAdministration.performer",
  "MedicationDispense.performer",
  "NutritionIntake.performer",
  "PlanDefinition.action.participant",
  "Procedure.performer",
  "RequestGroup.action.participant"
]
product[x]: [
  "ActivityDefinition",
  "CarePlan.activity.plannedActivityDetail"
]
dosage: [
  "ActivityDefinition",
  "MedicationAdministration",
  "MedicationKnowledge.indicationGuideline.dosingGuideline",
  "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage",
  "MedicationUsage"
]
bodySite: [
  "ActivityDefinition",
  "Claim.item",
  "ClaimResponse.addItem",
  "Condition",
  "ConditionDefinition",
  "DeviceUsage",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.addItem",
  "ImagingStudy.series",
  "Observation",
  "ObservationDefinition",
  "Procedure",
  "ServiceRequest",
  "Specimen.collection"
]
transform: [
  "ActivityDefinition",
  "PlanDefinition.action",
  "StructureMap.group.rule.target"
]
dynamicValue: [
  "ActivityDefinition",
  "PlanDefinition.action"
]
path: [
  "ActivityDefinition.dynamicValue",
  "GraphDefinition.link",
  "PlanDefinition.action.dynamicValue",
  "TestScript.variable",
  "TestScript.setup.action.assert"
]
expression: [
  "ActivityDefinition.dynamicValue",
  "ChargeItemDefinition.applicability",
  "Consent.provision",
  "GraphDefinition.link.target.compartment",
  "OperationOutcome.issue",
  "PlanDefinition.action.condition",
  "PlanDefinition.action.dynamicValue",
  "RequestGroup.action.condition",
  "SearchParameter",
  "SearchParameter.component",
  "TestScript.variable",
  "TestScript.setup.action.assert"
]
unitOfPresentation: [
  "AdministrableProductDefinition",
  "ManufacturedItemDefinition"
]
ingredient: [
  "AdministrableProductDefinition",
  "ManufacturedItemDefinition",
  "Medication",
  "MedicationKnowledge",
  "MedicinalProductDefinition",
  "NutritionProduct",
  "Substance"
]
property: [
  "AdministrableProductDefinition",
  "CodeSystem",
  "CodeSystem.concept",
  "ConceptMap.group.element.target.dependsOn",
  "ConceptMap2.group.element.target.dependsOn",
  "Device",
  "DeviceDefinition",
  "ManufacturedItemDefinition",
  "PackagedProductDefinition.package",
  "SubstanceDefinition",
  "TerminologyCapabilities.codeSystem.version",
  "ValueSet.compose.include.filter",
  "ValueSet.compose",
  "ValueSet.expansion",
  "ValueSet.expansion.contains"
]
item[x]: [
  "AdverseEvent.contributingFactor",
  "AdverseEvent.preventiveAction",
  "AdverseEvent.mitigatingAction",
  "AdverseEvent.supportingInfo",
  "ClinicalUseIssue.interaction.interactant",
  "SupplyDelivery.suppliedItem"
]
supportingInfo: [
  "AdverseEvent",
  "CarePlan",
  "Claim",
  "ClinicalImpression",
  "Contract",
  "CoverageEligibilityRequest",
  "DeviceRequest",
  "ExplanationOfBenefit",
  "Procedure",
  "ServiceRequest"
]
study: [
  "AdverseEvent",
  "ResearchSubject"
]
note: [
  "AllergyIntolerance",
  "AllergyIntolerance.reaction",
  "Appointment",
  "CarePlan",
  "CareTeam",
  "CatalogEntry",
  "ChargeItem",
  "Citation",
  "Citation.citedArtifact",
  "ClinicalImpression",
  "Communication",
  "CommunicationRequest",
  "Condition",
  "Contract.term.action",
  "Device",
  "DeviceDefinition",
  "DeviceDispense",
  "DeviceRequest",
  "DeviceUsage",
  "Evidence",
  "Evidence.variableDefinition",
  "Evidence.certainty",
  "EvidenceReport",
  "EvidenceReport.subject",
  "EvidenceVariable",
  "EvidenceVariable.characteristic.timeFromStart",
  "FamilyMemberHistory",
  "FamilyMemberHistory.condition",
  "FamilyMemberHistory.procedure",
  "Goal",
  "GuidanceResponse",
  "ImagingStudy",
  "Immunization",
  "InventoryReport",
  "Invoice",
  "List",
  "MedicationAdministration",
  "MedicationDispense",
  "MedicationRequest",
  "MedicationUsage",
  "NutritionIntake",
  "NutritionOrder",
  "NutritionProduct",
  "Observation",
  "Procedure",
  "RequestGroup",
  "ResearchStudy",
  "RiskAssessment",
  "ServiceRequest",
  "Specimen",
  "SubstanceDefinition",
  "SubstanceDefinition.code",
  "Task",
  "VisionPrescription.lensSpecification"
]
reaction: [
  "AllergyIntolerance",
  "Immunization"
]
substance: [
  "AllergyIntolerance.reaction",
  "DeviceDefinition.material",
  "Ingredient",
  "Ingredient.substance.strength.referenceStrength"
]
account: [
  "Appointment",
  "ChargeItem",
  "Encounter",
  "EpisodeOfCare",
  "Invoice"
]
patientInstruction: [
  "Appointment",
  "ServiceRequest"
]
required: [
  "Appointment.participant",
  "Questionnaire.item",
  "TestScript.metadata.capability"
]
appointment: [
  "AppointmentResponse",
  "Encounter"
]
comment: [
  "AppointmentResponse",
  "ConceptMap.group.element.target",
  "ConceptMap2.group.element.target",
  "DiagnosticReport.media",
  "HealthcareService",
  "HealthcareService.eligibility",
  "InsurancePlan.plan.generalCost",
  "NamingSystem.uniqueId",
  "OperationDefinition",
  "OperationDefinition.overload",
  "Schedule",
  "Slot",
  "SubstanceReferenceInformation"
]
contentType: [
  "Binary",
  "Subscription",
  "TestScript.setup.action.operation",
  "TestScript.setup.action.assert"
]
data: [
  "Binary",
  "Consent.provision"
]
parent: [
  "BiologicallyDerivedProduct",
  "Device",
  "DeviceMetric",
  "MessageDefinition",
  "RiskAssessment",
  "Specimen"
]
collection: [
  "BiologicallyDerivedProduct",
  "Specimen",
  "SpecimenDefinition"
]
processing: [
  "BiologicallyDerivedProduct",
  "Specimen"
]
procedure: [
  "BiologicallyDerivedProduct.processing",
  "Claim",
  "ExplanationOfBenefit",
  "FamilyMemberHistory",
  "ImagingStudy",
  "Specimen.processing"
]
additive: [
  "BiologicallyDerivedProduct.processing",
  "Specimen.processing",
  "SpecimenDefinition.typeTested.container"
]
time[x]: [
  "BiologicallyDerivedProduct.processing",
  "BiologicallyDerivedProduct.manipulation",
  "Specimen.processing"
]
instantiates: [
  "CapabilityStatement",
  "CapabilityStatement2",
  "NutritionOrder"
]
imports: [
  "CapabilityStatement",
  "CapabilityStatement2"
]
software: [
  "CapabilityStatement",
  "CapabilityStatement2",
  "MessageHeader.source",
  "TerminologyCapabilities"
]
releaseDate: [
  "CapabilityStatement.software",
  "CapabilityStatement2.software"
]
implementation: [
  "CapabilityStatement",
  "CapabilityStatement2",
  "TerminologyCapabilities"
]
custodian: [
  "CapabilityStatement.implementation",
  "CapabilityStatement2.implementation",
  "Composition",
  "DocumentReference"
]
fhirVersion: [
  "CapabilityStatement",
  "CapabilityStatement2",
  "ImplementationGuide",
  "ImplementationGuide.definition.resource"
]
format: [
  "CapabilityStatement",
  "CapabilityStatement2",
  "DocumentReference.content",
  "SubstanceDefinition.structure.representation",
  "SubstancePolymer.repeat.repeatUnit.structuralRepresentation"
]
patchFormat: [
  "CapabilityStatement",
  "CapabilityStatement2"
]
implementationGuide: [
  "CapabilityStatement",
  "CapabilityStatement2"
]
rest: [
  "CapabilityStatement",
  "CapabilityStatement2"
]
documentation: [
  "CapabilityStatement.rest",
  "CapabilityStatement.rest.resource",
  "CapabilityStatement.rest.resource.interaction",
  "CapabilityStatement.rest.resource.searchParam",
  "CapabilityStatement.rest.resource.operation",
  "CapabilityStatement.rest.interaction",
  "CapabilityStatement.messaging",
  "CapabilityStatement.document",
  "CapabilityStatement2.rest",
  "CapabilityStatement2.rest.resource",
  "CapabilityStatement2.rest.resource.interaction",
  "CapabilityStatement2.rest.resource.searchParam",
  "CapabilityStatement2.rest.resource.operation",
  "CapabilityStatement2.rest.interaction",
  "OperationDefinition.parameter",
  "PlanDefinition.goal",
  "PlanDefinition.action",
  "RequestGroup.action",
  "StructureMap.structure",
  "StructureMap.group",
  "StructureMap.group.input",
  "StructureMap.group.rule",
  "SubscriptionTopic.resourceTrigger.canFilterBy",
  "TerminologyCapabilities.expansion.parameter"
]
resource: [
  "CapabilityStatement.rest",
  "CapabilityStatement2.rest",
  "ImplementationGuide.definition",
  "ImplementationGuide.manifest",
  "Linkage.item",
  "OperationDefinition",
  "Parameters.parameter",
  "RequestGroup.action",
  "TestScript.fixture",
  "TestScript.setup.action.operation",
  "TestScript.setup.action.assert"
]
supportedProfile: [
  "CapabilityStatement.rest.resource",
  "CapabilityStatement2.rest.resource"
]
interaction: [
  "CapabilityStatement.rest.resource",
  "CapabilityStatement.rest",
  "CapabilityStatement2.rest.resource",
  "CapabilityStatement2.rest",
  "ClinicalUseIssue",
  "SubstanceReferenceInformation.target"
]
searchParam: [
  "CapabilityStatement.rest.resource",
  "CapabilityStatement.rest",
  "CapabilityStatement2.rest.resource",
  "CapabilityStatement2.rest"
]
definition: [
  "CapabilityStatement.rest.resource.searchParam",
  "CapabilityStatement.rest.resource.operation",
  "CapabilityStatement.messaging.supportedMessage",
  "CapabilityStatement2.rest.resource.searchParam",
  "CapabilityStatement2.rest.resource.operation",
  "CodeSystem.concept",
  "ConditionDefinition",
  "Device",
  "ImplementationGuide",
  "Measure",
  "MessageHeader",
  "Questionnaire.item",
  "QuestionnaireResponse.item",
  "SearchParameter.component"
]
operation: [
  "CapabilityStatement.rest.resource",
  "CapabilityStatement.rest",
  "CapabilityStatement2.rest.resource",
  "CapabilityStatement2.rest",
  "ExampleScenario.process.step",
  "MedicinalProductDefinition",
  "TestReport.setup.action",
  "TestReport.test.action",
  "TestReport.teardown.action",
  "TestScript.setup.action",
  "TestScript.test.action",
  "TestScript.teardown.action"
]
compartment: [
  "CapabilityStatement.rest",
  "CapabilityStatement2.rest",
  "GraphDefinition.link.target"
]
endpoint: [
  "CapabilityStatement.messaging",
  "HealthcareService",
  "ImagingStudy",
  "ImagingStudy.series",
  "InsurancePlan",
  "Location",
  "MessageHeader.destination",
  "MessageHeader.source",
  "Organization",
  "OrganizationAffiliation",
  "PractitionerRole",
  "Subscription"
]
protocol: [
  "CapabilityStatement.messaging.endpoint",
  "ClinicalImpression",
  "ResearchStudy"
]
document: [
  "CapabilityStatement",
  "SubstanceDefinition.structure.representation"
]
feature: [
  "CapabilityStatement2.rest",
  "CapabilityStatement2.rest.resource",
  "CapabilityStatement2.rest.resource.interaction",
  "CapabilityStatement2.rest.resource.searchParam",
  "CapabilityStatement2.rest.resource.operation",
  "CapabilityStatement2.rest.interaction"
]
instantiatesCanonical: [
  "CarePlan",
  "CarePlan.activity.plannedActivityDetail",
  "Communication",
  "Contract",
  "DeviceRequest",
  "FamilyMemberHistory",
  "Immunization",
  "ImmunizationRecommendation",
  "MedicationAdministration",
  "MedicationRequest",
  "NutritionIntake",
  "NutritionOrder",
  "Procedure",
  "RequestGroup",
  "ServiceRequest",
  "Task"
]
instantiatesUri: [
  "CarePlan",
  "CarePlan.activity.plannedActivityDetail",
  "Communication",
  "Contract",
  "DeviceRequest",
  "FamilyMemberHistory",
  "Immunization",
  "ImmunizationRecommendation",
  "MedicationAdministration",
  "MedicationRequest",
  "NutritionIntake",
  "NutritionOrder",
  "Procedure",
  "RequestGroup",
  "ServiceRequest",
  "Task"
]
goal: [
  "CarePlan",
  "CarePlan.activity.plannedActivityDetail",
  "PlanDefinition"
]
progress: [
  "CarePlan.activity",
  "ResearchSubject"
]
onBehalfOf: [
  "CareTeam.participant",
  "Procedure.performer",
  "Provenance.agent",
  "VerificationResult.attestation"
]
managingOrganization: [
  "CareTeam",
  "Endpoint",
  "EpisodeOfCare",
  "Location",
  "Patient",
  "Person"
]
telecom: [
  "CareTeam",
  "Citation.citedArtifact.contributorship.entry",
  "HealthcareService",
  "InsurancePlan.contact",
  "Location",
  "Organization",
  "Organization.contact",
  "OrganizationAffiliation",
  "Patient",
  "Patient.contact",
  "Person",
  "Practitioner",
  "PractitionerRole",
  "RelatedPerson"
]
product: [
  "ChargeItem",
  "ConceptMap.group.element.target",
  "ConceptMap2.group.element.target",
  "MedicinalProductDefinition.crossReference",
  "MedicinalProductDefinition.administrableProduct",
  "VisionPrescription.lensSpecification"
]
derivedFromUri: [
  "ChargeItemDefinition",
  "ObservationDefinition",
  "SpecimenDefinition"
]
instance: [
  "ChargeItemDefinition",
  "ExampleScenario",
  "ImagingStudy.series",
  "NutritionProduct",
  "OperationDefinition",
  "Substance"
]
applicability: [
  "ChargeItemDefinition",
  "ChargeItemDefinition.propertyGroup",
  "InsurancePlan.plan.specificCost.benefit.cost"
]
language: [
  "ChargeItemDefinition.applicability",
  "Citation.citedArtifact.title",
  "Citation.citedArtifact.abstract",
  "Citation.citedArtifact.publicationForm",
  "ClaimResponse.processNote",
  "CodeSystem.concept.designation",
  "ExplanationOfBenefit.processNote",
  "MedicinalProductDefinition.name.countryLanguage",
  "Patient.communication",
  "Person.communication",
  "RelatedPerson.communication",
  "SubstanceDefinition.name",
  "TerminologyCapabilities.codeSystem.version",
  "ValueSet.compose.include.concept.designation"
]
priceComponent: [
  "ChargeItemDefinition.propertyGroup",
  "Invoice.lineItem"
]
amount: [
  "ChargeItemDefinition.propertyGroup.priceComponent",
  "ClaimResponse.item.adjudication",
  "ClaimResponse.total",
  "ClaimResponse.payment",
  "ExplanationOfBenefit.item.adjudication",
  "ExplanationOfBenefit.total",
  "ExplanationOfBenefit.payment",
  "Invoice.lineItem.priceComponent",
  "Medication",
  "MedicationKnowledge",
  "NutritionIntake.consumedItem",
  "NutritionIntake.ingredientLabel",
  "NutritionOrder.oralDiet.nutrient",
  "NutritionProduct.nutrient",
  "NutritionProduct.ingredient",
  "PaymentNotice",
  "PaymentReconciliation.detail",
  "SubstanceDefinition.molecularWeight",
  "SubstancePolymer.monomerSet.startingMaterial",
  "SubstancePolymer.repeat.repeatUnit",
  "VisionPrescription.lensSpecification.prism"
]
summary: [
  "Citation",
  "Citation.citedArtifact.contributorship",
  "ClinicalImpression",
  "Condition.stage"
]
style: [
  "Citation.summary",
  "Citation.citedArtifact.contributorship.summary"
]
text: [
  "Citation.summary",
  "Citation.citedArtifact.title",
  "Citation.citedArtifact.abstract",
  "Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication",
  "ClaimResponse.processNote",
  "Composition.section",
  "Contract.term",
  "Contract.term.offer",
  "Contract.term.asset.context",
  "Contract.term.asset",
  "EvidenceReport.section",
  "ExplanationOfBenefit.processNote",
  "MedicationAdministration.dosage",
  "Observation.referenceRange",
  "PaymentReconciliation.processNote",
  "Questionnaire.item",
  "QuestionnaireResponse.item"
]
classification: [
  "Citation",
  "Citation.citedArtifact",
  "ClinicalUseIssue.undesirableEffect",
  "Contract.term.securityLabel",
  "DeviceDefinition",
  "MedicationKnowledge.medicineClassification",
  "MedicinalProductDefinition",
  "ResearchStudy",
  "SubstanceDefinition"
]
classifier: [
  "Citation.classification",
  "Citation.citedArtifact.classification",
  "ResearchStudy.classification",
  "ResearchStudy.associatedParty"
]
currentState: [
  "Citation",
  "Citation.citedArtifact",
  "ResearchStudy"
]
relatesTo: [
  "Citation",
  "Citation.citedArtifact",
  "Composition",
  "DocumentReference",
  "EvidenceReport"
]
relationshipType: [
  "Citation.relatesTo",
  "Citation.citedArtifact.relatesTo",
  "ClinicalUseIssue.contraindication.otherTherapy"
]
targetClassifier: [
  "Citation.relatesTo",
  "Citation.citedArtifact.relatesTo"
]
target[x]: [
  "Citation.relatesTo",
  "Citation.citedArtifact.relatesTo",
  "Composition.relatesTo",
  "ConceptMap",
  "ConceptMap2",
  "EvidenceReport.relatesTo"
]
relatedIdentifier: [
  "Citation.citedArtifact",
  "EvidenceReport"
]
baseCitation: [
  "Citation.citedArtifact.version",
  "Citation.citedArtifact.part"
]
abstract: [
  "Citation.citedArtifact",
  "ValueSet.expansion.contains"
]
part: [
  "Citation.citedArtifact",
  "MedicinalProductDefinition.name.namePart",
  "OperationDefinition.parameter",
  "Parameters.parameter",
  "SubstanceDefinition.sourceMaterial",
  "SubstanceSourceMaterial.partDescription"
]
issue: [
  "Citation.citedArtifact.publicationForm.periodicRelease",
  "OperationOutcome"
]
webLocation: [
  "Citation.citedArtifact",
  "ResearchStudy"
]
entry: [
  "Citation.citedArtifact.contributorship",
  "Composition.section",
  "List"
]
time: [
  "Citation.citedArtifact.contributorship.entry.contributionInstance",
  "Composition.attester",
  "DeviceMetric.calibration",
  "DocumentReference.attester"
]
fundsReserve: [
  "Claim",
  "ClaimResponse",
  "ExplanationOfBenefit"
]
related: [
  "Claim",
  "DocumentManifest",
  "DocumentReference",
  "ExplanationOfBenefit"
]
reference: [
  "Claim.related",
  "ConditionDefinition.questionnaire",
  "ConditionDefinition.plan",
  "Consent.provision.actor",
  "Consent.provision.data",
  "Contract.term.offer.party",
  "Contract.term.asset.context",
  "Contract.term.action.subject",
  "DetectedIssue",
  "DeviceDefinition.hasPart",
  "ExplanationOfBenefit.related",
  "Immunization.education",
  "ImplementationGuide.definition.resource",
  "ImplementationGuide.manifest.resource",
  "MedicationKnowledge.relatedMedicationKnowledge",
  "ResearchStudy.outcomeMeasure"
]
prescription: [
  "Claim",
  "ExplanationOfBenefit"
]
originalPrescription: [
  "Claim",
  "ExplanationOfBenefit"
]
payee: [
  "Claim",
  "ExplanationOfBenefit",
  "PaymentNotice",
  "PaymentReconciliation.detail"
]
sequence: [
  "Claim.careTeam",
  "Claim.supportingInfo",
  "Claim.diagnosis",
  "Claim.procedure",
  "Claim.insurance",
  "Claim.item",
  "Claim.item.detail",
  "Claim.item.detail.subDetail",
  "ClaimResponse.insurance",
  "CoverageEligibilityRequest.supportingInfo",
  "ExplanationOfBenefit.careTeam",
  "ExplanationOfBenefit.supportingInfo",
  "ExplanationOfBenefit.diagnosis",
  "ExplanationOfBenefit.procedure",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.item.detail.subDetail",
  "Invoice.lineItem",
  "SubstanceNucleicAcid.subunit",
  "SubstanceProtein.subunit"
]
qualification: [
  "Claim.careTeam",
  "ExplanationOfBenefit.careTeam",
  "Practitioner"
]
diagnosis: [
  "Claim",
  "CoverageEligibilityRequest.item",
  "Encounter",
  "EpisodeOfCare",
  "ExplanationOfBenefit"
]
diagnosis[x]: [
  "Claim.diagnosis",
  "CoverageEligibilityRequest.item.diagnosis",
  "ExplanationOfBenefit.diagnosis"
]
onAdmission: [
  "Claim.diagnosis",
  "ExplanationOfBenefit.diagnosis"
]
packageCode: [
  "Claim.diagnosis",
  "ExplanationOfBenefit.diagnosis"
]
procedure[x]: [
  "Claim.procedure",
  "ExplanationOfBenefit.procedure"
]
udi: [
  "Claim.procedure",
  "Claim.item",
  "Claim.item.detail",
  "Claim.item.detail.subDetail",
  "ExplanationOfBenefit.procedure",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.item.detail.subDetail"
]
insurance: [
  "Claim",
  "ClaimResponse",
  "CoverageEligibilityRequest",
  "CoverageEligibilityResponse",
  "DeviceRequest",
  "ExplanationOfBenefit",
  "MedicationRequest",
  "ServiceRequest",
  "Task"
]
focal: [
  "Claim.insurance",
  "ClaimResponse.insurance",
  "CoverageEligibilityRequest.insurance",
  "ExplanationOfBenefit.insurance"
]
businessArrangement: [
  "Claim.insurance",
  "ClaimResponse.insurance",
  "CoverageEligibilityRequest.insurance"
]
preAuthRef: [
  "Claim.insurance",
  "ClaimResponse",
  "CoverageEligibilityResponse",
  "ExplanationOfBenefit",
  "ExplanationOfBenefit.insurance"
]
claimResponse: [
  "Claim.insurance",
  "ClaimResponse.insurance",
  "ExplanationOfBenefit"
]
accident: [
  "Claim",
  "ExplanationOfBenefit"
]
item: [
  "Claim",
  "ClaimResponse",
  "ClinicalImpression.finding",
  "CoverageEligibilityRequest",
  "CoverageEligibilityResponse.insurance",
  "ExplanationOfBenefit",
  "InventoryReport.inventoryListing.items",
  "Linkage",
  "List.entry",
  "Medication.ingredient",
  "MedicationKnowledge.ingredient",
  "NutritionProduct.nutrient",
  "NutritionProduct.ingredient",
  "PackagedProductDefinition.package.containedItem",
  "Questionnaire",
  "Questionnaire.item",
  "QuestionnaireResponse",
  "QuestionnaireResponse.item.answer",
  "QuestionnaireResponse.item",
  "SupplyRequest"
]
careTeamSequence: [
  "Claim.item",
  "ExplanationOfBenefit.item"
]
diagnosisSequence: [
  "Claim.item",
  "ExplanationOfBenefit.item"
]
procedureSequence: [
  "Claim.item",
  "ExplanationOfBenefit.item"
]
informationSequence: [
  "Claim.item",
  "ExplanationOfBenefit.item"
]
revenue: [
  "Claim.item",
  "Claim.item.detail",
  "Claim.item.detail.subDetail",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.item.detail.subDetail"
]
productOrService: [
  "Claim.item",
  "Claim.item.detail",
  "Claim.item.detail.subDetail",
  "ClaimResponse.addItem",
  "ClaimResponse.addItem.detail",
  "ClaimResponse.addItem.detail.subDetail",
  "CoverageEligibilityRequest.item",
  "CoverageEligibilityResponse.insurance.item",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.item.detail.subDetail",
  "ExplanationOfBenefit.addItem",
  "ExplanationOfBenefit.addItem.detail",
  "ExplanationOfBenefit.addItem.detail.subDetail"
]
programCode: [
  "Claim.item",
  "Claim.item.detail",
  "Claim.item.detail.subDetail",
  "ClaimResponse.addItem",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.item.detail.subDetail",
  "ExplanationOfBenefit.addItem"
]
subSite: [
  "Claim.item",
  "ClaimResponse.addItem",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.addItem"
]
subDetail: [
  "Claim.item.detail",
  "ClaimResponse.item.detail",
  "ClaimResponse.addItem.detail",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.addItem.detail"
]
total: [
  "Claim",
  "ClaimResponse",
  "ExplanationOfBenefit",
  "ValueSet.expansion"
]
disposition: [
  "ClaimResponse",
  "CoverageEligibilityResponse",
  "EnrollmentResponse",
  "ExplanationOfBenefit",
  "PaymentReconciliation"
]
itemSequence: [
  "ClaimResponse.item",
  "ClaimResponse.addItem",
  "ClaimResponse.error",
  "ExplanationOfBenefit.addItem"
]
noteNumber: [
  "ClaimResponse.item",
  "ClaimResponse.item.detail",
  "ClaimResponse.item.detail.subDetail",
  "ClaimResponse.addItem",
  "ClaimResponse.addItem.detail",
  "ClaimResponse.addItem.detail.subDetail",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.item.detail.subDetail",
  "ExplanationOfBenefit.addItem",
  "ExplanationOfBenefit.addItem.detail",
  "ExplanationOfBenefit.addItem.detail.subDetail"
]
adjudication: [
  "ClaimResponse.item",
  "ClaimResponse.item.detail",
  "ClaimResponse.item.detail.subDetail",
  "ClaimResponse.addItem",
  "ClaimResponse.addItem.detail",
  "ClaimResponse.addItem.detail.subDetail",
  "ClaimResponse",
  "ExplanationOfBenefit.item",
  "ExplanationOfBenefit.item.detail",
  "ExplanationOfBenefit.item.detail.subDetail",
  "ExplanationOfBenefit.addItem",
  "ExplanationOfBenefit.addItem.detail",
  "ExplanationOfBenefit.addItem.detail.subDetail",
  "ExplanationOfBenefit"
]
detailSequence: [
  "ClaimResponse.item.detail",
  "ClaimResponse.addItem",
  "ClaimResponse.error",
  "ExplanationOfBenefit.addItem"
]
subDetailSequence: [
  "ClaimResponse.item.detail.subDetail",
  "ClaimResponse.error",
  "ExplanationOfBenefit.addItem"
]
addItem: [
  "ClaimResponse",
  "ExplanationOfBenefit"
]
payment: [
  "ClaimResponse",
  "Contract.term.asset.valuedItem",
  "ExplanationOfBenefit",
  "PaymentNotice"
]
adjustment: [
  "ClaimResponse.payment",
  "ExplanationOfBenefit.payment"
]
adjustmentReason: [
  "ClaimResponse.payment",
  "ExplanationOfBenefit.payment"
]
formCode: [
  "ClaimResponse",
  "ExplanationOfBenefit",
  "PaymentReconciliation"
]
form: [
  "ClaimResponse",
  "CoverageEligibilityResponse",
  "ExplanationOfBenefit"
]
processNote: [
  "ClaimResponse",
  "ExplanationOfBenefit",
  "PaymentReconciliation"
]
number: [
  "ClaimResponse.processNote",
  "Contract.term.securityLabel",
  "ExampleScenario.process.step.operation",
  "ExplanationOfBenefit.processNote",
  "ImagingStudy.series",
  "ImagingStudy.series.instance"
]
error: [
  "ClaimResponse",
  "CoverageEligibilityResponse",
  "SubscriptionStatus"
]
previous: [
  "ClinicalImpression",
  "SubscriptionTopic.resourceTrigger.queryCriteria"
]
basis: [
  "ClinicalImpression.finding",
  "Ingredient.substance.strength",
  "Measure",
  "Measure.group",
  "RegulatedAuthorization",
  "RiskAssessment"
]
contraindication: [
  "ClinicalUseIssue",
  "DeviceDefinition.guideline"
]
diseaseSymptomProcedure: [
  "ClinicalUseIssue.contraindication",
  "ClinicalUseIssue.indication"
]
diseaseStatus: [
  "ClinicalUseIssue.contraindication",
  "ClinicalUseIssue.indication"
]
comorbidity: [
  "ClinicalUseIssue.contraindication",
  "ClinicalUseIssue.indication"
]
indication: [
  "ClinicalUseIssue.contraindication",
  "ClinicalUseIssue",
  "DeviceDefinition.guideline",
  "MedicationKnowledge.indicationGuideline",
  "MedicinalProductDefinition",
  "RegulatedAuthorization"
]
otherTherapy: [
  "ClinicalUseIssue.contraindication",
  "ClinicalUseIssue.indication"
]
undesirableEffect: [
  "ClinicalUseIssue.indication",
  "ClinicalUseIssue"
]
population: [
  "ClinicalUseIssue",
  "Measure.group",
  "MeasureReport.group",
  "MeasureReport.group.stratifier.stratum"
]
valueSet: [
  "CodeSystem",
  "OperationDefinition.parameter.binding",
  "ValueSet.compose.include"
]
compositional: [
  "CodeSystem",
  "TerminologyCapabilities.codeSystem.version"
]
content: [
  "CodeSystem",
  "DocumentManifest",
  "DocumentReference",
  "Library",
  "Subscription"
]
count: [
  "CodeSystem",
  "DeviceDefinition.hasPart",
  "DeviceDefinition.packaging",
  "DeviceDefinition.chargeItem",
  "MeasureReport.group.population",
  "MeasureReport.group.stratifier.stratum.population"
]
filter: [
  "CodeSystem",
  "TerminologyCapabilities.codeSystem.version",
  "ValueSet.compose.include"
]
operator: [
  "CodeSystem.filter",
  "Questionnaire.item.enableWhen",
  "TestScript.setup.action.assert"
]
uri: [
  "CodeSystem.property",
  "Consent.policy",
  "ImplementationGuide.dependsOn",
  "TerminologyCapabilities.codeSystem",
  "TestReport.participant",
  "ValueSet.expansion.property"
]
concept: [
  "CodeSystem",
  "CodeSystem.concept",
  "ValueSet.compose.include"
]
display: [
  "CodeSystem.concept",
  "ConceptMap.group.element",
  "ConceptMap.group.element.target",
  "ConceptMap.group.element.target.dependsOn",
  "ConceptMap.group.unmapped",
  "ConceptMap2.group.element",
  "ConceptMap2.group.element.target",
  "ConceptMap2.group.element.target.dependsOn",
  "ConceptMap2.group.unmapped",
  "TestReport.participant",
  "ValueSet.compose.include.concept",
  "ValueSet.expansion.contains"
]
designation: [
  "CodeSystem.concept",
  "ValueSet.compose.include.concept",
  "ValueSet.expansion.contains"
]
medium: [
  "Communication",
  "CommunicationRequest"
]
payload: [
  "Communication",
  "CommunicationRequest"
]
groupIdentifier: [
  "CommunicationRequest",
  "DeviceRequest",
  "MedicationRequest",
  "RequestGroup",
  "Task"
]
confidentiality: [
  "Composition",
  "Ingredient.specifiedSubstance"
]
attester: [
  "Composition",
  "DocumentReference"
]
event: [
  "Composition",
  "DocumentReference"
]
section: [
  "Composition",
  "Composition.section",
  "EvidenceReport",
  "EvidenceReport.section"
]
orderedBy: [
  "Composition.section",
  "EvidenceReport.section",
  "List"
]
emptyReason: [
  "Composition.section",
  "EvidenceReport.section",
  "List"
]
source[x]: [
  "ConceptMap",
  "ConceptMap2"
]
element: [
  "ConceptMap.group",
  "ConceptMap2.group",
  "StructureMap.group.rule.source",
  "StructureMap.group.rule.target",
  "SubstanceReferenceInformation.geneElement"
]
noMap: [
  "ConceptMap.group.element",
  "ConceptMap2.group.element"
]
dependsOn: [
  "ConceptMap.group.element.target",
  "ConceptMap2.group.element.target",
  "ImplementationGuide"
]
system: [
  "ConceptMap.group.element.target.dependsOn",
  "ConceptMap2.group.element.target.dependsOn",
  "OperationDefinition",
  "ValueSet.compose.include",
  "ValueSet.expansion.contains"
]
unmapped: [
  "ConceptMap.group",
  "ConceptMap2.group"
]
stage: [
  "Condition",
  "ConditionDefinition"
]
team: [
  "ConditionDefinition",
  "EpisodeOfCare"
]
questionnaire: [
  "ConditionDefinition",
  "QuestionnaireResponse"
]
plan: [
  "ConditionDefinition",
  "InsurancePlan"
]
authority: [
  "Consent.policy",
  "Contract",
  "Immunization.protocolApplied",
  "ImmunizationEvaluation",
  "ImmunizationRecommendation",
  "SubstanceDefinition.name.official"
]
provision: [
  "Consent",
  "Consent.provision"
]
domain: [
  "Contract",
  "MedicinalProductDefinition",
  "SubstanceDefinition",
  "SubstanceDefinition.name"
]
alias: [
  "Contract",
  "InsurancePlan",
  "Location",
  "Organization",
  "StructureMap.structure"
]
scope: [
  "Contract",
  "Contract.term.asset",
  "ImplementationGuide.definition.template",
  "TestScript",
  "ValueSet"
]
topic[x]: [
  "Contract",
  "Contract.term"
]
publicationDate: [
  "Contract.contentDefinition",
  "Immunization.education"
]
answer: [
  "Contract.term.offer",
  "Contract.term.asset",
  "QuestionnaireResponse.item"
]
linkId: [
  "Contract.term.offer",
  "Contract.term.asset",
  "Contract.term.asset.valuedItem",
  "Contract.term.action",
  "Questionnaire.item",
  "QuestionnaireResponse.item"
]
securityLabelNumber: [
  "Contract.term.offer",
  "Contract.term.asset",
  "Contract.term.asset.valuedItem",
  "Contract.term.action"
]
paymentDate: [
  "Contract.term.asset.valuedItem",
  "PaymentNotice",
  "PaymentReconciliation"
]
relevantHistory: [
  "Contract",
  "DeviceRequest",
  "ServiceRequest",
  "Task"
]
dependent: [
  "Coverage",
  "StructureMap.group.rule"
]
order: [
  "Coverage",
  "SubstanceSourceMaterial.organism.organismGeneral"
]
benefitPeriod: [
  "CoverageEligibilityResponse.insurance",
  "ExplanationOfBenefit"
]
excluded: [
  "CoverageEligibilityResponse.insurance.item",
  "ExplanationOfBenefit.benefitBalance"
]
unit: [
  "CoverageEligibilityResponse.insurance.item",
  "DeviceMetric",
  "ExplanationOfBenefit.benefitBalance",
  "ObservationDefinition.quantitativeDetails",
  "SubstancePolymer.repeat.repeatUnit"
]
benefit: [
  "CoverageEligibilityResponse.insurance.item",
  "InsurancePlan.coverage",
  "InsurancePlan.plan.specificCost"
]
allowed[x]: [
  "CoverageEligibilityResponse.insurance.item.benefit",
  "ExplanationOfBenefit.benefitBalance.financial",
  "MedicationRequest.substitution"
]
used[x]: [
  "CoverageEligibilityResponse.insurance.item.benefit",
  "ExplanationOfBenefit.benefitBalance.financial"
]
mitigation: [
  "DetectedIssue",
  "RiskAssessment"
]
issuer: [
  "Device.udiCarrier",
  "DeviceDefinition.udiDeviceIdentifier",
  "DeviceDefinition.packaging.udiDeviceIdentifier",
  "Invoice",
  "Practitioner.qualification"
]
deviceName: [
  "Device",
  "DeviceDefinition"
]
specialization: [
  "Device",
  "DeviceDefinition"
]
systemType: [
  "Device.specialization",
  "DeviceDefinition.specialization"
]
link: [
  "Device",
  "DeviceDefinition",
  "DiagnosticReport.media",
  "GraphDefinition",
  "GraphDefinition.link.target",
  "Patient",
  "Person",
  "TestScript.metadata",
  "TestScript.metadata.capability"
]
relation: [
  "Device.link",
  "DeviceDefinition.link"
]
relatedDevice: [
  "Device.link",
  "DeviceDefinition.link"
]
safety: [
  "Device",
  "DeviceDefinition"
]
udiDeviceIdentifier: [
  "DeviceDefinition",
  "DeviceDefinition.packaging"
]
justification: [
  "DeviceDefinition.classification",
  "Permission"
]
packaging: [
  "DeviceDefinition",
  "DeviceDefinition.packaging",
  "MedicationKnowledge",
  "MedicationKnowledge.packaging"
]
shelfLifeStorage: [
  "DeviceDefinition",
  "PackagedProductDefinition.package"
]
capability: [
  "DeviceDefinition",
  "TestScript.metadata"
]
material: [
  "DeviceDefinition",
  "MedicationKnowledge.packaging",
  "PackagedProductDefinition.package",
  "SpecimenDefinition.typeTested.container"
]
allergenicIndicator: [
  "DeviceDefinition.material",
  "Ingredient"
]
usageInstruction: [
  "DeviceDefinition.guideline",
  "DeviceDispense"
]
intendedUse: [
  "DeviceDefinition.guideline",
  "RegulatedAuthorization"
]
whenHandedOver: [
  "DeviceDispense",
  "MedicationDispense"
]
eventHistory: [
  "DeviceDispense",
  "MedicationAdministration",
  "MedicationDispense",
  "MedicationRequest"
]
color: [
  "DeviceMetric",
  "VisionPrescription.lensSpecification"
]
derivedFrom: [
  "DeviceUsage",
  "MedicationUsage",
  "NutritionIntake",
  "Observation",
  "Questionnaire",
  "SearchParameter",
  "SubscriptionTopic"
]
specimen: [
  "DiagnosticReport",
  "ImagingStudy.series",
  "MolecularSequence",
  "Observation",
  "ObservationDefinition",
  "ServiceRequest"
]
result: [
  "DiagnosticReport",
  "GuidanceResponse",
  "ResearchStudy",
  "TestReport",
  "TestReport.setup.action.operation",
  "TestReport.setup.action.assert"
]
attachment: [
  "DocumentReference.content",
  "SubstancePolymer.repeat.repeatUnit.structuralRepresentation"
]
statusHistory: [
  "Encounter",
  "EpisodeOfCare"
]
length: [
  "Encounter",
  "MolecularSequence.structureVariant",
  "SubstanceNucleicAcid.subunit",
  "SubstanceProtein.subunit"
]
rank: [
  "Encounter.diagnosis",
  "EpisodeOfCare.diagnosis"
]
origin: [
  "Encounter.hospitalization",
  "TestScript",
  "TestScript.metadata.capability",
  "TestScript.setup.action.operation"
]
header: [
  "Endpoint",
  "Subscription"
]
trigger: [
  "EventDefinition",
  "PlanDefinition.action"
]
citeAs[x]: [
  "Evidence",
  "EvidenceReport"
]
characteristic: [
  "EvidenceReport.subject",
  "EvidenceVariable",
  "Group",
  "HealthcareService",
  "MedicinalProductDefinition",
  "PackagedProductDefinition"
]
exclude: [
  "EvidenceReport.subject.characteristic",
  "EvidenceVariable.characteristic",
  "Group.characteristic",
  "ValueSet.compose"
]
definition[x]: [
  "EvidenceVariable.characteristic",
  "PlanDefinition.action"
]
range: [
  "EvidenceVariable.characteristic.timeFromStart",
  "ObservationDefinition.qualifiedValue"
]
handling: [
  "EvidenceVariable",
  "SpecimenDefinition.typeTested"
]
actorId: [
  "ExampleScenario.actor",
  "PlanDefinition.action.participant"
]
resourceId: [
  "ExampleScenario.instance",
  "ExampleScenario.instance.containedInstance"
]
resourceType: [
  "ExampleScenario.instance",
  "Subscription.filterBy",
  "SubscriptionTopic.resourceTrigger"
]
versionId: [
  "ExampleScenario.instance.version",
  "ExampleScenario.instance.containedInstance"
]
process: [
  "ExampleScenario",
  "ExampleScenario.process.step"
]
step: [
  "ExampleScenario.process",
  "ExampleScenario.process.step.alternative"
]
dataAbsentReason: [
  "FamilyMemberHistory",
  "Observation",
  "Observation.component"
]
deceased[x]: [
  "FamilyMemberHistory",
  "Patient",
  "Person",
  "Practitioner"
]
contributedToDeath: [
  "FamilyMemberHistory.condition",
  "FamilyMemberHistory.procedure"
]
detail[x]: [
  "Goal.target",
  "PlanDefinition.goal.target"
]
min: [
  "GraphDefinition.link",
  "MessageDefinition.focus",
  "OperationDefinition.parameter",
  "StructureMap.group.rule.source"
]
max: [
  "GraphDefinition.link",
  "MessageDefinition.focus",
  "OperationDefinition.parameter",
  "StructureMap.group.rule.source"
]
params: [
  "GraphDefinition.link.target",
  "TestScript.setup.action.operation"
]
inactive: [
  "Group.member",
  "ValueSet.compose",
  "ValueSet.expansion.contains"
]
dataRequirement: [
  "GuidanceResponse",
  "Library"
]
photo: [
  "HealthcareService",
  "Patient",
  "Person",
  "Practitioner",
  "RelatedPerson"
]
coverageArea: [
  "HealthcareService",
  "InsurancePlan",
  "InsurancePlan.plan"
]
eligibility: [
  "HealthcareService",
  "ResearchStudy.recruitment"
]
communication: [
  "HealthcareService",
  "Patient",
  "Person",
  "Practitioner",
  "RelatedPerson"
]
availableTime: [
  "HealthcareService",
  "PractitionerRole"
]
daysOfWeek: [
  "HealthcareService.availableTime",
  "Location.hoursOfOperation",
  "PractitionerRole.availableTime"
]
allDay: [
  "HealthcareService.availableTime",
  "Location.hoursOfOperation",
  "PractitionerRole.availableTime"
]
availableStartTime: [
  "HealthcareService.availableTime",
  "PractitionerRole.availableTime"
]
availableEndTime: [
  "HealthcareService.availableTime",
  "PractitionerRole.availableTime"
]
notAvailable: [
  "HealthcareService",
  "PractitionerRole"
]
during: [
  "HealthcareService.notAvailable",
  "PractitionerRole.notAvailable"
]
availabilityExceptions: [
  "HealthcareService",
  "Location",
  "PractitionerRole"
]
numberOfInstances: [
  "ImagingStudy",
  "ImagingStudy.series"
]
series: [
  "ImagingStudy",
  "Immunization.protocolApplied",
  "ImmunizationEvaluation",
  "ImmunizationRecommendation.recommendation"
]
uid: [
  "ImagingStudy.series",
  "ImagingStudy.series.instance"
]
route: [
  "Immunization",
  "MedicationAdministration.dosage",
  "MedicinalProductDefinition.administrableProduct"
]
reported: [
  "Immunization.reaction",
  "MedicationRequest"
]
targetDisease: [
  "Immunization.protocolApplied",
  "ImmunizationEvaluation",
  "ImmunizationRecommendation.recommendation"
]
doseNumber: [
  "Immunization.protocolApplied",
  "ImmunizationEvaluation",
  "ImmunizationRecommendation.recommendation"
]
seriesDoses: [
  "Immunization.protocolApplied",
  "ImmunizationEvaluation",
  "ImmunizationRecommendation.recommendation"
]
packageId: [
  "ImplementationGuide",
  "ImplementationGuide.dependsOn"
]
example[x]: [
  "ImplementationGuide.definition.resource",
  "ImplementationGuide.manifest.resource"
]
page: [
  "ImplementationGuide.definition",
  "ImplementationGuide.definition.page",
  "ImplementationGuide.manifest"
]
other: [
  "ImplementationGuide.manifest",
  "Patient.link"
]
strength: [
  "Ingredient.substance",
  "Ingredient.specifiedSubstance",
  "OperationDefinition.parameter.binding"
]
measurementPoint: [
  "Ingredient.substance.strength",
  "Ingredient.substance.strength.referenceStrength"
]
country: [
  "Ingredient.substance.strength",
  "Ingredient.substance.strength.referenceStrength",
  "MedicinalProductDefinition.name.countryLanguage"
]
strength[x]: [
  "Ingredient.substance.strength.referenceStrength",
  "Medication.ingredient",
  "MedicationKnowledge.ingredient"
]
requirement: [
  "InsurancePlan.coverage.benefit",
  "PlanDefinition.action.input",
  "PlanDefinition.action.output",
  "SpecimenDefinition.typeTested"
]
cost: [
  "InsurancePlan.plan.generalCost",
  "InsurancePlan.plan.specificCost.benefit",
  "MedicationKnowledge",
  "MedicationKnowledge.packaging"
]
expiry: [
  "InventoryReport.inventoryListing.items",
  "NutritionProduct.instance",
  "Substance.instance"
]
scoring: [
  "Measure",
  "Measure.group",
  "MeasureReport"
]
scoringUnit: [
  "Measure",
  "Measure.group"
]
rationale: [
  "Measure",
  "RiskAssessment.prediction"
]
improvementNotation: [
  "Measure",
  "Measure.group",
  "MeasureReport"
]
criteria: [
  "Measure.group.population",
  "Measure.group.stratifier",
  "Measure.group.stratifier.component",
  "Measure.supplementalData"
]
stratifier: [
  "Measure.group",
  "MeasureReport.group"
]
subjectResults: [
  "MeasureReport.group.population",
  "MeasureReport.group.stratifier.stratum.population"
]
measureScore[x]: [
  "MeasureReport.group",
  "MeasureReport.group.stratifier.stratum"
]
doseForm: [
  "Medication",
  "MedicationKnowledge"
]
isActive: [
  "Medication.ingredient",
  "MedicationKnowledge.ingredient"
]
rate[x]: [
  "MedicationAdministration.dosage",
  "NutritionOrder.enteralFormula.administration"
]
renderedDosageInstruction: [
  "MedicationDispense",
  "MedicationRequest",
  "MedicationUsage"
]
dosageInstruction: [
  "MedicationDispense",
  "MedicationRequest"
]
substitution: [
  "MedicationDispense",
  "MedicationKnowledge.regulatory",
  "MedicationRequest"
]
detectedIssue: [
  "MedicationDispense",
  "MedicationRequest"
]
synonym: [
  "MedicationKnowledge",
  "SubstanceDefinition.name"
]
effectiveDate: [
  "MedicationKnowledge.cost",
  "MedicinalProductDefinition.operation"
]
schedule: [
  "MedicationKnowledge.regulatory",
  "NutritionIntake.consumedItem",
  "NutritionOrder.oralDiet",
  "NutritionOrder.supplement",
  "NutritionOrder.enteralFormula.administration",
  "Slot"
]
validityPeriod: [
  "MedicationRequest.dispenseRequest",
  "RegulatedAuthorization"
]
legalStatusOfSupply: [
  "MedicinalProductDefinition",
  "PackagedProductDefinition"
]
marketingStatus: [
  "MedicinalProductDefinition",
  "PackagedProductDefinition"
]
attachedDocument: [
  "MedicinalProductDefinition",
  "PackagedProductDefinition",
  "RegulatedAuthorization"
]
productName: [
  "MedicinalProductDefinition.name",
  "NutritionOrder.supplement"
]
package: [
  "MedicinalProductDefinition",
  "MedicinalProductDefinition.package",
  "PackagedProductDefinition",
  "PackagedProductDefinition.package"
]
base: [
  "MessageDefinition",
  "OperationDefinition",
  "SearchParameter",
  "VisionPrescription.lensSpecification.prism"
]
message: [
  "MessageDefinition.allowedResponse",
  "TestReport.setup.action.operation",
  "TestReport.setup.action.assert"
]
details: [
  "MessageHeader.response",
  "OperationOutcome.issue"
]
orientation: [
  "MolecularSequence.referenceSeq",
  "SubstancePolymer.repeat.repeatUnit"
]
score: [
  "MolecularSequence.quality",
  "MolecularSequence.quality.roc",
  "TestReport"
]
precision: [
  "MolecularSequence.quality",
  "MolecularSequence.quality.roc"
]
preferred: [
  "NamingSystem.uniqueId",
  "Patient.communication",
  "Person.communication",
  "RelatedPerson.communication",
  "SubstanceDefinition.name"
]
nutrient: [
  "NutritionIntake.ingredientLabel",
  "NutritionOrder.oralDiet",
  "NutritionProduct"
]
instruction: [
  "NutritionOrder.oralDiet",
  "NutritionOrder.supplement",
  "SpecimenDefinition.typeTested.handling"
]
interpretation: [
  "Observation",
  "Observation.component"
]
referenceRange: [
  "Observation",
  "Observation.component",
  "SubstanceDefinition.property"
]
low: [
  "Observation.referenceRange",
  "SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation"
]
high: [
  "Observation.referenceRange",
  "SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation"
]
appliesTo: [
  "Observation.referenceRange",
  "ObservationDefinition.qualifiedValue"
]
age: [
  "Observation.referenceRange",
  "ObservationDefinition.qualifiedValue"
]
hasMember: [
  "Observation",
  "ObservationDefinition"
]
derivedFromCanonical: [
  "ObservationDefinition",
  "SpecimenDefinition"
]
permittedDataType: [
  "ObservationDefinition",
  "ObservationDefinition.component"
]
quantitativeDetails: [
  "ObservationDefinition",
  "ObservationDefinition.component"
]
qualifiedValue: [
  "ObservationDefinition",
  "ObservationDefinition.component"
]
gender: [
  "ObservationDefinition.qualifiedValue",
  "Patient",
  "Patient.contact",
  "Person",
  "Practitioner",
  "RelatedPerson"
]
sourceId: [
  "OperationDefinition.parameter.referencedFrom",
  "TestScript.variable",
  "TestScript.setup.action.operation",
  "TestScript.setup.action.assert"
]
healthcareService: [
  "OrganizationAffiliation",
  "PractitionerRole"
]
amount[x]: [
  "PackagedProductDefinition.package.containedItem",
  "SubstanceDefinition.moiety",
  "SubstanceDefinition.property",
  "SubstanceDefinition.relationship",
  "SubstanceReferenceInformation.target"
]
birthDate: [
  "Patient",
  "Person",
  "Practitioner",
  "RelatedPerson"
]
maritalStatus: [
  "Patient",
  "Person"
]
prefix: [
  "PlanDefinition.action",
  "Questionnaire.item",
  "RequestGroup.action"
]
textEquivalent: [
  "PlanDefinition.action",
  "RequestGroup.action"
]
input: [
  "PlanDefinition.action",
  "StructureMap.group",
  "Task"
]
relatedData: [
  "PlanDefinition.action.input",
  "PlanDefinition.action.output"
]
output: [
  "PlanDefinition.action",
  "Task"
]
relatedAction: [
  "PlanDefinition.action",
  "RequestGroup.action"
]
targetId: [
  "PlanDefinition.action.relatedAction",
  "RequestGroup.action.relatedAction",
  "TestScript.setup.action.operation"
]
offset[x]: [
  "PlanDefinition.action.relatedAction",
  "RequestGroup.action.relatedAction"
]
groupingBehavior: [
  "PlanDefinition.action",
  "RequestGroup.action"
]
selectionBehavior: [
  "PlanDefinition.action",
  "RequestGroup.action"
]
requiredBehavior: [
  "PlanDefinition.action",
  "RequestGroup.action"
]
precheckBehavior: [
  "PlanDefinition.action",
  "RequestGroup.action"
]
cardinalityBehavior: [
  "PlanDefinition.action",
  "RequestGroup.action"
]
date[x]: [
  "RegulatedAuthorization.relatedDate",
  "RegulatedAuthorization.case"
]
label: [
  "ResearchStudy",
  "TestScript.setup.action.operation",
  "TestScript.setup.action.assert"
]
phase: [
  "ResearchStudy",
  "TestScript.scope"
]
container: [
  "Specimen",
  "SpecimenDefinition.typeTested"
]
capacity: [
  "Specimen.container",
  "SpecimenDefinition.typeTested.container"
]
additive[x]: [
  "Specimen.container",
  "SpecimenDefinition.typeTested.container.additive"
]
structure: [
  "StructureMap",
  "SubstanceDefinition"
]
listMode: [
  "StructureMap.group.rule.source",
  "StructureMap.group.rule.target"
]
variable: [
  "StructureMap.group.rule.source",
  "StructureMap.group.rule.target",
  "StructureMap.group.rule.dependent",
  "TestScript"
]
searchParamName: [
  "Subscription.filterBy",
  "SubscriptionTopic.resourceTrigger.canFilterBy"
]
searchModifier: [
  "Subscription.filterBy",
  "SubscriptionTopic.resourceTrigger.canFilterBy"
]
stereochemistry: [
  "SubstanceDefinition.moiety",
  "SubstanceDefinition.structure"
]
opticalActivity: [
  "SubstanceDefinition.moiety",
  "SubstanceDefinition.structure"
]
molecularFormula: [
  "SubstanceDefinition.moiety",
  "SubstanceDefinition.structure"
]
amountType: [
  "SubstanceDefinition.moiety",
  "SubstanceDefinition.relationship",
  "SubstanceReferenceInformation.target"
]
molecularWeight: [
  "SubstanceDefinition",
  "SubstanceDefinition.structure"
]
representation: [
  "SubstanceDefinition.structure",
  "SubstanceDefinition.structure.representation",
  "SubstancePolymer.repeat.repeatUnit.structuralRepresentation"
]
translation: [
  "SubstanceDefinition.name",
  "TerminologyCapabilities",
  "TerminologyCapabilities.closure"
]
isDefining: [
  "SubstanceDefinition.relationship",
  "SubstancePolymer.monomerSet.startingMaterial"
]
genus: [
  "SubstanceDefinition.sourceMaterial",
  "SubstanceSourceMaterial.organism"
]
species: [
  "SubstanceDefinition.sourceMaterial",
  "SubstanceSourceMaterial.organism"
]
countryOfOrigin: [
  "SubstanceDefinition.sourceMaterial",
  "SubstanceSourceMaterial"
]
sequenceType: [
  "SubstanceNucleicAcid",
  "SubstanceProtein"
]
numberOfSubunits: [
  "SubstanceNucleicAcid",
  "SubstanceProtein"
]
subunit: [
  "SubstanceNucleicAcid",
  "SubstanceNucleicAcid.subunit",
  "SubstanceProtein",
  "SubstanceProtein.subunit"
]
sequenceAttachment: [
  "SubstanceNucleicAcid.subunit",
  "SubstanceProtein.subunit"
]
residueSite: [
  "SubstanceNucleicAcid.subunit.linkage",
  "SubstanceNucleicAcid.subunit.sugar"
]
gene: [
  "SubstanceReferenceInformation",
  "SubstanceReferenceInformation.gene"
]
organism: [
  "SubstanceReferenceInformation.target",
  "SubstanceSourceMaterial"
]
op: [
  "TerminologyCapabilities.codeSystem.version.filter",
  "ValueSet.compose.include.filter"
]
expansion: [
  "TerminologyCapabilities",
  "ValueSet"
]
setup: [
  "TestReport",
  "TestScript"
]
assert: [
  "TestReport.setup.action",
  "TestReport.test.action",
  "TestScript.setup.action",
  "TestScript.test.action"
]
test: [
  "TestReport",
  "TestScript"
]
teardown: [
  "TestReport",
  "TestScript"
]
index: [
  "TestScript.origin",
  "TestScript.destination"
]
headerField: [
  "TestScript.variable",
  "TestScript.setup.action.assert"
]
contains: [
  "ValueSet.expansion",
  "ValueSet.expansion.contains"
]
communicationMethod: [
  "VerificationResult.primarySource",
  "VerificationResult.attestation"
]


some mapped:
identifier: {
  "w5": {
    "FiveWs.identifier": [
      "Account",
      "ActivityDefinition",
      "AllergyIntolerance",
      "Appointment",
      "AppointmentResponse",
      "Basic",
      "BiologicallyDerivedProduct",
      "BodyStructure",
      "CanonicalResource",
      "CarePlan",
      "CareTeam",
      "ChargeItem",
      "ChargeItemDefinition",
      "Citation",
      "Claim",
      "Claim.insurance",
      "ClaimResponse",
      "ClinicalImpression",
      "CodeSystem",
      "Communication",
      "CommunicationRequest",
      "Composition",
      "ConceptMap",
      "ConceptMap2",
      "Condition",
      "ConditionDefinition",
      "Consent",
      "Coverage",
      "CoverageEligibilityRequest",
      "CoverageEligibilityResponse",
      "DetectedIssue",
      "Device",
      "DeviceDefinition",
      "DeviceDispense",
      "DeviceMetric",
      "DeviceRequest",
      "DeviceUsage",
      "DiagnosticReport",
      "DocumentManifest",
      "DocumentReference",
      "DocumentReference.content",
      "Encounter",
      "Endpoint",
      "EpisodeOfCare",
      "EventDefinition",
      "Evidence",
      "EvidenceReport",
      "EvidenceVariable",
      "ExampleScenario",
      "ExplanationOfBenefit",
      "FamilyMemberHistory",
      "Flag",
      "Goal",
      "Group",
      "GuidanceResponse",
      "HealthcareService",
      "ImagingStudy",
      "Immunization",
      "ImmunizationEvaluation",
      "ImmunizationRecommendation",
      "InsurancePlan",
      "InsurancePlan.plan",
      "InventoryReport",
      "Invoice",
      "Library",
      "List",
      "Location",
      "Measure",
      "MeasureReport",
      "Medication",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage",
      "MessageDefinition",
      "MolecularSequence",
      "NutritionIntake",
      "NutritionOrder",
      "Observation",
      "Organization",
      "OrganizationAffiliation",
      "Patient",
      "PaymentNotice",
      "PaymentReconciliation",
      "Person",
      "PlanDefinition",
      "Practitioner",
      "PractitionerRole",
      "Procedure",
      "Questionnaire",
      "QuestionnaireResponse",
      "RelatedPerson",
      "RequestGroup",
      "ResearchStudy",
      "ResearchSubject",
      "RiskAssessment",
      "Schedule",
      "ServiceRequest",
      "Slot",
      "Specimen",
      "StructureMap",
      "Subscription",
      "SubscriptionTopic",
      "Substance",
      "SupplyRequest",
      "Task",
      "TerminologyCapabilities",
      "TestReport",
      "TestScript",
      "ValueSet",
      "VisionPrescription"
    ]
  },
  "bare": [
    "AdministrableProductDefinition",
    "AdverseEvent",
    "CatalogEntry",
    "Citation.citedArtifact",
    "Citation.citedArtifact.publicationForm.publishedIn",
    "Citation.citedArtifact.contributorship.entry",
    "Citation.citedArtifact.contributorship.entry.affiliationInfo",
    "ClaimResponse.payment",
    "ClinicalUseIssue",
    "Contract",
    "Contract.term",
    "Contract.term.offer",
    "Contract.term.asset.valuedItem",
    "DeviceDefinition.packaging",
    "DocumentManifest.related",
    "EnrollmentRequest",
    "EnrollmentResponse",
    "ExplanationOfBenefit.payment",
    "Ingredient",
    "ManufacturedItemDefinition",
    "MedicationKnowledge",
    "MedicationKnowledge.packaging",
    "MedicinalProductDefinition",
    "MessageHeader.response",
    "NutritionProduct.instance",
    "ObservationDefinition",
    "PackagedProductDefinition",
    "PackagedProductDefinition.package",
    "PaymentReconciliation.detail",
    "Practitioner.qualification",
    "RegulatedAuthorization",
    "RegulatedAuthorization.case",
    "Specimen.container",
    "SpecimenDefinition",
    "Substance.instance",
    "SubstanceDefinition",
    "SubstanceDefinition.moiety",
    "SubstanceNucleicAcid.subunit.linkage",
    "SubstanceNucleicAcid.subunit.sugar",
    "SubstancePolymer",
    "SupplyDelivery",
    "ValueSet.expansion"
  ]
}
status: {
  "w5": {
    "FiveWs.status": [
      "Account",
      "ActivityDefinition",
      "AdverseEvent",
      "Appointment",
      "CanonicalResource",
      "CapabilityStatement",
      "CapabilityStatement2",
      "CarePlan",
      "CareTeam",
      "ChargeItem",
      "ChargeItemDefinition",
      "Claim",
      "ClaimResponse",
      "ClinicalImpression",
      "CodeSystem",
      "Communication",
      "CommunicationRequest",
      "Composition",
      "ConceptMap",
      "ConceptMap2",
      "ConditionDefinition",
      "Consent",
      "Contract",
      "Coverage",
      "CoverageEligibilityRequest",
      "CoverageEligibilityResponse",
      "DetectedIssue",
      "Device",
      "DeviceDispense",
      "DeviceRequest",
      "DeviceUsage",
      "DiagnosticReport",
      "DocumentManifest",
      "DocumentReference",
      "Encounter",
      "Endpoint",
      "EpisodeOfCare",
      "EventDefinition",
      "Evidence",
      "EvidenceReport",
      "EvidenceVariable",
      "ExampleScenario",
      "ExplanationOfBenefit",
      "FamilyMemberHistory",
      "Flag",
      "GraphDefinition",
      "GuidanceResponse",
      "ImagingStudy",
      "Immunization",
      "ImmunizationEvaluation",
      "ImplementationGuide",
      "InsurancePlan",
      "InventoryReport",
      "Invoice",
      "Library",
      "List",
      "Location",
      "Measure",
      "MeasureReport",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage",
      "MessageDefinition",
      "NamingSystem",
      "NutritionIntake",
      "NutritionOrder",
      "NutritionProduct",
      "Observation",
      "OperationDefinition",
      "PaymentNotice",
      "PaymentReconciliation",
      "PlanDefinition",
      "Procedure",
      "Questionnaire",
      "QuestionnaireResponse",
      "RequestGroup",
      "ResearchStudy",
      "ResearchSubject",
      "RiskAssessment",
      "SearchParameter",
      "ServiceRequest",
      "Specimen",
      "StructureMap",
      "Subscription",
      "SubscriptionStatus",
      "SubscriptionTopic",
      "Substance",
      "SupplyRequest",
      "Task",
      "TerminologyCapabilities",
      "TestReport",
      "TestScript",
      "ValueSet",
      "VisionPrescription"
    ]
  },
  "bare": [
    "AdministrableProductDefinition.property",
    "Appointment.participant",
    "BiologicallyDerivedProduct",
    "CarePlan.activity.plannedActivityDetail",
    "CatalogEntry",
    "Citation",
    "ClinicalUseIssue",
    "Contract.term.action",
    "Encounter.statusHistory",
    "Encounter.location",
    "EnrollmentRequest",
    "EnrollmentResponse",
    "EpisodeOfCare.statusHistory",
    "Medication",
    "MedicationKnowledge",
    "MedicinalProductDefinition",
    "ObservationDefinition",
    "PackagedProductDefinition",
    "Permission",
    "RegulatedAuthorization",
    "RegulatedAuthorization.case",
    "Slot",
    "SpecimenDefinition",
    "SubstanceDefinition",
    "SubstanceDefinition.code",
    "SubstanceDefinition.name",
    "SubstanceDefinition.name.official",
    "SupplyDelivery",
    "VerificationResult"
  ]
}
type: {
  "w5": {
    "FiveWs.class": [
      "Account",
      "AllergyIntolerance",
      "Claim",
      "ClaimResponse",
      "Composition",
      "Coverage",
      "DeviceMetric",
      "DocumentManifest",
      "Encounter",
      "EpisodeOfCare",
      "ExplanationOfBenefit",
      "Group",
      "InsurancePlan",
      "Location",
      "MeasureReport",
      "Organization"
    ],
    "FiveWs.what[x]": [
      "AuditEvent",
      "AuditEvent.entity",
      "Contract",
      "Contract.term",
      "Contract.term.offer",
      "Device.deviceName",
      "DeviceDefinition.deviceName",
      "DocumentReference",
      "Invoice",
      "Library",
      "NutritionOrder.oralDiet",
      "NutritionOrder.supplement",
      "Specimen",
      "SubscriptionStatus"
    ],
    "FiveWs.who": [
      "AuditEvent.agent"
    ],
    "FiveWs.where[x]": [
      "AuditEvent.agent.network"
    ],
    "FiveWs.witness": [
      "AuditEvent.source"
    ],
    "FiveWs.context": [
      "AuditEvent.entity.detail"
    ],
    "FiveWs.actor": [
      "Contract.signer"
    ]
  },
  "bare": [
    "ActivityDefinition.participant",
    "AdministrableProductDefinition.property",
    "Appointment.participant",
    "CapabilityStatement.rest.resource",
    "CapabilityStatement.rest.resource.searchParam",
    "CapabilityStatement2.rest.resource",
    "CapabilityStatement2.rest.resource.searchParam",
    "CatalogEntry",
    "ChargeItemDefinition.propertyGroup.priceComponent",
    "Citation.classification",
    "Citation.citedArtifact.title",
    "Citation.citedArtifact.abstract",
    "Citation.citedArtifact.part",
    "Citation.citedArtifact.publicationForm.publishedIn",
    "Citation.citedArtifact.webLocation",
    "Citation.citedArtifact.classification",
    "Citation.citedArtifact.contributorship.entry.contributionInstance",
    "Citation.citedArtifact.contributorship.summary",
    "Claim.payee",
    "Claim.diagnosis",
    "Claim.procedure",
    "Claim.accident",
    "ClaimResponse.payment",
    "ClaimResponse.processNote",
    "ClinicalUseIssue",
    "ClinicalUseIssue.interaction",
    "CodeSystem.property",
    "Condition.stage",
    "ConditionDefinition.precondition",
    "Consent.provision",
    "Contract.contentDefinition",
    "Contract.term.asset",
    "Contract.term.action",
    "Coverage.class",
    "Coverage.costToBeneficiary",
    "Coverage.costToBeneficiary.exception",
    "CoverageEligibilityResponse.insurance.item.benefit",
    "Device",
    "Device.version",
    "Device.property",
    "DeviceDefinition.classification",
    "DeviceDefinition.packaging",
    "DeviceDefinition.version",
    "DeviceDefinition.capability",
    "DeviceDefinition.property",
    "DeviceDispense",
    "DeviceMetric.calibration",
    "Encounter.participant",
    "Evidence.certainty",
    "EvidenceReport",
    "ExampleScenario.actor",
    "ExampleScenario.process.step.operation",
    "ExplanationOfBenefit.payee",
    "ExplanationOfBenefit.diagnosis",
    "ExplanationOfBenefit.procedure",
    "ExplanationOfBenefit.accident",
    "ExplanationOfBenefit.payment",
    "ExplanationOfBenefit.processNote",
    "ExplanationOfBenefit.benefitBalance.financial",
    "GraphDefinition.link.target",
    "HealthcareService",
    "ImplementationGuide.global",
    "InsurancePlan.coverage",
    "InsurancePlan.coverage.benefit",
    "InsurancePlan.plan",
    "InsurancePlan.plan.generalCost",
    "InsurancePlan.plan.specificCost.benefit",
    "InsurancePlan.plan.specificCost.benefit.cost",
    "Invoice.lineItem.priceComponent",
    "Linkage.item",
    "ManufacturedItemDefinition.property",
    "Measure",
    "Measure.group",
    "MedicationDispense",
    "MedicationDispense.substitution",
    "MedicationKnowledge.relatedMedicationKnowledge",
    "MedicationKnowledge.monograph",
    "MedicationKnowledge.cost",
    "MedicationKnowledge.monitoringProgram",
    "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage",
    "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic",
    "MedicationKnowledge.medicineClassification",
    "MedicationKnowledge.packaging",
    "MedicationKnowledge.drugCharacteristic",
    "MedicationKnowledge.regulatory.substitution",
    "MedicationKnowledge.kineticCharacteristic",
    "MedicinalProductDefinition",
    "MedicinalProductDefinition.contact",
    "MedicinalProductDefinition.name",
    "MedicinalProductDefinition.name.namePart",
    "MedicinalProductDefinition.crossReference",
    "MedicinalProductDefinition.operation",
    "MedicinalProductDefinition.package",
    "MolecularSequence",
    "MolecularSequence.quality",
    "MolecularSequence.repository",
    "NamingSystem",
    "NamingSystem.uniqueId",
    "NutritionIntake.consumedItem",
    "NutritionProduct.productCharacteristic",
    "Observation.referenceRange",
    "OperationDefinition",
    "OperationDefinition.parameter",
    "PackagedProductDefinition",
    "PackagedProductDefinition.package",
    "PackagedProductDefinition.package.property",
    "Patient.link",
    "PaymentReconciliation.detail",
    "PaymentReconciliation.processNote",
    "PlanDefinition",
    "PlanDefinition.actor.option",
    "PlanDefinition.action.participant",
    "PlanDefinition.action",
    "Provenance.agent",
    "Questionnaire.item",
    "RegulatedAuthorization",
    "RegulatedAuthorization.relatedDate",
    "RegulatedAuthorization.case",
    "RequestGroup.action.participant",
    "RequestGroup.action",
    "ResearchStudy.label",
    "ResearchStudy.classification",
    "ResearchStudy.comparisonGroup",
    "ResearchStudy.objective",
    "ResearchStudy.outcomeMeasure",
    "ResearchStudy.webLocation",
    "ResearchSubject.progress",
    "SearchParameter",
    "Specimen.container",
    "SpecimenDefinition.typeTested",
    "SpecimenDefinition.typeTested.container",
    "StructureMap.group.input",
    "StructureMap.group.rule.source",
    "SubstanceDefinition.molecularWeight",
    "SubstanceDefinition.structure.representation",
    "SubstanceDefinition.name",
    "SubstanceDefinition.relationship",
    "SubstanceDefinition.sourceMaterial",
    "SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation",
    "SubstancePolymer.repeat.repeatUnit.structuralRepresentation",
    "SubstanceReferenceInformation.geneElement",
    "SubstanceReferenceInformation.target",
    "SupplyDelivery",
    "Task.input",
    "Task.output",
    "TestReport.participant",
    "TestScript.setup.action.operation",
    "VerificationResult.primarySource"
  ]
}
name: {
  "w5": {
    "FiveWs.what[x]": [
      "Account",
      "Endpoint"
    ],
    "FiveWs.who": [
      "AuditEvent.agent"
    ],
    "FiveWs.context": [
      "AuditEvent.entity"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "CanonicalResource",
    "CapabilityStatement",
    "CapabilityStatement.software",
    "CapabilityStatement.rest.resource.searchParam",
    "CapabilityStatement.rest.resource.operation",
    "CapabilityStatement2",
    "CapabilityStatement2.software",
    "CapabilityStatement2.rest.resource.searchParam",
    "CapabilityStatement2.rest.resource.operation",
    "CareTeam",
    "CatalogEntry",
    "Citation",
    "Citation.citedArtifact.contributorship.entry",
    "CodeSystem",
    "ConceptMap",
    "ConceptMap2",
    "ConditionDefinition",
    "Contract",
    "Coverage.class",
    "CoverageEligibilityResponse.insurance.item",
    "Device.deviceName",
    "DeviceDefinition.deviceName",
    "DeviceDefinition.packaging.distributor",
    "EventDefinition",
    "EvidenceVariable",
    "EvidenceVariable.category",
    "ExampleScenario",
    "ExampleScenario.actor",
    "ExampleScenario.instance",
    "ExampleScenario.process.step.operation",
    "ExplanationOfBenefit.benefitBalance",
    "FamilyMemberHistory",
    "GraphDefinition",
    "Group",
    "HealthcareService",
    "ImplementationGuide",
    "ImplementationGuide.definition.grouping",
    "ImplementationGuide.definition.resource",
    "ImplementationGuide.manifest.page",
    "InsurancePlan",
    "InsurancePlan.contact",
    "Library",
    "Location",
    "Measure",
    "MedicationKnowledge.monitoringProgram",
    "MedicinalProductDefinition",
    "MessageDefinition",
    "MessageHeader.destination",
    "MessageHeader.source",
    "MolecularSequence.repository",
    "NamingSystem",
    "ObservationDefinition",
    "OperationDefinition",
    "OperationDefinition.parameter",
    "Organization",
    "Organization.contact",
    "PackagedProductDefinition",
    "Parameters.parameter",
    "Patient",
    "Patient.contact",
    "Person",
    "PlanDefinition",
    "Practitioner",
    "Questionnaire",
    "RelatedPerson",
    "ResearchStudy",
    "ResearchStudy.associatedParty",
    "ResearchStudy.comparisonGroup",
    "ResearchStudy.objective",
    "ResearchStudy.outcomeMeasure",
    "SearchParameter",
    "StructureMap",
    "StructureMap.group",
    "StructureMap.group.input",
    "StructureMap.group.rule",
    "StructureMap.group.rule.dependent",
    "Subscription",
    "SubstanceDefinition.moiety",
    "SubstanceDefinition",
    "SubstanceDefinition.name",
    "SubstanceNucleicAcid.subunit.linkage",
    "SubstanceNucleicAcid.subunit.sugar",
    "TerminologyCapabilities",
    "TerminologyCapabilities.software",
    "TerminologyCapabilities.expansion.parameter",
    "TestReport",
    "TestReport.test",
    "TestScript",
    "TestScript.variable",
    "TestScript.test",
    "ValueSet",
    "ValueSet.expansion.parameter"
  ]
}
subject: {
  "w5": {
    "FiveWs.subject[x]": [
      "Account",
      "AdverseEvent",
      "Basic",
      "CarePlan",
      "CareTeam",
      "ChargeItem",
      "ClinicalImpression",
      "Communication",
      "CommunicationRequest",
      "Composition",
      "Condition",
      "Consent",
      "DeviceDispense",
      "DeviceRequest",
      "DeviceUsage",
      "DiagnosticReport",
      "DocumentManifest",
      "DocumentReference",
      "Encounter",
      "Flag",
      "Goal",
      "GuidanceResponse",
      "ImagingStudy",
      "Invoice",
      "List",
      "MeasureReport",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage",
      "NutritionIntake",
      "Observation",
      "Procedure",
      "QuestionnaireResponse",
      "RequestGroup",
      "RiskAssessment",
      "ServiceRequest",
      "Specimen"
    ],
    "FiveWs.who": [
      "Appointment"
    ]
  },
  "bare": [
    "AdministrableProductDefinition",
    "ClinicalUseIssue",
    "Contract",
    "Contract.term.action",
    "EvidenceReport",
    "ObservationDefinition",
    "PackagedProductDefinition",
    "RegulatedAuthorization",
    "ResearchSubject"
  ]
}
priority: {
  "w5": {
    "FiveWs.class": [
      "Appointment",
      "CoverageEligibilityRequest"
    ],
    "FiveWs.grade": [
      "Communication",
      "CommunicationRequest",
      "DeviceRequest",
      "Encounter",
      "Goal",
      "MedicationRequest",
      "RequestGroup",
      "ServiceRequest",
      "SupplyRequest",
      "Task"
    ]
  },
  "bare": [
    "Account.coverage",
    "ActivityDefinition",
    "Claim",
    "ExplanationOfBenefit",
    "PlanDefinition.goal",
    "PlanDefinition.action",
    "RequestGroup.action"
  ]
}
owner: {
  "w5": {
    "FiveWs.source": [
      "Device",
      "DeviceDefinition"
    ],
    "FiveWs.actor": [
      "Task"
    ]
  },
  "bare": [
    "Account"
  ]
}
description: {
  "w5": {
    "FiveWs.what[x]": [
      "BodyStructure",
      "CarePlan",
      "Goal"
    ]
  },
  "bare": [
    "Account",
    "ActivityDefinition",
    "AllergyIntolerance.reaction",
    "Appointment",
    "BiologicallyDerivedProduct.processing",
    "BiologicallyDerivedProduct.manipulation",
    "BiologicallyDerivedProduct.storage",
    "CanonicalResource",
    "CapabilityStatement",
    "CapabilityStatement.implementation",
    "CapabilityStatement.rest.security",
    "CapabilityStatement2",
    "CapabilityStatement2.implementation",
    "CarePlan.activity.plannedActivityDetail",
    "ChargeItemDefinition",
    "ChargeItemDefinition.applicability",
    "Citation",
    "ClinicalImpression",
    "ClinicalUseIssue",
    "CodeSystem",
    "CodeSystem.filter",
    "CodeSystem.property",
    "ConceptMap",
    "ConceptMap2",
    "ConditionDefinition",
    "CoverageEligibilityResponse.insurance.item",
    "DeviceDefinition.capability",
    "DocumentManifest",
    "DocumentReference",
    "EventDefinition",
    "Evidence",
    "Evidence.variableDefinition",
    "Evidence.certainty",
    "EvidenceVariable",
    "EvidenceVariable.characteristic",
    "EvidenceVariable.characteristic.timeFromStart",
    "ExampleScenario.actor",
    "ExampleScenario.instance",
    "ExampleScenario.instance.version",
    "ExampleScenario.process",
    "ExampleScenario.process.step.operation",
    "ExampleScenario.process.step.alternative",
    "ExplanationOfBenefit.benefitBalance",
    "GraphDefinition",
    "GraphDefinition.link",
    "GraphDefinition.link.target.compartment",
    "HealthcareService.notAvailable",
    "ImagingStudy",
    "ImagingStudy.series",
    "ImmunizationEvaluation",
    "ImmunizationRecommendation.recommendation",
    "ImplementationGuide",
    "ImplementationGuide.definition.grouping",
    "ImplementationGuide.definition.resource",
    "Ingredient",
    "Library",
    "Location",
    "Measure",
    "Measure.group",
    "Measure.group.population",
    "Measure.group.stratifier",
    "Measure.group.stratifier.component",
    "Measure.supplementalData",
    "MedicinalProductDefinition",
    "MessageDefinition",
    "NamingSystem",
    "ObservationDefinition",
    "OperationDefinition",
    "PackagedProductDefinition",
    "PlanDefinition",
    "PlanDefinition.goal",
    "PlanDefinition.actor",
    "PlanDefinition.action",
    "PractitionerRole.notAvailable",
    "Questionnaire",
    "RegulatedAuthorization",
    "RequestGroup.action",
    "ResearchStudy",
    "ResearchStudy.comparisonGroup",
    "ResearchStudy.objective",
    "ResearchStudy.outcomeMeasure",
    "SearchParameter",
    "Specimen.processing",
    "Specimen.container",
    "SpecimenDefinition",
    "SpecimenDefinition.typeTested.container",
    "StructureMap",
    "SubscriptionTopic",
    "SubscriptionTopic.resourceTrigger",
    "Substance",
    "SubstanceDefinition",
    "Task",
    "TerminologyCapabilities",
    "TerminologyCapabilities.implementation",
    "TestReport.test",
    "TestScript",
    "TestScript.metadata.link",
    "TestScript.metadata.capability",
    "TestScript.variable",
    "TestScript.setup.action.operation",
    "TestScript.setup.action.assert",
    "TestScript.test",
    "ValueSet"
  ]
}
party: {
  "w5": {
    "FiveWs.witness": [
      "Composition.attester",
      "DocumentReference.attester"
    ],
    "FiveWs.author": [
      "Contract.signer"
    ]
  },
  "bare": [
    "Account.guarantor",
    "Claim.payee",
    "Contract.term.offer",
    "ExplanationOfBenefit.payee",
    "ResearchStudy.associatedParty"
  ]
}
period: {
  "w5": {
    "FiveWs.done[x]": [
      "AuditEvent",
      "Coverage",
      "Encounter",
      "Endpoint",
      "OrganizationAffiliation",
      "PaymentReconciliation",
      "PractitionerRole",
      "RelatedPerson",
      "ResearchStudy"
    ],
    "FiveWs.planned": [
      "CarePlan"
    ],
    "FiveWs.init": [
      "CareTeam",
      "EpisodeOfCare"
    ],
    "FiveWs.context": [
      "Flag"
    ]
  },
  "bare": [
    "Account.guarantor",
    "Appointment.participant",
    "Citation.statusDate",
    "Citation.citedArtifact.statusDate",
    "Composition.event",
    "Consent.provision",
    "Contract.term.asset",
    "Coverage.costToBeneficiary.exception",
    "DocumentReference",
    "Encounter.statusHistory",
    "Encounter.classHistory",
    "Encounter.participant",
    "Encounter.location",
    "EpisodeOfCare.statusHistory",
    "EvidenceReport.subject.characteristic",
    "Group.characteristic",
    "Group.member",
    "InsurancePlan",
    "MeasureReport",
    "MedicationKnowledge.regulatory.maxDispense",
    "NamingSystem.uniqueId",
    "Patient.contact",
    "Practitioner.qualification",
    "ResearchStudy.statusDate",
    "ResearchSubject",
    "Task.restriction"
  ]
}
url: {
  "w5": {
    "FiveWs.identifier": [
      "ActivityDefinition",
      "CanonicalResource",
      "CapabilityStatement",
      "CapabilityStatement2",
      "ChargeItemDefinition",
      "Citation",
      "CodeSystem",
      "ConceptMap",
      "ConceptMap2",
      "ConditionDefinition",
      "EventDefinition",
      "Evidence",
      "EvidenceReport",
      "EvidenceVariable",
      "ExampleScenario",
      "GraphDefinition",
      "ImplementationGuide",
      "Library",
      "Measure",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "PlanDefinition",
      "Questionnaire",
      "SearchParameter",
      "StructureMap",
      "SubscriptionTopic",
      "TerminologyCapabilities",
      "TestScript",
      "ValueSet"
    ],
    "FiveWs.where[x]": [
      "Device"
    ]
  },
  "bare": [
    "CapabilityStatement.implementation",
    "CapabilityStatement2.implementation",
    "Citation.citedArtifact.webLocation",
    "ConceptMap.group.unmapped",
    "ConceptMap2.group.unmapped",
    "Contract",
    "MolecularSequence.repository",
    "ObservationDefinition",
    "ResearchStudy",
    "ResearchStudy.webLocation",
    "SpecimenDefinition",
    "StructureMap.structure",
    "TerminologyCapabilities.implementation",
    "TestScript.metadata.link",
    "TestScript.setup.action.operation"
  ]
}
version: {
  "w5": {
    "FiveWs.version": [
      "ActivityDefinition",
      "CanonicalResource",
      "CapabilityStatement",
      "CapabilityStatement2",
      "ChargeItemDefinition",
      "Citation",
      "CodeSystem",
      "ConceptMap",
      "ConceptMap2",
      "ConditionDefinition",
      "EventDefinition",
      "Evidence",
      "EvidenceVariable",
      "ExampleScenario",
      "GraphDefinition",
      "ImplementationGuide",
      "Library",
      "Measure",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "PlanDefinition",
      "Questionnaire",
      "SearchParameter",
      "StructureMap",
      "SubscriptionTopic",
      "TerminologyCapabilities",
      "TestScript",
      "ValueSet"
    ],
    "FiveWs.what[x]": [
      "Device.specialization",
      "DeviceDefinition.specialization"
    ]
  },
  "bare": [
    "CapabilityStatement.software",
    "CapabilityStatement2.software",
    "Citation.citedArtifact",
    "Contract",
    "Device",
    "DeviceDefinition",
    "ExampleScenario.instance",
    "ImplementationGuide.dependsOn",
    "MedicinalProductDefinition",
    "MessageHeader.source",
    "ObservationDefinition",
    "ResearchStudy",
    "SpecimenDefinition",
    "SubstanceDefinition",
    "TerminologyCapabilities.software",
    "TerminologyCapabilities.codeSystem",
    "ValueSet.compose.include",
    "ValueSet.expansion.contains"
  ]
}
experimental: {
  "w5": {
    "FiveWs.class": [
      "ActivityDefinition",
      "CanonicalResource",
      "CapabilityStatement",
      "CapabilityStatement2",
      "ChargeItemDefinition",
      "Citation",
      "CodeSystem",
      "ConceptMap",
      "ConceptMap2",
      "ConditionDefinition",
      "EventDefinition",
      "ExampleScenario",
      "GraphDefinition",
      "ImplementationGuide",
      "Library",
      "Measure",
      "MessageDefinition",
      "OperationDefinition",
      "PlanDefinition",
      "Questionnaire",
      "SearchParameter",
      "StructureMap",
      "SubscriptionTopic",
      "TerminologyCapabilities",
      "TestScript",
      "ValueSet"
    ]
  },
  "bare": [
    "ObservationDefinition",
    "SpecimenDefinition"
  ]
}
date: {
  "w5": {
    "FiveWs.recorded": [
      "ActivityDefinition",
      "CanonicalResource",
      "CapabilityStatement",
      "CapabilityStatement2",
      "ChargeItemDefinition",
      "Citation",
      "ClinicalImpression",
      "CodeSystem",
      "ConceptMap",
      "ConceptMap2",
      "ConditionDefinition",
      "DocumentReference",
      "EventDefinition",
      "Evidence",
      "EvidenceVariable",
      "ExampleScenario",
      "FamilyMemberHistory",
      "GraphDefinition",
      "ImplementationGuide",
      "Library",
      "List",
      "Measure",
      "MeasureReport",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "PlanDefinition",
      "Questionnaire",
      "SearchParameter",
      "StructureMap",
      "SubscriptionTopic",
      "TerminologyCapabilities",
      "TestScript",
      "ValueSet"
    ],
    "FiveWs.done[x]": [
      "Composition",
      "Invoice"
    ],
    "FiveWs.init": [
      "ImmunizationEvaluation"
    ]
  },
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication",
    "Claim.procedure",
    "Claim.accident",
    "ClaimResponse.payment",
    "DetectedIssue.mitigation",
    "ExplanationOfBenefit.procedure",
    "ExplanationOfBenefit.accident",
    "ExplanationOfBenefit.payment",
    "Immunization.reaction",
    "ImmunizationRecommendation",
    "List.entry",
    "ObservationDefinition",
    "PaymentReconciliation.detail",
    "ResearchStudy",
    "SpecimenDefinition",
    "SubstanceDefinition.name.official",
    "VerificationResult.attestation"
  ]
}
publisher: {
  "w5": {
    "FiveWs.witness": [
      "ActivityDefinition",
      "CanonicalResource",
      "CapabilityStatement",
      "CapabilityStatement2",
      "ChargeItemDefinition",
      "Citation",
      "CodeSystem",
      "ConceptMap",
      "ConceptMap2",
      "ConditionDefinition",
      "EventDefinition",
      "Evidence",
      "EvidenceReport",
      "EvidenceVariable",
      "ExampleScenario",
      "GraphDefinition",
      "ImplementationGuide",
      "Library",
      "Measure",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "PlanDefinition",
      "Questionnaire",
      "SearchParameter",
      "StructureMap",
      "TerminologyCapabilities",
      "TestScript",
      "ValueSet"
    ],
    "FiveWs.author": [
      "SubscriptionTopic"
    ]
  },
  "bare": [
    "Citation.citedArtifact.publicationForm.publishedIn",
    "Citation.citedArtifact.classification.whoClassified",
    "Contract.contentDefinition",
    "ObservationDefinition",
    "SpecimenDefinition"
  ]
}
contact: {
  "w5": {
    "FiveWs.source": [
      "Device",
      "DeviceDefinition"
    ],
    "FiveWs.subject[x]": [
      "Subscription"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "CanonicalResource",
    "CapabilityStatement",
    "CapabilityStatement2",
    "ChargeItemDefinition",
    "Citation",
    "CodeSystem",
    "ConceptMap",
    "ConceptMap2",
    "ConditionDefinition",
    "Endpoint",
    "EventDefinition",
    "Evidence",
    "EvidenceReport",
    "EvidenceVariable",
    "ExampleScenario",
    "GraphDefinition",
    "ImplementationGuide",
    "InsurancePlan",
    "Library",
    "Measure",
    "MedicinalProductDefinition",
    "MedicinalProductDefinition.contact",
    "MessageDefinition",
    "MessageHeader.source",
    "NamingSystem",
    "ObservationDefinition",
    "OperationDefinition",
    "Organization",
    "Patient",
    "PlanDefinition",
    "Questionnaire",
    "ResearchStudy",
    "SearchParameter",
    "SpecimenDefinition",
    "StructureMap",
    "SubscriptionTopic",
    "TerminologyCapabilities",
    "TestScript",
    "ValueSet"
  ]
}
purpose: {
  "w5": {
    "FiveWs.why[x]": [
      "ActivityDefinition",
      "CanonicalResource",
      "CapabilityStatement",
      "CapabilityStatement2",
      "Citation",
      "CodeSystem",
      "ConceptMap",
      "ConceptMap2",
      "EventDefinition",
      "ExampleScenario",
      "GraphDefinition",
      "Library",
      "Measure",
      "MessageDefinition",
      "OperationDefinition",
      "PlanDefinition",
      "Questionnaire",
      "SearchParameter",
      "StructureMap",
      "SubscriptionTopic",
      "TerminologyCapabilities",
      "TestScript",
      "ValueSet"
    ],
    "FiveWs.class": [
      "CoverageEligibilityRequest",
      "CoverageEligibilityResponse"
    ]
  },
  "bare": [
    "ConditionDefinition.questionnaire",
    "Consent.provision",
    "InsurancePlan.contact",
    "ObservationDefinition",
    "Organization.contact",
    "Permission",
    "Permission.processingActivity",
    "SpecimenDefinition"
  ]
}
topic: {
  "w5": {
    "FiveWs.context": [
      "Communication"
    ],
    "FiveWs.what[x]": [
      "Subscription"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "Contract.term.offer",
    "EventDefinition",
    "Library",
    "Measure",
    "MetadataResource",
    "PlanDefinition",
    "SubscriptionStatus"
  ]
}
author: {
  "w5": {
    "FiveWs.author": [
      "Basic",
      "CarePlan",
      "Composition",
      "Composition.section",
      "DetectedIssue",
      "DocumentManifest",
      "Flag",
      "Linkage",
      "MessageHeader",
      "QuestionnaireResponse",
      "RequestGroup"
    ],
    "FiveWs.actor": [
      "MedicationKnowledge"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "AdverseEvent.suspectEntity.causality",
    "Citation",
    "Contract",
    "DetectedIssue.mitigation",
    "DocumentReference",
    "EventDefinition",
    "Evidence",
    "EvidenceReport",
    "EvidenceReport.section",
    "EvidenceVariable",
    "Library",
    "Measure",
    "MetadataResource",
    "PlanDefinition",
    "SubstanceSourceMaterial.organism"
  ]
}
kind: {
  "w5": {
    "FiveWs.class": [
      "NamingSystem",
      "OperationDefinition"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "CapabilityStatement",
    "CapabilityStatement2",
    "CarePlan.activity.plannedActivityDetail",
    "PlanDefinition.action.condition",
    "RequestGroup.action.condition",
    "TerminologyCapabilities"
  ]
}
code: {
  "w5": {
    "FiveWs.what[x]": [
      "AdverseEvent",
      "AllergyIntolerance",
      "Basic",
      "ChargeItem",
      "Condition",
      "DeviceRequest",
      "DeviceRequest.parameter",
      "DiagnosticReport",
      "Flag",
      "Group",
      "List",
      "Observation",
      "Observation.component",
      "ObservationDefinition",
      "Procedure",
      "RequestGroup",
      "RiskAssessment",
      "ServiceRequest",
      "Substance",
      "SupplyRequest.parameter",
      "Task"
    ],
    "FiveWs.why[x]": [
      "Condition.evidence",
      "DetectedIssue.evidence"
    ],
    "FiveWs.class": [
      "DetectedIssue",
      "Medication",
      "MedicationKnowledge",
      "NutritionIntake"
    ],
    "FiveWs.identifier": [
      "NutritionProduct"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "AdministrableProductDefinition.routeOfAdministration",
    "AdministrableProductDefinition.routeOfAdministration.targetSpecies",
    "CapabilityStatement.rest.resource.interaction",
    "CapabilityStatement.rest.interaction",
    "CapabilityStatement2.rest.feature",
    "CapabilityStatement2.rest.resource.interaction",
    "CapabilityStatement2.rest.interaction",
    "CarePlan.activity.plannedActivityDetail",
    "ChargeItemDefinition",
    "ChargeItemDefinition.propertyGroup.priceComponent",
    "Claim.supportingInfo",
    "ClaimResponse.error",
    "CodeSystem.filter",
    "CodeSystem.property",
    "CodeSystem.concept",
    "CodeSystem.concept.property",
    "Composition.relatesTo",
    "Composition.event",
    "Composition.section",
    "ConceptMap.group.element",
    "ConceptMap.group.element.target",
    "ConceptMap.group.unmapped",
    "ConceptMap2.group.element",
    "ConceptMap2.group.element.target",
    "ConceptMap2.group.unmapped",
    "ConditionDefinition",
    "ConditionDefinition.observation",
    "ConditionDefinition.medication",
    "ConditionDefinition.precondition",
    "Consent.provision",
    "Contract.term.asset.context",
    "CoverageEligibilityResponse.error",
    "DocumentReference.relatesTo",
    "EvidenceReport.subject.characteristic",
    "EvidenceReport.relatesTo",
    "ExplanationOfBenefit.supportingInfo",
    "FamilyMemberHistory.condition",
    "FamilyMemberHistory.procedure",
    "GraphDefinition.link.target.compartment",
    "Group.characteristic",
    "HealthcareService.eligibility",
    "ImmunizationRecommendation.recommendation.dateCriterion",
    "ImplementationGuide.definition.parameter",
    "ImplementationGuide.definition.template",
    "Ingredient.substance",
    "Ingredient.specifiedSubstance",
    "InsurancePlan.coverage.benefit.limit",
    "Invoice.lineItem.priceComponent",
    "Measure.group",
    "Measure.group.population",
    "Measure.group.stratifier",
    "Measure.group.stratifier.component",
    "Measure.supplementalData",
    "MeasureReport.group",
    "MeasureReport.group.population",
    "MeasureReport.group.stratifier",
    "MeasureReport.group.stratifier.stratum.component",
    "MeasureReport.group.stratifier.stratum.population",
    "MedicationUsage.adherence",
    "MessageDefinition.focus",
    "MessageHeader.response",
    "ObservationDefinition.component",
    "OperationDefinition",
    "OperationOutcome.issue",
    "OrganizationAffiliation",
    "PlanDefinition.action",
    "Practitioner.qualification",
    "PractitionerRole",
    "Questionnaire",
    "Questionnaire.item",
    "RequestGroup.action",
    "SearchParameter",
    "SubstanceDefinition.property",
    "SubstanceDefinition",
    "SubstanceDefinition.code",
    "SubstancePolymer.monomerSet.startingMaterial",
    "TerminologyCapabilities.codeSystem.version",
    "TerminologyCapabilities.codeSystem.version.filter",
    "ValueSet.compose.include.concept",
    "ValueSet.expansion.property",
    "ValueSet.expansion.contains",
    "ValueSet.expansion.contains.property"
  ]
}
intent: {
  "w5": {
    "FiveWs.class": [
      "CommunicationRequest",
      "DeviceRequest",
      "MedicationRequest",
      "NutritionOrder",
      "RequestGroup",
      "ServiceRequest",
      "Task"
    ],
    "FiveWs.why[x]": [
      "Contract.term.action"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "CarePlan",
    "Permission"
  ]
}
timing[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "DeviceUsage"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "Claim.supportingInfo",
    "ExplanationOfBenefit.supportingInfo",
    "PlanDefinition.action",
    "RequestGroup.action"
  ]
}
location: {
  "w5": {
    "FiveWs.where[x]": [
      "AuditEvent.agent",
      "Device",
      "Encounter.location",
      "HealthcareService",
      "ImagingStudy",
      "Immunization",
      "OrganizationAffiliation",
      "PractitionerRole",
      "Procedure",
      "Provenance",
      "Task"
    ],
    "FiveWs.what[x]": [
      "BodyStructure"
    ],
    "FiveWs.actor": [
      "ServiceRequest"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "AdverseEvent",
    "CarePlan.activity.plannedActivityDetail",
    "DeviceDispense",
    "Encounter",
    "InventoryReport.inventoryListing",
    "MedicationDispense",
    "NutritionIntake",
    "OperationOutcome.issue",
    "PlanDefinition.action",
    "RequestGroup.action",
    "ResearchStudy"
  ]
}
participant: {
  "w5": {
    "FiveWs.actor": [
      "RequestGroup.action"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "AdverseEvent",
    "Appointment",
    "CareTeam",
    "Encounter",
    "Invoice",
    "PlanDefinition.action",
    "TestReport"
  ]
}
role: {
  "w5": {
    "FiveWs.who": [
      "AuditEvent.agent"
    ],
    "FiveWs.context": [
      "AuditEvent.entity"
    ]
  },
  "bare": [
    "ActivityDefinition.participant",
    "CareTeam.participant",
    "Citation.citedArtifact.contributorship.entry.affiliationInfo",
    "Citation.citedArtifact.contributorship.entry",
    "Claim.careTeam",
    "ConditionDefinition.plan",
    "Consent.provision.actor",
    "Contract.term.offer.party",
    "Contract.term.action.subject",
    "EpisodeOfCare.diagnosis",
    "ExplanationOfBenefit.careTeam",
    "Ingredient",
    "Invoice.participant",
    "PlanDefinition.actor.option",
    "PlanDefinition.action.participant",
    "Provenance.agent",
    "Provenance.entity",
    "RequestGroup.action.participant",
    "ResearchStudy.associatedParty",
    "SubstanceDefinition.moiety"
  ]
}
quantity: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term.asset.valuedItem"
    ]
  },
  "bare": [
    "ActivityDefinition",
    "BiologicallyDerivedProduct",
    "CarePlan.activity.plannedActivityDetail",
    "ChargeItem",
    "Claim.item",
    "Claim.item.detail",
    "Claim.item.detail.subDetail",
    "ClaimResponse.addItem",
    "ClaimResponse.addItem.detail",
    "ClaimResponse.addItem.detail.subDetail",
    "CoverageEligibilityRequest.item",
    "DeviceDispense",
    "DeviceRequest",
    "EvidenceVariable.characteristic.timeFromStart",
    "ExplanationOfBenefit.item",
    "ExplanationOfBenefit.item.detail",
    "ExplanationOfBenefit.item.detail.subDetail",
    "ExplanationOfBenefit.addItem",
    "ExplanationOfBenefit.addItem.detail",
    "ExplanationOfBenefit.addItem.detail.subDetail",
    "Group",
    "InventoryReport.inventoryListing.items",
    "MedicationDispense",
    "MedicationKnowledge.packaging",
    "MedicationKnowledge.regulatory.maxDispense",
    "MedicationRequest.dispenseRequest.initialFill",
    "MedicationRequest.dispenseRequest",
    "MolecularSequence",
    "NutritionOrder.supplement",
    "NutritionOrder.enteralFormula.administration",
    "NutritionProduct.instance",
    "PackagedProductDefinition.package",
    "Specimen.collection",
    "Substance.instance",
    "Substance.ingredient",
    "SupplyDelivery.suppliedItem",
    "SupplyRequest"
  ]
}
device: {
  "w5": {
    "FiveWs.what[x]": [
      "DeviceDispense"
    ],
    "FiveWs.actor": [
      "DeviceUsage"
    ]
  },
  "bare": [
    "AdministrableProductDefinition",
    "EvidenceVariable.characteristic",
    "MedicationAdministration",
    "MedicationKnowledge",
    "MedicationKnowledge.packaging",
    "MolecularSequence",
    "Observation",
    "ObservationDefinition"
  ]
}
value[x]: {
  "w5": {
    "FiveWs.context": [
      "AuditEvent.entity.detail"
    ],
    "FiveWs.what[x]": [
      "DeviceRequest.parameter",
      "SupplyRequest.parameter"
    ]
  },
  "bare": [
    "AdministrableProductDefinition.property",
    "Claim.supportingInfo",
    "CodeSystem.concept.property",
    "ConditionDefinition.precondition",
    "Contract.term.offer.answer",
    "Coverage.costToBeneficiary",
    "Device.property",
    "EvidenceReport.subject.characteristic",
    "EvidenceVariable.category",
    "ExplanationOfBenefit.supportingInfo",
    "Group.characteristic",
    "ImagingStudy.procedure",
    "ManufacturedItemDefinition.property",
    "MeasureReport.group.stratifier.stratum",
    "MeasureReport.group.stratifier.stratum.component",
    "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic",
    "MedicationKnowledge.drugCharacteristic",
    "MedicationKnowledge.kineticCharacteristic",
    "NutritionProduct.productCharacteristic",
    "Observation",
    "Observation.component",
    "PackagedProductDefinition.package.property",
    "Parameters.parameter",
    "Questionnaire.item.answerOption",
    "Questionnaire.item.initial",
    "QuestionnaireResponse.item.answer",
    "StructureMap.group.rule.target.parameter",
    "Task.input",
    "Task.output",
    "ValueSet.expansion.parameter",
    "ValueSet.expansion.contains.property"
  ]
}
value: {
  "w5": {
    "FiveWs.identifier": [
      "NamingSystem.uniqueId"
    ]
  },
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration.targetSpecies.withdrawalPeriod",
    "CapabilityStatement2.rest.feature",
    "Citation.citedArtifact.version",
    "Citation.citedArtifact.part",
    "Citation.citedArtifact.contributorship.summary",
    "ClaimResponse.item.adjudication",
    "CodeSystem.filter",
    "CodeSystem.concept.designation",
    "ConceptMap.group.element.target.dependsOn",
    "ConceptMap2.group.element.target.dependsOn",
    "Coverage.class",
    "Device.version",
    "Device.operationalStatus",
    "Device.associationStatus",
    "DeviceDefinition.version",
    "ExplanationOfBenefit.item.adjudication",
    "ImmunizationRecommendation.recommendation.dateCriterion",
    "ImplementationGuide.definition.parameter",
    "InsurancePlan.coverage.benefit.limit",
    "InsurancePlan.plan.specificCost.benefit.cost",
    "ResearchStudy.label",
    "Subscription.filterBy",
    "TestScript.setup.action.operation.requestHeader",
    "TestScript.setup.action.assert",
    "ValueSet.compose.include.concept.designation",
    "ValueSet.compose.include.filter"
  ]
}
supportingInformation: {
  "w5": {
    "FiveWs.context": [
      "Appointment",
      "DeviceDispense",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest"
    ]
  },
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration.targetSpecies.withdrawalPeriod",
    "ChargeItem"
  ]
}
category: {
  "w5": {
    "FiveWs.class": [
      "AdverseEvent",
      "AllergyIntolerance",
      "CarePlan",
      "CareTeam",
      "Communication",
      "CommunicationRequest",
      "Composition",
      "Condition",
      "Consent",
      "DeviceMetric",
      "DiagnosticReport",
      "Flag",
      "Goal",
      "HealthcareService",
      "MedicationRequest",
      "MedicationUsage",
      "NutritionProduct",
      "Observation",
      "ObservationDefinition",
      "Procedure",
      "ServiceRequest",
      "Substance",
      "SupplyRequest"
    ],
    "FiveWs.what[x]": [
      "DocumentReference"
    ]
  },
  "bare": [
    "Claim.supportingInfo",
    "Claim.item",
    "Claim.item.detail",
    "Claim.item.detail.subDetail",
    "ClaimResponse.item.adjudication",
    "ClaimResponse.total",
    "ClinicalUseIssue",
    "ConditionDefinition.observation",
    "ConditionDefinition.medication",
    "Contract.term.securityLabel",
    "CoverageEligibilityRequest.item",
    "CoverageEligibilityResponse.insurance.item",
    "DeviceDispense",
    "DeviceUsage",
    "EvidenceVariable",
    "ExplanationOfBenefit.supportingInfo",
    "ExplanationOfBenefit.item",
    "ExplanationOfBenefit.item.adjudication",
    "ExplanationOfBenefit.item.detail",
    "ExplanationOfBenefit.item.detail.subDetail",
    "ExplanationOfBenefit.total",
    "ExplanationOfBenefit.benefitBalance",
    "InsurancePlan.plan.specificCost",
    "InventoryReport.inventoryListing.items",
    "MedicationAdministration",
    "MedicationDispense",
    "MessageDefinition",
    "PlanDefinition.goal",
    "ResearchStudy",
    "SubstanceDefinition",
    "SubstanceDefinition.property",
    "SubstancePolymer.monomerSet.startingMaterial"
  ]
}
encounter: {
  "w5": {
    "FiveWs.context": [
      "AdverseEvent",
      "AllergyIntolerance",
      "CarePlan",
      "ClinicalImpression",
      "Communication",
      "CommunicationRequest",
      "Composition",
      "Condition",
      "DeviceRequest",
      "DiagnosticReport",
      "DocumentReference",
      "Flag",
      "GuidanceResponse",
      "ImagingStudy",
      "Immunization",
      "List",
      "MedicationAdministration",
      "MedicationRequest",
      "NutritionOrder",
      "Observation",
      "Procedure",
      "QuestionnaireResponse",
      "RequestGroup",
      "RiskAssessment",
      "ServiceRequest",
      "Task",
      "VisionPrescription"
    ],
    "FiveWs.why[x]": [
      "AuditEvent",
      "Provenance"
    ]
  },
  "bare": [
    "Claim.item",
    "DeviceDispense",
    "ExplanationOfBenefit.item",
    "MedicationDispense",
    "MedicationUsage",
    "NutritionIntake"
  ]
}
occurrence[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "AdverseEvent",
      "ChargeItem",
      "Immunization",
      "NutritionIntake",
      "Procedure",
      "RiskAssessment",
      "SupplyDelivery"
    ],
    "FiveWs.planned": [
      "CommunicationRequest",
      "DeviceRequest",
      "ServiceRequest",
      "SupplyRequest"
    ]
  },
  "bare": [
    "Contract.term.action"
  ]
}
outcome: {
  "w5": {
    "FiveWs.what[x]": [
      "AuditEvent"
    ]
  },
  "bare": [
    "AdverseEvent",
    "ClaimResponse",
    "CoverageEligibilityResponse",
    "EnrollmentResponse",
    "ExplanationOfBenefit",
    "FamilyMemberHistory.condition",
    "FamilyMemberHistory.procedure",
    "Goal",
    "PaymentReconciliation",
    "Procedure",
    "RiskAssessment.prediction"
  ]
}
actor: {
  "w5": {
    "FiveWs.actor": [
      "AdverseEvent.participant",
      "ChargeItem.performer",
      "ImagingStudy.series.performer",
      "Immunization.performer",
      "Invoice.participant",
      "Procedure.performer"
    ],
    "FiveWs.who": [
      "Appointment.participant",
      "AppointmentResponse",
      "Encounter.participant"
    ],
    "FiveWs.subject[x]": [
      "Schedule"
    ]
  },
  "bare": [
    "Consent.provision",
    "DeviceDispense.performer",
    "ExampleScenario",
    "MedicationAdministration.performer",
    "MedicationDispense.performer",
    "NutritionIntake.performer",
    "PlanDefinition",
    "RequestGroup.action.participant"
  ]
}
patient: {
  "w5": {
    "FiveWs.subject[x]": [
      "AllergyIntolerance",
      "BodyStructure",
      "Claim",
      "ClaimResponse",
      "CoverageEligibilityRequest",
      "CoverageEligibilityResponse",
      "DetectedIssue",
      "Device",
      "EpisodeOfCare",
      "ExplanationOfBenefit",
      "FamilyMemberHistory",
      "Immunization",
      "ImmunizationEvaluation",
      "ImmunizationRecommendation",
      "NutritionOrder",
      "VisionPrescription"
    ]
  },
  "bare": [
    "MolecularSequence",
    "RelatedPerson",
    "SupplyDelivery"
  ]
}
onset[x]: {
  "w5": {
    "FiveWs.init": [
      "AllergyIntolerance",
      "Condition"
    ]
  },
  "bare": [
    "FamilyMemberHistory.condition"
  ]
}
asserter: {
  "w5": {
    "FiveWs.source": [
      "AllergyIntolerance",
      "Condition"
    ]
  },
  "bare": [
    "Permission"
  ]
}
severity: {
  "w5": {
    "FiveWs.grade": [
      "Condition",
      "DetectedIssue"
    ]
  },
  "bare": [
    "AllergyIntolerance.reaction",
    "AuditEvent",
    "ConditionDefinition",
    "OperationOutcome.issue"
  ]
}
serviceCategory: {
  "w5": {
    "FiveWs.class": [
      "Schedule",
      "Slot"
    ]
  },
  "bare": [
    "Appointment"
  ]
}
serviceType: {
  "w5": {
    "FiveWs.class": [
      "Schedule",
      "Slot"
    ]
  },
  "bare": [
    "Appointment",
    "Encounter"
  ]
}
specialty: {
  "w5": {
    "FiveWs.class": [
      "Appointment",
      "Schedule",
      "Slot"
    ]
  },
  "bare": [
    "HealthcareService",
    "OrganizationAffiliation",
    "PractitionerRole"
  ]
}
appointmentType: {
  "w5": {
    "FiveWs.class": [
      "Slot"
    ]
  },
  "bare": [
    "Appointment"
  ]
}
reason: {
  "w5": {
    "FiveWs.why[x]": [
      "CareTeam",
      "ChargeItem",
      "Communication",
      "CommunicationRequest",
      "DeviceRequest",
      "DeviceUsage",
      "Encounter",
      "FamilyMemberHistory",
      "GuidanceResponse",
      "ImagingStudy",
      "MedicationRequest",
      "MedicationUsage",
      "MessageHeader",
      "NutritionIntake",
      "Procedure",
      "Provenance",
      "RequestGroup",
      "RiskAssessment",
      "ServiceRequest",
      "Subscription",
      "SupplyRequest"
    ]
  },
  "bare": [
    "Appointment",
    "CarePlan.activity.plannedActivityDetail",
    "Claim.supportingInfo",
    "ClaimResponse.item.adjudication",
    "Contract.term.action",
    "Device.operationalStatus",
    "Device.associationStatus",
    "ExplanationOfBenefit.supportingInfo",
    "ExplanationOfBenefit.item.adjudication",
    "Immunization",
    "MedicationAdministration",
    "MedicationDispense.substitution",
    "MedicationRequest.substitution",
    "MedicationUsage.adherence",
    "PlanDefinition.action",
    "ResearchSubject.progress"
  ]
}
replaces: {
  "w5": {
    "FiveWs.context": [
      "Appointment"
    ]
  },
  "bare": [
    "CarePlan",
    "ChargeItemDefinition",
    "CommunicationRequest",
    "MessageDefinition",
    "RequestGroup",
    "ServiceRequest"
  ]
}
start: {
  "w5": {
    "FiveWs.init": [
      "Appointment",
      "AppointmentResponse"
    ],
    "FiveWs.planned": [
      "Slot"
    ]
  },
  "bare": [
    "GraphDefinition",
    "MolecularSequence.variant",
    "MolecularSequence.quality",
    "MolecularSequence.structureVariant.outer",
    "MolecularSequence.structureVariant.inner",
    "PlanDefinition.goal"
  ]
}
end: {
  "w5": {
    "FiveWs.done[x]": [
      "Appointment",
      "AppointmentResponse",
      "Subscription"
    ],
    "FiveWs.planned": [
      "Slot"
    ]
  },
  "bare": [
    "MolecularSequence.variant",
    "MolecularSequence.quality",
    "MolecularSequence.structureVariant.outer",
    "MolecularSequence.structureVariant.inner"
  ]
}
created: {
  "w5": {
    "FiveWs.recorded": [
      "Basic",
      "CarePlan",
      "Claim",
      "ClaimResponse",
      "CoverageEligibilityRequest",
      "CoverageEligibilityResponse",
      "ExplanationOfBenefit",
      "PaymentNotice",
      "PaymentReconciliation"
    ],
    "FiveWs.done[x]": [
      "DocumentManifest"
    ]
  },
  "bare": [
    "Appointment",
    "EnrollmentRequest",
    "EnrollmentResponse",
    "VisionPrescription"
  ]
}
basedOn: {
  "w5": {
    "FiveWs.why[x]": [
      "AuditEvent",
      "Provenance"
    ],
    "FiveWs.cause": [
      "ImagingStudy"
    ]
  },
  "bare": [
    "Appointment",
    "CarePlan",
    "Communication",
    "CommunicationRequest",
    "DeviceDispense",
    "DeviceRequest",
    "DeviceUsage",
    "DiagnosticReport",
    "DocumentReference",
    "Encounter",
    "Immunization",
    "MedicationAdministration",
    "MedicationDispense",
    "MedicationRequest",
    "NutritionIntake",
    "Observation",
    "Procedure",
    "QuestionnaireResponse",
    "RequestGroup",
    "RiskAssessment",
    "ServiceRequest",
    "SupplyDelivery",
    "Task"
  ]
}
subtype: {
  "w5": {
    "FiveWs.what[x]": [
      "AuditEvent"
    ]
  },
  "bare": [
    "Contract.term.asset"
  ]
}
action: {
  "w5": {
    "FiveWs.what[x]": [
      "AuditEvent"
    ]
  },
  "bare": [
    "Consent.provision",
    "Contract.term",
    "DetectedIssue.mitigation",
    "PlanDefinition",
    "PlanDefinition.action",
    "Procedure.focalDevice",
    "RequestGroup",
    "RequestGroup.action",
    "TestReport.setup",
    "TestReport.test",
    "TestReport.teardown",
    "TestScript.setup",
    "TestScript.test",
    "TestScript.teardown"
  ]
}
agent: {
  "w5": {
    "FiveWs.who": [
      "AuditEvent",
      "Provenance"
    ]
  },
  "bare": [
    "Provenance.entity"
  ]
}
who: {
  "w5": {
    "FiveWs.who": [
      "AuditEvent.agent",
      "VerificationResult.primarySource"
    ],
    "FiveWs.actor": [
      "Provenance.agent"
    ]
  },
  "bare": [
    "VerificationResult.attestation"
  ]
}
requestor: {
  "w5": {
    "FiveWs.who": [
      "AuditEvent.agent"
    ],
    "FiveWs.source": [
      "ClaimResponse",
      "CoverageEligibilityResponse"
    ]
  },
  "bare": [
    "PaymentReconciliation"
  ]
}
policy: {
  "w5": {
    "FiveWs.why[x]": [
      "AuditEvent.agent"
    ]
  },
  "bare": [
    "Consent",
    "Provenance"
  ]
}
media: {
  "w5": {
    "FiveWs.where[x]": [
      "AuditEvent.agent"
    ]
  },
  "bare": [
    "DiagnosticReport"
  ]
}
network: {
  "w5": {
    "FiveWs.where[x]": [
      "AuditEvent.agent"
    ]
  },
  "bare": [
    "Coverage",
    "CoverageEligibilityResponse.insurance.item",
    "ExplanationOfBenefit.benefitBalance",
    "InsurancePlan",
    "InsurancePlan.coverage",
    "InsurancePlan.plan",
    "OrganizationAffiliation"
  ]
}
address: {
  "w5": {
    "FiveWs.where[x]": [
      "AuditEvent.agent.network"
    ]
  },
  "bare": [
    "CapabilityStatement.messaging.endpoint",
    "Citation.citedArtifact.contributorship.entry",
    "Endpoint",
    "InsurancePlan.contact",
    "Location",
    "Organization",
    "Organization.contact",
    "Patient",
    "Patient.contact",
    "Person",
    "Practitioner",
    "RelatedPerson"
  ]
}
source: {
  "w5": {
    "FiveWs.witness": [
      "AuditEvent"
    ],
    "FiveWs.source": [
      "Goal",
      "QuestionnaireResponse"
    ],
    "FiveWs.author": [
      "List"
    ],
    "FiveWs.actor": [
      "MessageHeader"
    ]
  },
  "bare": [
    "BiologicallyDerivedProduct.collection",
    "Citation.citedArtifact.contributorship.summary",
    "ConceptMap.group",
    "ConceptMap2.group",
    "DeviceMetric",
    "DocumentManifest",
    "ImplementationGuide.definition.template",
    "MedicationKnowledge.monograph",
    "MedicationKnowledge.cost",
    "OperationDefinition.parameter.referencedFrom",
    "StructureMap.group.rule",
    "SubstanceDefinition",
    "SubstanceDefinition.property",
    "SubstanceDefinition.code",
    "SubstanceDefinition.name",
    "SubstanceDefinition.relationship",
    "SubstanceReferenceInformation.gene",
    "SubstanceReferenceInformation.geneElement",
    "SubstanceReferenceInformation.target"
  ]
}
site: {
  "w5": {
    "FiveWs.witness": [
      "AuditEvent.source"
    ],
    "FiveWs.where[x]": [
      "ResearchStudy"
    ]
  },
  "bare": [
    "Contract",
    "Immunization",
    "MedicationAdministration.dosage"
  ]
}
entity: {
  "w5": {
    "FiveWs.what[x]": [
      "AuditEvent"
    ]
  },
  "bare": [
    "Group.member",
    "Provenance"
  ]
}
what: {
  "w5": {
    "FiveWs.what[x]": [
      "AuditEvent.entity"
    ]
  },
  "bare": [
    "Provenance.entity"
  ]
}
securityLabel: {
  "w5": {
    "FiveWs.context": [
      "AuditEvent.entity"
    ]
  },
  "bare": [
    "Consent.provision",
    "Contract.term",
    "DocumentReference"
  ]
}
detail: {
  "w5": {
    "FiveWs.context": [
      "AuditEvent.entity"
    ],
    "FiveWs.why[x]": [
      "Condition.evidence",
      "DetectedIssue.evidence"
    ]
  },
  "bare": [
    "Claim.item",
    "ClaimResponse.item",
    "ClaimResponse.addItem",
    "Composition.event",
    "CoverageEligibilityRequest.item",
    "DetectedIssue",
    "ExplanationOfBenefit.item",
    "ExplanationOfBenefit.addItem",
    "Immunization.reaction",
    "PaymentReconciliation",
    "TestReport.setup.action.operation",
    "TestReport.setup.action.assert"
  ]
}
productCode: {
  "w5": {
    "FiveWs.what[x]": [
      "ResearchStudy.focus"
    ]
  },
  "bare": [
    "BiologicallyDerivedProduct"
  ]
}
request: {
  "w5": {
    "FiveWs.why[x]": [
      "ClaimResponse",
      "CoverageEligibilityResponse",
      "PaymentReconciliation",
      "Specimen"
    ],
    "FiveWs.subject[x]": [
      "PaymentNotice"
    ]
  },
  "bare": [
    "BiologicallyDerivedProduct",
    "EnrollmentResponse",
    "ExampleScenario.process.step.operation",
    "MedicationAdministration",
    "PaymentReconciliation.detail"
  ]
}
collector: {
  "w5": {
    "FiveWs.actor": [
      "Specimen.collection"
    ]
  },
  "bare": [
    "BiologicallyDerivedProduct.collection"
  ]
}
collected[x]: {
  "w5": {
    "FiveWs.init": [
      "Specimen.collection"
    ]
  },
  "bare": [
    "BiologicallyDerivedProduct.collection"
  ]
}
duration: {
  "w5": {
    "FiveWs.init": [
      "Specimen.collection"
    ]
  },
  "bare": [
    "BiologicallyDerivedProduct.storage",
    "ClinicalUseIssue.indication",
    "MedicationRequest.dispenseRequest.initialFill",
    "VisionPrescription.lensSpecification"
  ]
}
image: {
  "w5": {
    "FiveWs.what[x]": [
      "BodyStructure"
    ]
  },
  "bare": [
    "ImplementationGuide.manifest"
  ]
}
mode: {
  "w5": {
    "FiveWs.class": [
      "Composition.section",
      "List",
      "Location"
    ]
  },
  "bare": [
    "CapabilityStatement.rest",
    "CapabilityStatement.messaging.supportedMessage",
    "CapabilityStatement.document",
    "CapabilityStatement2.rest",
    "Composition.attester",
    "ConceptMap.group.unmapped",
    "ConceptMap2.group.unmapped",
    "DocumentReference.attester",
    "EvidenceReport.section",
    "StructureMap.structure",
    "StructureMap.group.input"
  ]
}
service: {
  "w5": {
    "FiveWs.why[x]": [
      "ChargeItem"
    ]
  },
  "bare": [
    "CapabilityStatement.rest.security"
  ]
}
careTeam: {
  "w5": {
    "FiveWs.actor": [
      "CarePlan"
    ]
  },
  "bare": [
    "Claim",
    "ExplanationOfBenefit"
  ]
}
addresses: {
  "w5": {
    "FiveWs.why[x]": [
      "CarePlan",
      "Goal"
    ]
  },
  "bare": [
    "PlanDefinition.goal"
  ]
}
activity: {
  "w5": {
    "FiveWs.why[x]": [
      "Provenance"
    ]
  },
  "bare": [
    "CarePlan",
    "Citation.statusDate",
    "Citation.citedArtifact.statusDate",
    "ResearchStudy.statusDate"
  ]
}
statusReason: {
  "w5": {
    "FiveWs.status": [
      "Device"
    ]
  },
  "bare": [
    "CarePlan.activity.plannedActivityDetail",
    "ClinicalImpression",
    "Communication",
    "CommunicationRequest",
    "DeviceDispense",
    "Goal",
    "Immunization",
    "MedicationAdministration",
    "MedicationDispense",
    "MedicationRequest",
    "NutritionIntake",
    "Procedure",
    "Task"
  ]
}
performer: {
  "w5": {
    "FiveWs.actor": [
      "ClinicalImpression",
      "DeviceRequest",
      "DiagnosticReport",
      "GuidanceResponse",
      "MedicationAdministration",
      "MedicationRequest",
      "Observation",
      "RiskAssessment",
      "ServiceRequest"
    ]
  },
  "bare": [
    "CarePlan.activity.plannedActivityDetail",
    "ChargeItem",
    "Contract.term.action",
    "DeviceDispense",
    "ImagingStudy.series",
    "Immunization",
    "MedicationDispense",
    "MolecularSequence",
    "NutritionIntake",
    "Procedure"
  ]
}
member: {
  "w5": {
    "FiveWs.actor": [
      "CareTeam.participant"
    ]
  },
  "bare": [
    "Group"
  ]
}
relationship: {
  "w5": {
    "FiveWs.class": [
      "RelatedPerson"
    ]
  },
  "bare": [
    "CatalogEntry.relatedEntry",
    "Claim.related",
    "ConceptMap.group.element.target",
    "ConceptMap2.group.element.target",
    "Contract.term.asset",
    "Coverage",
    "ExplanationOfBenefit.related",
    "FamilyMemberHistory",
    "Patient.contact",
    "PlanDefinition.action.relatedAction",
    "RequestGroup.action.relatedAction",
    "SubstanceDefinition"
  ]
}
target: {
  "w5": {
    "FiveWs.what[x]": [
      "Provenance"
    ]
  },
  "bare": [
    "CatalogEntry.relatedEntry",
    "ConceptMap.group",
    "ConceptMap.group.element",
    "ConceptMap2.group",
    "ConceptMap2.group.element",
    "DocumentReference.relatesTo",
    "Goal",
    "GraphDefinition.link",
    "MessageHeader.destination",
    "Person.link",
    "PlanDefinition.goal",
    "SearchParameter",
    "StructureMap.group.rule",
    "SubstanceReferenceInformation",
    "SubstanceReferenceInformation.target",
    "VerificationResult"
  ]
}
context: {
  "w5": {
    "FiveWs.context": [
      "ChargeItem"
    ]
  },
  "bare": [
    "Contract.term.asset",
    "Contract.term.action",
    "DeviceUsage",
    "ObservationDefinition.qualifiedValue",
    "StructureMap.group.rule.source",
    "StructureMap.group.rule.target"
  ]
}
factor: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term.asset.valuedItem"
    ]
  },
  "bare": [
    "ChargeItemDefinition.propertyGroup.priceComponent",
    "Claim.item",
    "Claim.item.detail",
    "Claim.item.detail.subDetail",
    "ClaimResponse.addItem",
    "ClaimResponse.addItem.detail",
    "ClaimResponse.addItem.detail.subDetail",
    "ExplanationOfBenefit.item",
    "ExplanationOfBenefit.item.detail",
    "ExplanationOfBenefit.item.detail.subDetail",
    "ExplanationOfBenefit.addItem",
    "ExplanationOfBenefit.addItem.detail",
    "ExplanationOfBenefit.addItem.detail.subDetail",
    "Invoice.lineItem.priceComponent",
    "ResearchStudy.focus"
  ]
}
statusDate: {
  "w5": {
    "FiveWs.recorded": [
      "Goal"
    ]
  },
  "bare": [
    "Citation",
    "Citation.citedArtifact",
    "MedicinalProductDefinition",
    "PackagedProductDefinition",
    "RegulatedAuthorization",
    "ResearchStudy",
    "SubstanceDefinition.code",
    "VerificationResult"
  ]
}
actual: {
  "w5": {
    "FiveWs.class": [
      "Group"
    ]
  },
  "bare": [
    "Citation.statusDate",
    "Citation.citedArtifact.statusDate",
    "EvidenceVariable",
    "ResearchStudy.statusDate"
  ]
}
organization: {
  "w5": {
    "FiveWs.actor": [
      "EnrollmentResponse"
    ]
  },
  "bare": [
    "Citation.citedArtifact.classification.whoClassified",
    "MedicinalProductDefinition.operation",
    "OrganizationAffiliation",
    "Patient.contact",
    "PractitionerRole",
    "VerificationResult.validator"
  ]
}
subType: {
  "w5": {
    "FiveWs.class": [
      "Claim",
      "ClaimResponse",
      "ExplanationOfBenefit"
    ],
    "FiveWs.what[x]": [
      "Contract",
      "Contract.term"
    ]
  },
  "bare": [
    "Contract.contentDefinition"
  ]
}
use: {
  "w5": {
    "FiveWs.class": [
      "Claim",
      "ClaimResponse",
      "ExplanationOfBenefit"
    ]
  },
  "bare": [
    "CodeSystem.concept.designation",
    "Encounter.diagnosis",
    "GraphDefinition.link.target.compartment",
    "OperationDefinition.parameter",
    "ValueSet.compose.include.concept.designation"
  ]
}
insurer: {
  "w5": {
    "FiveWs.who": [
      "CoverageEligibilityRequest"
    ],
    "FiveWs.author": [
      "ExplanationOfBenefit"
    ]
  },
  "bare": [
    "Claim",
    "ClaimResponse",
    "CoverageEligibilityResponse",
    "EnrollmentRequest"
  ]
}
claim: {
  "w5": {
    "FiveWs.why[x]": [
      "ExplanationOfBenefit"
    ]
  },
  "bare": [
    "Claim.related",
    "ExplanationOfBenefit.related"
  ]
}
facility: {
  "w5": {
    "FiveWs.where[x]": [
      "Claim",
      "CoverageEligibilityRequest",
      "ExplanationOfBenefit"
    ]
  },
  "bare": [
    "CoverageEligibilityRequest.item"
  ]
}
responsible: {
  "w5": {
    "FiveWs.witness": [
      "MessageHeader",
      "NamingSystem"
    ]
  },
  "bare": [
    "Claim.careTeam",
    "Contract.term.asset.valuedItem",
    "ExplanationOfBenefit.careTeam",
    "PaymentReconciliation.detail"
  ]
}
location[x]: {
  "w5": {
    "FiveWs.where[x]": [
      "Claim.item",
      "ClaimResponse.addItem",
      "ExplanationOfBenefit.item",
      "ExplanationOfBenefit.addItem"
    ]
  },
  "bare": [
    "Claim.accident",
    "ExplanationOfBenefit.accident"
  ]
}
modifier: {
  "w5": {
    "FiveWs.what[x]": [
      "NutritionOrder.oralDiet.nutrient"
    ]
  },
  "bare": [
    "Claim.item",
    "Claim.item.detail",
    "Claim.item.detail.subDetail",
    "ClaimResponse.addItem",
    "ClaimResponse.addItem.detail",
    "ClaimResponse.addItem.detail.subDetail",
    "CoverageEligibilityRequest.item",
    "CoverageEligibilityResponse.insurance.item",
    "ExplanationOfBenefit.item",
    "ExplanationOfBenefit.item.detail",
    "ExplanationOfBenefit.item.detail.subDetail",
    "ExplanationOfBenefit.addItem",
    "ExplanationOfBenefit.addItem.detail",
    "ExplanationOfBenefit.addItem.detail.subDetail",
    "NutritionOrder.oralDiet.texture",
    "SearchParameter"
  ]
}
unitPrice: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term.asset.valuedItem"
    ]
  },
  "bare": [
    "Claim.item",
    "Claim.item.detail",
    "Claim.item.detail.subDetail",
    "ClaimResponse.addItem",
    "ClaimResponse.addItem.detail",
    "ClaimResponse.addItem.detail.subDetail",
    "CoverageEligibilityRequest.item",
    "ExplanationOfBenefit.item",
    "ExplanationOfBenefit.item.detail",
    "ExplanationOfBenefit.item.detail.subDetail",
    "ExplanationOfBenefit.addItem",
    "ExplanationOfBenefit.addItem.detail",
    "ExplanationOfBenefit.addItem.detail.subDetail"
  ]
}
net: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term.asset.valuedItem"
    ]
  },
  "bare": [
    "Claim.item",
    "Claim.item.detail",
    "Claim.item.detail.subDetail",
    "ClaimResponse.addItem",
    "ClaimResponse.addItem.detail",
    "ClaimResponse.addItem.detail.subDetail",
    "ExplanationOfBenefit.item",
    "ExplanationOfBenefit.item.detail",
    "ExplanationOfBenefit.item.detail.subDetail",
    "ExplanationOfBenefit.addItem",
    "ExplanationOfBenefit.addItem.detail",
    "ExplanationOfBenefit.addItem.detail.subDetail"
  ]
}
recipient: {
  "w5": {
    "FiveWs.actor": [
      "Communication",
      "CommunicationRequest"
    ],
    "FiveWs.cause": [
      "DocumentManifest"
    ]
  },
  "bare": [
    "Contract.term.asset.valuedItem",
    "Invoice",
    "PaymentNotice",
    "Task.restriction"
  ]
}
content[x]: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.friendly",
      "Contract.legal",
      "Contract.rule"
    ]
  },
  "bare": [
    "Communication.payload",
    "CommunicationRequest.payload"
  ]
}
requester: {
  "w5": {
    "FiveWs.author": [
      "CommunicationRequest",
      "DeviceRequest",
      "MedicationRequest",
      "ServiceRequest",
      "SupplyRequest",
      "Task"
    ]
  },
  "bare": [
    "Contract.term.action"
  ]
}
focus: {
  "w5": {
    "FiveWs.subject[x]": [
      "Observation"
    ],
    "FiveWs.what[x]": [
      "Task"
    ]
  },
  "bare": [
    "Composition.section",
    "EvidenceReport.section",
    "MessageDefinition",
    "MessageHeader",
    "ResearchStudy",
    "ValueSet.scope"
  ]
}
group: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term"
    ]
  },
  "bare": [
    "ConceptMap",
    "ConceptMap2",
    "Ingredient",
    "Ingredient.specifiedSubstance",
    "Measure",
    "MeasureReport",
    "StructureMap"
  ]
}
evidence: {
  "w5": {
    "FiveWs.why[x]": [
      "DetectedIssue"
    ]
  },
  "bare": [
    "Condition",
    "Permission.justification"
  ]
}
medication: {
  "w5": {
    "FiveWs.what[x]": [
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage"
    ]
  },
  "bare": [
    "ConditionDefinition"
  ]
}
class: {
  "w5": {
    "FiveWs.class": [
      "Encounter"
    ]
  },
  "bare": [
    "Consent.provision",
    "Coverage",
    "Encounter.classHistory",
    "SubstancePolymer",
    "SubstanceSourceMaterial.organism.organismGeneral"
  ]
}
issued: {
  "w5": {
    "FiveWs.recorded": [
      "Contract.term",
      "DiagnosticReport",
      "Observation",
      "TestReport"
    ]
  },
  "bare": [
    "Contract"
  ]
}
applies: {
  "w5": {
    "FiveWs.done[x]": [
      "Contract.term"
    ]
  },
  "bare": [
    "Contract"
  ]
}
term: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract"
    ]
  },
  "bare": [
    "CoverageEligibilityResponse.insurance.item",
    "ExplanationOfBenefit.benefitBalance"
  ]
}
condition: {
  "w5": {
    "FiveWs.why[x]": [
      "Encounter.diagnosis"
    ],
    "FiveWs.what[x]": [
      "EpisodeOfCare.diagnosis",
      "ResearchStudy"
    ]
  },
  "bare": [
    "Contract.term.asset",
    "FamilyMemberHistory",
    "ObservationDefinition.qualifiedValue",
    "PlanDefinition.action",
    "RequestGroup.action",
    "RiskAssessment",
    "Specimen",
    "StructureMap.group.rule.source"
  ]
}
performerType: {
  "w5": {
    "FiveWs.actor": [
      "DeviceRequest",
      "ServiceRequest",
      "Task"
    ]
  },
  "bare": [
    "Contract.term.action",
    "MedicationRequest",
    "ObservationDefinition"
  ]
}
signature: {
  "w5": {
    "FiveWs.author": [
      "Contract.signer"
    ]
  },
  "bare": [
    "Provenance"
  ]
}
rule: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract"
    ]
  },
  "bare": [
    "GraphDefinition.link.target.compartment",
    "StructureMap.group",
    "StructureMap.group.rule"
  ]
}
deviceIdentifier: {
  "w5": {
    "FiveWs.what[x]": [
      "Device.udiCarrier"
    ]
  },
  "bare": [
    "DeviceDefinition.udiDeviceIdentifier",
    "DeviceDefinition.packaging.udiDeviceIdentifier"
  ]
}
manufacturer: {
  "w5": {
    "FiveWs.what[x]": [
      "Device"
    ]
  },
  "bare": [
    "Immunization",
    "Ingredient",
    "ManufacturedItemDefinition",
    "NutritionProduct",
    "PackagedProductDefinition",
    "PackagedProductDefinition.package",
    "SubstanceDefinition"
  ]
}
expirationDate: {
  "w5": {
    "FiveWs.what[x]": [
      "Device"
    ]
  },
  "bare": [
    "Immunization",
    "Medication.batch"
  ]
}
lotNumber: {
  "w5": {
    "FiveWs.what[x]": [
      "Device"
    ]
  },
  "bare": [
    "Immunization",
    "Medication.batch",
    "NutritionProduct.instance"
  ]
}
component: {
  "w5": {
    "FiveWs.what[x]": [
      "Device.version",
      "DeviceDefinition.version"
    ]
  },
  "bare": [
    "Measure.group.stratifier",
    "MeasureReport.group.stratifier.stratum",
    "Observation",
    "ObservationDefinition",
    "SearchParameter"
  ]
}
operationalStatus: {
  "w5": {
    "FiveWs.status": [
      "Location"
    ]
  },
  "bare": [
    "Device",
    "DeviceMetric"
  ]
}
destination: {
  "w5": {
    "FiveWs.subject[x]": [
      "MessageHeader"
    ]
  },
  "bare": [
    "DeviceDispense",
    "Encounter.hospitalization",
    "MedicationDispense",
    "SupplyDelivery",
    "TestScript",
    "TestScript.metadata.capability",
    "TestScript.setup.action.operation"
  ]
}
parameter: {
  "w5": {
    "FiveWs.what[x]": [
      "DeviceRequest",
      "SupplyRequest"
    ]
  },
  "bare": [
    "ImplementationGuide.definition",
    "Library",
    "OperationDefinition",
    "Parameters",
    "StructureMap.group.rule.target",
    "TerminologyCapabilities.expansion",
    "ValueSet.expansion"
  ]
}
informationSource: {
  "w5": {
    "FiveWs.actor": [
      "DeviceUsage"
    ],
    "FiveWs.source": [
      "MedicationUsage"
    ]
  },
  "bare": [
    "MedicationRequest"
  ]
}
physicalType: {
  "w5": {
    "FiveWs.class": [
      "Location"
    ]
  },
  "bare": [
    "Encounter.location"
  ]
}
method: {
  "w5": {
    "FiveWs.class": [
      "RiskAssessment"
    ]
  },
  "bare": [
    "EvidenceVariable.characteristic",
    "MedicationAdministration.dosage",
    "MolecularSequence.quality",
    "Observation",
    "ObservationDefinition",
    "Specimen.collection",
    "SubstanceDefinition.molecularWeight",
    "TestScript.setup.action.operation"
  ]
}
receiver: {
  "w5": {
    "FiveWs.subject[x]": [
      "MessageHeader.destination"
    ]
  },
  "bare": [
    "ExampleScenario.process.step.operation",
    "MedicationDispense",
    "SupplyDelivery"
  ]
}
response: {
  "w5": {
    "FiveWs.subject[x]": [
      "PaymentNotice"
    ]
  },
  "bare": [
    "ExampleScenario.process.step.operation",
    "MessageHeader",
    "PaymentReconciliation.detail",
    "TestScript.setup.action.assert"
  ]
}
measure: {
  "w5": {
    "FiveWs.what[x]": [
      "MeasureReport"
    ]
  },
  "bare": [
    "Goal.target",
    "PlanDefinition.goal.target"
  ]
}
modality: {
  "w5": {
    "FiveWs.class": [
      "ImagingStudy"
    ]
  },
  "bare": [
    "ImagingStudy.series"
  ]
}
started: {
  "w5": {
    "FiveWs.init": [
      "ImagingStudy"
    ]
  },
  "bare": [
    "ImagingStudy.series"
  ]
}
vaccineCode: {
  "w5": {
    "FiveWs.what[x]": [
      "Immunization"
    ]
  },
  "bare": [
    "ImmunizationRecommendation.recommendation"
  ]
}
primarySource: {
  "w5": {
    "FiveWs.source": [
      "Immunization"
    ]
  },
  "bare": [
    "VerificationResult"
  ]
}
reporter: {
  "w5": {
    "FiveWs.source": [
      "MeasureReport"
    ]
  },
  "bare": [
    "InventoryReport"
  ]
}
sponsor: {
  "w5": {
    "FiveWs.actor": [
      "ResearchStudy"
    ]
  },
  "bare": [
    "Medication",
    "MedicationKnowledge"
  ]
}
event[x]: {
  "w5": {
    "FiveWs.what[x]": [
      "MessageHeader"
    ]
  },
  "bare": [
    "MessageDefinition"
  ]
}
supplier: {
  "w5": {
    "FiveWs.actor": [
      "SupplyRequest"
    ]
  },
  "bare": [
    "SubstanceDefinition",
    "SupplyDelivery"
  ]
}
lockedDate: {
  "w5": {
    "FiveWs.init": [
      "ValueSet.compose"
    ]
  },
  "bare": [
    "TerminologyCapabilities"
  ]
}


singles:
billingStatus: {
  "w5": {},
  "bare": [
    "Account"
  ]
}
servicePeriod: {
  "w5": {
    "FiveWs.done[x]": [
      "Account"
    ]
  },
  "bare": []
}
guarantor: {
  "w5": {},
  "bare": [
    "Account"
  ]
}
onHold: {
  "w5": {},
  "bare": [
    "Account.guarantor"
  ]
}
specimenRequirement: {
  "w5": {},
  "bare": [
    "ActivityDefinition"
  ]
}
observationRequirement: {
  "w5": {},
  "bare": [
    "ActivityDefinition"
  ]
}
observationResultRequirement: {
  "w5": {},
  "bare": [
    "ActivityDefinition"
  ]
}
administrableDoseForm: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition"
  ]
}
producedFrom: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition"
  ]
}
routeOfAdministration: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition"
  ]
}
firstDose: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration"
  ]
}
maxSingleDose: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration"
  ]
}
maxDosePerDay: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration"
  ]
}
maxDosePerTreatmentPeriod: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration"
  ]
}
maxTreatmentPeriod: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration"
  ]
}
targetSpecies: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration"
  ]
}
withdrawalPeriod: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration.targetSpecies"
  ]
}
tissue: {
  "w5": {},
  "bare": [
    "AdministrableProductDefinition.routeOfAdministration.targetSpecies.withdrawalPeriod"
  ]
}
actuality: {
  "w5": {
    "FiveWs.class": [
      "AdverseEvent"
    ]
  },
  "bare": []
}
detected: {
  "w5": {},
  "bare": [
    "AdverseEvent"
  ]
}
recordedDate: {
  "w5": {
    "FiveWs.recorded": [
      "AdverseEvent",
      "AllergyIntolerance",
      "Condition"
    ]
  },
  "bare": []
}
resultingCondition: {
  "w5": {},
  "bare": [
    "AdverseEvent"
  ]
}
seriousness: {
  "w5": {},
  "bare": [
    "AdverseEvent"
  ]
}
suspectEntity: {
  "w5": {},
  "bare": [
    "AdverseEvent"
  ]
}
instance[x]: {
  "w5": {},
  "bare": [
    "AdverseEvent.suspectEntity"
  ]
}
causality: {
  "w5": {},
  "bare": [
    "AdverseEvent.suspectEntity"
  ]
}
assessmentMethod: {
  "w5": {},
  "bare": [
    "AdverseEvent.suspectEntity.causality"
  ]
}
entityRelatedness: {
  "w5": {},
  "bare": [
    "AdverseEvent.suspectEntity.causality"
  ]
}
contributingFactor: {
  "w5": {},
  "bare": [
    "AdverseEvent"
  ]
}
preventiveAction: {
  "w5": {},
  "bare": [
    "AdverseEvent"
  ]
}
mitigatingAction: {
  "w5": {},
  "bare": [
    "AdverseEvent"
  ]
}
clinicalStatus: {
  "w5": {
    "FiveWs.status": [
      "AllergyIntolerance",
      "Condition"
    ]
  },
  "bare": []
}
verificationStatus: {
  "w5": {
    "FiveWs.status": [
      "AllergyIntolerance",
      "Condition"
    ]
  },
  "bare": []
}
criticality: {
  "w5": {
    "FiveWs.grade": [
      "AllergyIntolerance"
    ]
  },
  "bare": []
}
lastOccurrence: {
  "w5": {},
  "bare": [
    "AllergyIntolerance"
  ]
}
manifestation: {
  "w5": {},
  "bare": [
    "AllergyIntolerance.reaction"
  ]
}
onset: {
  "w5": {},
  "bare": [
    "AllergyIntolerance.reaction"
  ]
}
exposureRoute: {
  "w5": {},
  "bare": [
    "AllergyIntolerance.reaction"
  ]
}
cancellationReason: {
  "w5": {},
  "bare": [
    "Appointment"
  ]
}
minutesDuration: {
  "w5": {},
  "bare": [
    "Appointment"
  ]
}
slot: {
  "w5": {},
  "bare": [
    "Appointment"
  ]
}
requestedPeriod: {
  "w5": {},
  "bare": [
    "Appointment"
  ]
}
participantType: {
  "w5": {},
  "bare": [
    "AppointmentResponse"
  ]
}
participantStatus: {
  "w5": {},
  "bare": [
    "AppointmentResponse"
  ]
}
recorded: {
  "w5": {
    "FiveWs.recorded": [
      "AuditEvent",
      "Immunization",
      "MedicationAdministration",
      "NutritionIntake",
      "Procedure",
      "Provenance"
    ]
  },
  "bare": []
}
purposeOfEvent: {
  "w5": {
    "FiveWs.why[x]": [
      "AuditEvent"
    ]
  },
  "bare": []
}
altId: {
  "w5": {
    "FiveWs.who": [
      "AuditEvent.agent"
    ]
  },
  "bare": []
}
purposeOfUse: {
  "w5": {
    "FiveWs.why[x]": [
      "AuditEvent.agent"
    ]
  },
  "bare": []
}
observer: {
  "w5": {
    "FiveWs.witness": [
      "AuditEvent.source"
    ]
  },
  "bare": []
}
lifecycle: {
  "w5": {
    "FiveWs.context": [
      "AuditEvent.entity"
    ]
  },
  "bare": []
}
query: {
  "w5": {
    "FiveWs.context": [
      "AuditEvent.entity"
    ]
  },
  "bare": []
}
securityContext: {
  "w5": {},
  "bare": [
    "Binary"
  ]
}
productCategory: {
  "w5": {},
  "bare": [
    "BiologicallyDerivedProduct"
  ]
}
manipulation: {
  "w5": {},
  "bare": [
    "BiologicallyDerivedProduct"
  ]
}
storage: {
  "w5": {},
  "bare": [
    "BiologicallyDerivedProduct"
  ]
}
temperature: {
  "w5": {},
  "bare": [
    "BiologicallyDerivedProduct.storage"
  ]
}
scale: {
  "w5": {},
  "bare": [
    "BiologicallyDerivedProduct.storage"
  ]
}
active: {
  "w5": {
    "FiveWs.status": [
      "BodyStructure",
      "Group",
      "HealthcareService",
      "Linkage",
      "Organization",
      "OrganizationAffiliation",
      "Patient",
      "Person",
      "Practitioner",
      "PractitionerRole",
      "RelatedPerson",
      "Schedule"
    ]
  },
  "bare": []
}
morphology: {
  "w5": {
    "FiveWs.what[x]": [
      "BodyStructure"
    ]
  },
  "bare": []
}
locationQualifier: {
  "w5": {
    "FiveWs.what[x]": [
      "BodyStructure"
    ]
  },
  "bare": []
}
security: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest"
  ]
}
cors: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.security"
  ]
}
versioning: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
readHistory: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
updateCreate: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
conditionalCreate: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
conditionalRead: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
conditionalUpdate: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
conditionalDelete: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
referencePolicy: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
searchInclude: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
searchRevInclude: {
  "w5": {},
  "bare": [
    "CapabilityStatement.rest.resource"
  ]
}
messaging: {
  "w5": {},
  "bare": [
    "CapabilityStatement"
  ]
}
reliableCache: {
  "w5": {},
  "bare": [
    "CapabilityStatement.messaging"
  ]
}
supportedMessage: {
  "w5": {},
  "bare": [
    "CapabilityStatement.messaging"
  ]
}
contributor: {
  "w5": {},
  "bare": [
    "CarePlan"
  ]
}
performedActivity: {
  "w5": {},
  "bare": [
    "CarePlan.activity"
  ]
}
plannedActivityReference: {
  "w5": {},
  "bare": [
    "CarePlan.activity"
  ]
}
plannedActivityDetail: {
  "w5": {},
  "bare": [
    "CarePlan.activity"
  ]
}
scheduled[x]: {
  "w5": {},
  "bare": [
    "CarePlan.activity.plannedActivityDetail"
  ]
}
reported[x]: {
  "w5": {
    "FiveWs.source": [
      "CarePlan.activity.plannedActivityDetail",
      "NutritionIntake",
      "Procedure"
    ]
  },
  "bare": []
}
dailyAmount: {
  "w5": {},
  "bare": [
    "CarePlan.activity.plannedActivityDetail"
  ]
}
coverage[x]: {
  "w5": {},
  "bare": [
    "CareTeam.participant"
  ]
}
orderable: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
referencedItem: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
relatedEntry: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
updatedBy: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
estimatedDuration: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
billingCode: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
billingSummary: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
scheduleSummary: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
limitationSummary: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
regulatorySummary: {
  "w5": {},
  "bare": [
    "CatalogEntry"
  ]
}
definitionUri: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
definitionCanonical: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
performingOrganization: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
requestingOrganization: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
costCenter: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
bodysite: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
factorOverride: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
priceOverride: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
overrideReason: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
enteredDate: {
  "w5": {},
  "bare": [
    "ChargeItem"
  ]
}
propertyGroup: {
  "w5": {},
  "bare": [
    "ChargeItemDefinition"
  ]
}
citedArtifact: {
  "w5": {},
  "bare": [
    "Citation"
  ]
}
dateAccessed: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact"
  ]
}
publicationForm: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact"
  ]
}
publishedIn: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
publisherLocation: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.publishedIn"
  ]
}
periodicRelease: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
citedMedium: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease"
  ]
}
volume: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease"
  ]
}
dateOfPublication: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease"
  ]
}
year: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication"
  ]
}
month: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication"
  ]
}
day: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication"
  ]
}
season: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication"
  ]
}
articleDate: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
lastRevisionDate: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
accessionNumber: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
pageString: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
firstPage: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
lastPage: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
pageCount: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.publicationForm"
  ]
}
whoClassified: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.classification"
  ]
}
person: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.classification.whoClassified"
  ]
}
classifierCopyright: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.classification.whoClassified"
  ]
}
freeToShare: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.classification.whoClassified"
  ]
}
contributorship: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact"
  ]
}
complete: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship"
  ]
}
initials: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry"
  ]
}
collectiveName: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry"
  ]
}
affiliationInfo: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry"
  ]
}
affiliation: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry.affiliationInfo"
  ]
}
contributionType: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry"
  ]
}
contributionInstance: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry"
  ]
}
correspondingContact: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry"
  ]
}
listOrder: {
  "w5": {},
  "bare": [
    "Citation.citedArtifact.contributorship.entry"
  ]
}
billablePeriod: {
  "w5": {
    "FiveWs.done[x]": [
      "Claim",
      "ExplanationOfBenefit"
    ]
  },
  "bare": []
}
referral: {
  "w5": {
    "FiveWs.cause": [
      "Claim",
      "ExplanationOfBenefit"
    ]
  },
  "bare": []
}
serviced[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "Claim.item",
      "ClaimResponse.addItem",
      "CoverageEligibilityRequest",
      "CoverageEligibilityResponse",
      "ExplanationOfBenefit.item",
      "ExplanationOfBenefit.addItem"
    ]
  },
  "bare": []
}
preAuthPeriod: {
  "w5": {},
  "bare": [
    "ClaimResponse"
  ]
}
payeeType: {
  "w5": {},
  "bare": [
    "ClaimResponse"
  ]
}
subdetailSequence: {
  "w5": {},
  "bare": [
    "ClaimResponse.addItem"
  ]
}
communicationRequest: {
  "w5": {},
  "bare": [
    "ClaimResponse"
  ]
}
effective[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "ClinicalImpression",
      "DiagnosticReport",
      "MedicationUsage",
      "Observation"
    ]
  },
  "bare": []
}
problem: {
  "w5": {
    "FiveWs.why[x]": [
      "ClinicalImpression"
    ]
  },
  "bare": []
}
finding: {
  "w5": {},
  "bare": [
    "ClinicalImpression"
  ]
}
prognosisCodeableConcept: {
  "w5": {},
  "bare": [
    "ClinicalImpression"
  ]
}
prognosisReference: {
  "w5": {},
  "bare": [
    "ClinicalImpression"
  ]
}
therapy: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.contraindication.otherTherapy"
  ]
}
intendedEffect: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.indication"
  ]
}
interactant: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.interaction"
  ]
}
effect: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.interaction"
  ]
}
incidence: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.interaction"
  ]
}
management: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.interaction"
  ]
}
symptomConditionEffect: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.undesirableEffect"
  ]
}
frequencyOfOccurrence: {
  "w5": {},
  "bare": [
    "ClinicalUseIssue.undesirableEffect"
  ]
}
caseSensitive: {
  "w5": {},
  "bare": [
    "CodeSystem"
  ]
}
hierarchyMeaning: {
  "w5": {},
  "bare": [
    "CodeSystem"
  ]
}
versionNeeded: {
  "w5": {},
  "bare": [
    "CodeSystem"
  ]
}
supplements: {
  "w5": {},
  "bare": [
    "CodeSystem"
  ]
}
inResponseTo: {
  "w5": {},
  "bare": [
    "Communication"
  ]
}
about: {
  "w5": {
    "FiveWs.context": [
      "Communication",
      "CommunicationRequest"
    ]
  },
  "bare": []
}
sent: {
  "w5": {
    "FiveWs.done[x]": [
      "Communication"
    ]
  },
  "bare": []
}
received: {
  "w5": {
    "FiveWs.done[x]": [
      "Communication"
    ]
  },
  "bare": []
}
authoredOn: {
  "w5": {
    "FiveWs.recorded": [
      "CommunicationRequest",
      "DeviceRequest",
      "MedicationRequest",
      "RequestGroup",
      "ServiceRequest",
      "SupplyRequest",
      "Task"
    ]
  },
  "bare": []
}
informationProvider: {
  "w5": {
    "FiveWs.actor": [
      "CommunicationRequest"
    ]
  },
  "bare": []
}
abatement[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "Condition"
    ]
  },
  "bare": []
}
assessment: {
  "w5": {},
  "bare": [
    "Condition.stage"
  ]
}
hasSeverity: {
  "w5": {},
  "bare": [
    "ConditionDefinition"
  ]
}
hasBodySite: {
  "w5": {},
  "bare": [
    "ConditionDefinition"
  ]
}
hasStage: {
  "w5": {},
  "bare": [
    "ConditionDefinition"
  ]
}
observation: {
  "w5": {},
  "bare": [
    "ConditionDefinition"
  ]
}
precondition: {
  "w5": {},
  "bare": [
    "ConditionDefinition"
  ]
}
dateTime: {
  "w5": {
    "FiveWs.recorded": [
      "Consent",
      "NutritionOrder"
    ]
  },
  "bare": []
}
grantor: {
  "w5": {},
  "bare": [
    "Consent"
  ]
}
grantee: {
  "w5": {},
  "bare": [
    "Consent"
  ]
}
manager: {
  "w5": {
    "FiveWs.witness": [
      "Consent"
    ]
  },
  "bare": []
}
controller: {
  "w5": {},
  "bare": [
    "Consent"
  ]
}
sourceAttachment: {
  "w5": {},
  "bare": [
    "Consent"
  ]
}
sourceReference: {
  "w5": {},
  "bare": [
    "Consent"
  ]
}
policyRule: {
  "w5": {},
  "bare": [
    "Consent"
  ]
}
verification: {
  "w5": {},
  "bare": [
    "Consent"
  ]
}
verified: {
  "w5": {},
  "bare": [
    "Consent.verification"
  ]
}
verificationType: {
  "w5": {},
  "bare": [
    "Consent.verification"
  ]
}
verifiedBy: {
  "w5": {},
  "bare": [
    "Consent.verification"
  ]
}
verifiedWith: {
  "w5": {},
  "bare": [
    "Consent.verification"
  ]
}
verificationDate: {
  "w5": {},
  "bare": [
    "Consent.verification"
  ]
}
dataPeriod: {
  "w5": {},
  "bare": [
    "Consent.provision"
  ]
}
meaning: {
  "w5": {},
  "bare": [
    "Consent.provision.data"
  ]
}
legalState: {
  "w5": {},
  "bare": [
    "Contract"
  ]
}
contentDerivative: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract"
    ]
  },
  "bare": []
}
expirationType: {
  "w5": {},
  "bare": [
    "Contract"
  ]
}
contentDefinition: {
  "w5": {},
  "bare": [
    "Contract"
  ]
}
publicationStatus: {
  "w5": {},
  "bare": [
    "Contract.contentDefinition"
  ]
}
control: {
  "w5": {},
  "bare": [
    "Contract.term.securityLabel"
  ]
}
offer: {
  "w5": {},
  "bare": [
    "Contract.term"
  ]
}
decision: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term.offer"
    ]
  },
  "bare": []
}
decisionMode: {
  "w5": {},
  "bare": [
    "Contract.term.offer"
  ]
}
asset: {
  "w5": {},
  "bare": [
    "Contract.term"
  ]
}
periodType: {
  "w5": {},
  "bare": [
    "Contract.term.asset"
  ]
}
usePeriod: {
  "w5": {},
  "bare": [
    "Contract.term.asset"
  ]
}
valuedItem: {
  "w5": {},
  "bare": [
    "Contract.term.asset"
  ]
}
entity[x]: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term.asset.valuedItem"
    ]
  },
  "bare": []
}
effectiveTime: {
  "w5": {
    "FiveWs.done[x]": [
      "Contract.term.asset.valuedItem"
    ]
  },
  "bare": []
}
points: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract.term.asset.valuedItem"
    ]
  },
  "bare": []
}
contextLinkId: {
  "w5": {},
  "bare": [
    "Contract.term.action"
  ]
}
requesterLinkId: {
  "w5": {},
  "bare": [
    "Contract.term.action"
  ]
}
performerRole: {
  "w5": {},
  "bare": [
    "Contract.term.action"
  ]
}
performerLinkId: {
  "w5": {},
  "bare": [
    "Contract.term.action"
  ]
}
reasonLinkId: {
  "w5": {},
  "bare": [
    "Contract.term.action"
  ]
}
signer: {
  "w5": {},
  "bare": [
    "Contract"
  ]
}
friendly: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract"
    ]
  },
  "bare": []
}
legal: {
  "w5": {
    "FiveWs.what[x]": [
      "Contract"
    ]
  },
  "bare": []
}
legallyBinding[x]: {
  "w5": {},
  "bare": [
    "Contract"
  ]
}
policyHolder: {
  "w5": {
    "FiveWs.subject[x]": [
      "Coverage"
    ]
  },
  "bare": []
}
subscriber: {
  "w5": {
    "FiveWs.subject[x]": [
      "Coverage"
    ]
  },
  "bare": []
}
subscriberId: {
  "w5": {
    "FiveWs.subject[x]": [
      "Coverage"
    ]
  },
  "bare": []
}
beneficiary: {
  "w5": {
    "FiveWs.subject[x]": [
      "Coverage"
    ]
  },
  "bare": []
}
payor: {
  "w5": {
    "FiveWs.author": [
      "Coverage"
    ]
  },
  "bare": []
}
costToBeneficiary: {
  "w5": {},
  "bare": [
    "Coverage"
  ]
}
exception: {
  "w5": {},
  "bare": [
    "Coverage.costToBeneficiary"
  ]
}
subrogation: {
  "w5": {},
  "bare": [
    "Coverage"
  ]
}
contract: {
  "w5": {},
  "bare": [
    "Coverage"
  ]
}
information: {
  "w5": {},
  "bare": [
    "CoverageEligibilityRequest.supportingInfo"
  ]
}
appliesToAll: {
  "w5": {},
  "bare": [
    "CoverageEligibilityRequest.supportingInfo"
  ]
}
supportingInfoSequence: {
  "w5": {},
  "bare": [
    "CoverageEligibilityRequest.item"
  ]
}
inforce: {
  "w5": {},
  "bare": [
    "CoverageEligibilityResponse.insurance"
  ]
}
authorizationRequired: {
  "w5": {},
  "bare": [
    "CoverageEligibilityResponse.insurance.item"
  ]
}
authorizationSupporting: {
  "w5": {},
  "bare": [
    "CoverageEligibilityResponse.insurance.item"
  ]
}
authorizationUrl: {
  "w5": {},
  "bare": [
    "CoverageEligibilityResponse.insurance.item"
  ]
}
identified[x]: {
  "w5": {
    "FiveWs.recorded": [
      "DetectedIssue"
    ]
  },
  "bare": []
}
implicated: {
  "w5": {},
  "bare": [
    "DetectedIssue"
  ]
}
displayName: {
  "w5": {},
  "bare": [
    "Device"
  ]
}
udiCarrier: {
  "w5": {
    "FiveWs.identifier": [
      "Device"
    ]
  },
  "bare": []
}
carrierAIDC: {
  "w5": {},
  "bare": [
    "Device.udiCarrier"
  ]
}
carrierHRF: {
  "w5": {},
  "bare": [
    "Device.udiCarrier"
  ]
}
entryType: {
  "w5": {},
  "bare": [
    "Device.udiCarrier"
  ]
}
distinctIdentifier: {
  "w5": {
    "FiveWs.what[x]": [
      "Device"
    ]
  },
  "bare": []
}
manufactureDate: {
  "w5": {
    "FiveWs.what[x]": [
      "Device"
    ]
  },
  "bare": []
}
serialNumber: {
  "w5": {
    "FiveWs.what[x]": [
      "Device"
    ]
  },
  "bare": []
}
modelNumber: {
  "w5": {
    "FiveWs.what[x]": [
      "Device",
      "DeviceDefinition"
    ]
  },
  "bare": []
}
partNumber: {
  "w5": {
    "FiveWs.what[x]": [
      "Device"
    ]
  },
  "bare": []
}
associationStatus: {
  "w5": {},
  "bare": [
    "Device"
  ]
}
manufacturer[x]: {
  "w5": {
    "FiveWs.what[x]": [
      "DeviceDefinition"
    ]
  },
  "bare": []
}
hasPart: {
  "w5": {},
  "bare": [
    "DeviceDefinition"
  ]
}
distributor: {
  "w5": {},
  "bare": [
    "DeviceDefinition.packaging"
  ]
}
organizationReference: {
  "w5": {},
  "bare": [
    "DeviceDefinition.packaging.distributor"
  ]
}
physicalCharacteristics: {
  "w5": {},
  "bare": [
    "DeviceDefinition"
  ]
}
languageCode: {
  "w5": {},
  "bare": [
    "DeviceDefinition"
  ]
}
valueQuantity: {
  "w5": {},
  "bare": [
    "DeviceDefinition.property"
  ]
}
valueCode: {
  "w5": {},
  "bare": [
    "DeviceDefinition.property"
  ]
}
parentDevice: {
  "w5": {},
  "bare": [
    "DeviceDefinition"
  ]
}
alternate: {
  "w5": {},
  "bare": [
    "DeviceDefinition.material"
  ]
}
guideline: {
  "w5": {},
  "bare": [
    "DeviceDefinition"
  ]
}
warning: {
  "w5": {},
  "bare": [
    "DeviceDefinition.guideline"
  ]
}
chargeItem: {
  "w5": {},
  "bare": [
    "DeviceDefinition"
  ]
}
chargeItemCode: {
  "w5": {},
  "bare": [
    "DeviceDefinition.chargeItem"
  ]
}
preparedDate: {
  "w5": {},
  "bare": [
    "DeviceDispense"
  ]
}
measurementPeriod: {
  "w5": {},
  "bare": [
    "DeviceMetric"
  ]
}
calibration: {
  "w5": {},
  "bare": [
    "DeviceMetric"
  ]
}
state: {
  "w5": {},
  "bare": [
    "DeviceMetric.calibration"
  ]
}
priorRequest: {
  "w5": {},
  "bare": [
    "DeviceRequest"
  ]
}
dateAsserted: {
  "w5": {
    "FiveWs.recorded": [
      "DeviceUsage",
      "MedicationUsage"
    ]
  },
  "bare": []
}
usageStatus: {
  "w5": {},
  "bare": [
    "DeviceUsage"
  ]
}
usageReason: {
  "w5": {},
  "bare": [
    "DeviceUsage"
  ]
}
resultsInterpreter: {
  "w5": {
    "FiveWs.actor": [
      "DiagnosticReport"
    ]
  },
  "bare": []
}
imagingStudy: {
  "w5": {},
  "bare": [
    "DiagnosticReport"
  ]
}
composition: {
  "w5": {},
  "bare": [
    "DiagnosticReport"
  ]
}
conclusion: {
  "w5": {},
  "bare": [
    "DiagnosticReport"
  ]
}
conclusionCode: {
  "w5": {},
  "bare": [
    "DiagnosticReport"
  ]
}
presentedForm: {
  "w5": {},
  "bare": [
    "DiagnosticReport"
  ]
}
masterIdentifier: {
  "w5": {
    "FiveWs.identifier": [
      "DocumentManifest"
    ]
  },
  "bare": []
}
ref: {
  "w5": {},
  "bare": [
    "DocumentManifest.related"
  ]
}
docStatus: {
  "w5": {
    "FiveWs.status": [
      "DocumentReference"
    ]
  },
  "bare": []
}
facilityType: {
  "w5": {},
  "bare": [
    "DocumentReference"
  ]
}
practiceSetting: {
  "w5": {},
  "bare": [
    "DocumentReference"
  ]
}
sourcePatientInfo: {
  "w5": {},
  "bare": [
    "DocumentReference"
  ]
}
classHistory: {
  "w5": {},
  "bare": [
    "Encounter"
  ]
}
subjectStatus: {
  "w5": {},
  "bare": [
    "Encounter"
  ]
}
episodeOfCare: {
  "w5": {
    "FiveWs.context": [
      "Encounter"
    ]
  },
  "bare": []
}
hospitalization: {
  "w5": {},
  "bare": [
    "Encounter"
  ]
}
preAdmissionIdentifier: {
  "w5": {},
  "bare": [
    "Encounter.hospitalization"
  ]
}
admitSource: {
  "w5": {},
  "bare": [
    "Encounter.hospitalization"
  ]
}
reAdmission: {
  "w5": {},
  "bare": [
    "Encounter.hospitalization"
  ]
}
dietPreference: {
  "w5": {},
  "bare": [
    "Encounter.hospitalization"
  ]
}
specialCourtesy: {
  "w5": {},
  "bare": [
    "Encounter.hospitalization"
  ]
}
specialArrangement: {
  "w5": {},
  "bare": [
    "Encounter.hospitalization"
  ]
}
dischargeDisposition: {
  "w5": {},
  "bare": [
    "Encounter.hospitalization"
  ]
}
serviceProvider: {
  "w5": {},
  "bare": [
    "Encounter"
  ]
}
connectionType: {
  "w5": {
    "FiveWs.class": [
      "Endpoint"
    ]
  },
  "bare": []
}
payloadType: {
  "w5": {},
  "bare": [
    "Endpoint"
  ]
}
payloadMimeType: {
  "w5": {},
  "bare": [
    "Endpoint"
  ]
}
candidate: {
  "w5": {
    "FiveWs.actor": [
      "EnrollmentRequest"
    ]
  },
  "bare": []
}
requestProvider: {
  "w5": {},
  "bare": [
    "EnrollmentResponse"
  ]
}
referralRequest: {
  "w5": {},
  "bare": [
    "EpisodeOfCare"
  ]
}
careManager: {
  "w5": {},
  "bare": [
    "EpisodeOfCare"
  ]
}
assertion: {
  "w5": {},
  "bare": [
    "Evidence"
  ]
}
variableDefinition: {
  "w5": {},
  "bare": [
    "Evidence"
  ]
}
variableRole: {
  "w5": {},
  "bare": [
    "Evidence.variableDefinition"
  ]
}
observed: {
  "w5": {},
  "bare": [
    "Evidence.variableDefinition"
  ]
}
intended: {
  "w5": {},
  "bare": [
    "Evidence.variableDefinition"
  ]
}
directnessMatch: {
  "w5": {},
  "bare": [
    "Evidence.variableDefinition"
  ]
}
synthesisType: {
  "w5": {},
  "bare": [
    "Evidence"
  ]
}
studyType: {
  "w5": {},
  "bare": [
    "Evidence"
  ]
}
statistic: {
  "w5": {},
  "bare": [
    "Evidence"
  ]
}
distribution: {
  "w5": {},
  "bare": [
    "Evidence"
  ]
}
certainty: {
  "w5": {},
  "bare": [
    "Evidence"
  ]
}
rating: {
  "w5": {},
  "bare": [
    "Evidence.certainty"
  ]
}
rater: {
  "w5": {},
  "bare": [
    "Evidence.certainty"
  ]
}
subcomponent: {
  "w5": {},
  "bare": [
    "Evidence.certainty"
  ]
}
focusReference: {
  "w5": {},
  "bare": [
    "EvidenceReport.section"
  ]
}
entryClassifier: {
  "w5": {},
  "bare": [
    "EvidenceReport.section"
  ]
}
entryReference: {
  "w5": {},
  "bare": [
    "EvidenceReport.section"
  ]
}
entryQuantity: {
  "w5": {},
  "bare": [
    "EvidenceReport.section"
  ]
}
shortTitle: {
  "w5": {},
  "bare": [
    "EvidenceVariable"
  ]
}
characteristicCombination: {
  "w5": {},
  "bare": [
    "EvidenceVariable"
  ]
}
timeFromStart: {
  "w5": {},
  "bare": [
    "EvidenceVariable.characteristic"
  ]
}
groupMeasure: {
  "w5": {},
  "bare": [
    "EvidenceVariable.characteristic"
  ]
}
containedInstance: {
  "w5": {},
  "bare": [
    "ExampleScenario.instance"
  ]
}
preConditions: {
  "w5": {},
  "bare": [
    "ExampleScenario.process"
  ]
}
postConditions: {
  "w5": {},
  "bare": [
    "ExampleScenario.process"
  ]
}
pause: {
  "w5": {},
  "bare": [
    "ExampleScenario.process.step"
  ]
}
initiator: {
  "w5": {},
  "bare": [
    "ExampleScenario.process.step.operation"
  ]
}
initiatorActive: {
  "w5": {},
  "bare": [
    "ExampleScenario.process.step.operation"
  ]
}
receiverActive: {
  "w5": {},
  "bare": [
    "ExampleScenario.process.step.operation"
  ]
}
alternative: {
  "w5": {},
  "bare": [
    "ExampleScenario.process.step"
  ]
}
workflow: {
  "w5": {},
  "bare": [
    "ExampleScenario"
  ]
}
fundsReserveRequested: {
  "w5": {},
  "bare": [
    "ExplanationOfBenefit"
  ]
}
preAuthRefPeriod: {
  "w5": {},
  "bare": [
    "ExplanationOfBenefit"
  ]
}
precedence: {
  "w5": {},
  "bare": [
    "ExplanationOfBenefit"
  ]
}
benefitBalance: {
  "w5": {},
  "bare": [
    "ExplanationOfBenefit"
  ]
}
financial: {
  "w5": {},
  "bare": [
    "ExplanationOfBenefit.benefitBalance"
  ]
}
sex: {
  "w5": {},
  "bare": [
    "FamilyMemberHistory"
  ]
}
born[x]: {
  "w5": {},
  "bare": [
    "FamilyMemberHistory"
  ]
}
age[x]: {
  "w5": {},
  "bare": [
    "FamilyMemberHistory"
  ]
}
estimatedAge: {
  "w5": {},
  "bare": [
    "FamilyMemberHistory"
  ]
}
performed[x]: {
  "w5": {},
  "bare": [
    "FamilyMemberHistory.procedure"
  ]
}
lifecycleStatus: {
  "w5": {
    "FiveWs.status": [
      "Goal"
    ]
  },
  "bare": []
}
achievementStatus: {
  "w5": {},
  "bare": [
    "Goal"
  ]
}
continuous: {
  "w5": {},
  "bare": [
    "Goal"
  ]
}
start[x]: {
  "w5": {
    "FiveWs.planned": [
      "Goal"
    ]
  },
  "bare": []
}
due[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "Goal.target"
    ]
  },
  "bare": []
}
sliceName: {
  "w5": {},
  "bare": [
    "GraphDefinition.link"
  ]
}
managingEntity: {
  "w5": {},
  "bare": [
    "Group"
  ]
}
requestIdentifier: {
  "w5": {},
  "bare": [
    "GuidanceResponse"
  ]
}
module[x]: {
  "w5": {},
  "bare": [
    "GuidanceResponse"
  ]
}
occurrenceDateTime: {
  "w5": {
    "FiveWs.done[x]": [
      "GuidanceResponse"
    ]
  },
  "bare": []
}
evaluationMessage: {
  "w5": {},
  "bare": [
    "GuidanceResponse"
  ]
}
outputParameters: {
  "w5": {},
  "bare": [
    "GuidanceResponse"
  ]
}
providedBy: {
  "w5": {},
  "bare": [
    "HealthcareService"
  ]
}
extraDetails: {
  "w5": {},
  "bare": [
    "HealthcareService"
  ]
}
serviceProvisionCode: {
  "w5": {},
  "bare": [
    "HealthcareService"
  ]
}
program: {
  "w5": {},
  "bare": [
    "HealthcareService"
  ]
}
referralMethod: {
  "w5": {},
  "bare": [
    "HealthcareService"
  ]
}
appointmentRequired: {
  "w5": {},
  "bare": [
    "HealthcareService"
  ]
}
referrer: {
  "w5": {
    "FiveWs.cause": [
      "ImagingStudy"
    ]
  },
  "bare": []
}
interpreter: {
  "w5": {
    "FiveWs.witness": [
      "ImagingStudy"
    ]
  },
  "bare": []
}
numberOfSeries: {
  "w5": {},
  "bare": [
    "ImagingStudy"
  ]
}
laterality: {
  "w5": {},
  "bare": [
    "ImagingStudy.series"
  ]
}
sopClass: {
  "w5": {},
  "bare": [
    "ImagingStudy.series.instance"
  ]
}
informationSource[x]: {
  "w5": {
    "FiveWs.source": [
      "Immunization"
    ]
  },
  "bare": []
}
doseQuantity: {
  "w5": {},
  "bare": [
    "Immunization"
  ]
}
isSubpotent: {
  "w5": {},
  "bare": [
    "Immunization"
  ]
}
subpotentReason: {
  "w5": {},
  "bare": [
    "Immunization"
  ]
}
education: {
  "w5": {},
  "bare": [
    "Immunization"
  ]
}
documentType: {
  "w5": {},
  "bare": [
    "Immunization.education"
  ]
}
presentationDate: {
  "w5": {},
  "bare": [
    "Immunization.education"
  ]
}
programEligibility: {
  "w5": {},
  "bare": [
    "Immunization"
  ]
}
fundingSource: {
  "w5": {},
  "bare": [
    "Immunization"
  ]
}
protocolApplied: {
  "w5": {},
  "bare": [
    "Immunization"
  ]
}
immunizationEvent: {
  "w5": {},
  "bare": [
    "ImmunizationEvaluation"
  ]
}
doseStatus: {
  "w5": {},
  "bare": [
    "ImmunizationEvaluation"
  ]
}
doseStatusReason: {
  "w5": {},
  "bare": [
    "ImmunizationEvaluation"
  ]
}
recommendation: {
  "w5": {},
  "bare": [
    "ImmunizationRecommendation"
  ]
}
contraindicatedVaccineCode: {
  "w5": {},
  "bare": [
    "ImmunizationRecommendation.recommendation"
  ]
}
forecastStatus: {
  "w5": {},
  "bare": [
    "ImmunizationRecommendation.recommendation"
  ]
}
forecastReason: {
  "w5": {},
  "bare": [
    "ImmunizationRecommendation.recommendation"
  ]
}
dateCriterion: {
  "w5": {},
  "bare": [
    "ImmunizationRecommendation.recommendation"
  ]
}
supportingImmunization: {
  "w5": {},
  "bare": [
    "ImmunizationRecommendation.recommendation"
  ]
}
supportingPatientInformation: {
  "w5": {},
  "bare": [
    "ImmunizationRecommendation.recommendation"
  ]
}
license: {
  "w5": {},
  "bare": [
    "ImplementationGuide"
  ]
}
global: {
  "w5": {},
  "bare": [
    "ImplementationGuide"
  ]
}
grouping: {
  "w5": {},
  "bare": [
    "ImplementationGuide.definition"
  ]
}
groupingId: {
  "w5": {},
  "bare": [
    "ImplementationGuide.definition.resource"
  ]
}
name[x]: {
  "w5": {},
  "bare": [
    "ImplementationGuide.definition.page"
  ]
}
generation: {
  "w5": {},
  "bare": [
    "ImplementationGuide.definition.page"
  ]
}
template: {
  "w5": {},
  "bare": [
    "ImplementationGuide.definition"
  ]
}
manifest: {
  "w5": {},
  "bare": [
    "ImplementationGuide"
  ]
}
rendering: {
  "w5": {},
  "bare": [
    "ImplementationGuide.manifest"
  ]
}
relativePath: {
  "w5": {},
  "bare": [
    "ImplementationGuide.manifest.resource"
  ]
}
anchor: {
  "w5": {},
  "bare": [
    "ImplementationGuide.manifest.page"
  ]
}
presentation[x]: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength"
  ]
}
presentationHighLimit[x]: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength"
  ]
}
presentationText: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength"
  ]
}
concentration[x]: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength"
  ]
}
concentrationHighLimit[x]: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength"
  ]
}
concentrationText: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength"
  ]
}
referenceStrength: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength"
  ]
}
strengthHighLimit[x]: {
  "w5": {},
  "bare": [
    "Ingredient.substance.strength.referenceStrength"
  ]
}
specifiedSubstance: {
  "w5": {},
  "bare": [
    "Ingredient"
  ]
}
ownedBy: {
  "w5": {},
  "bare": [
    "InsurancePlan"
  ]
}
administeredBy: {
  "w5": {},
  "bare": [
    "InsurancePlan"
  ]
}
limit: {
  "w5": {},
  "bare": [
    "InsurancePlan.coverage.benefit"
  ]
}
generalCost: {
  "w5": {},
  "bare": [
    "InsurancePlan.plan"
  ]
}
groupSize: {
  "w5": {},
  "bare": [
    "InsurancePlan.plan.generalCost"
  ]
}
specificCost: {
  "w5": {},
  "bare": [
    "InsurancePlan.plan"
  ]
}
qualifiers: {
  "w5": {},
  "bare": [
    "InsurancePlan.plan.specificCost.benefit.cost"
  ]
}
countType: {
  "w5": {},
  "bare": [
    "InventoryReport"
  ]
}
operationType: {
  "w5": {},
  "bare": [
    "InventoryReport"
  ]
}
operationTypeReason: {
  "w5": {},
  "bare": [
    "InventoryReport"
  ]
}
reportedDateTime: {
  "w5": {},
  "bare": [
    "InventoryReport"
  ]
}
reportingPeriod: {
  "w5": {},
  "bare": [
    "InventoryReport"
  ]
}
inventoryListing: {
  "w5": {},
  "bare": [
    "InventoryReport"
  ]
}
itemStatus: {
  "w5": {},
  "bare": [
    "InventoryReport.inventoryListing"
  ]
}
countingDateTime: {
  "w5": {},
  "bare": [
    "InventoryReport.inventoryListing"
  ]
}
items: {
  "w5": {},
  "bare": [
    "InventoryReport.inventoryListing"
  ]
}
lot: {
  "w5": {},
  "bare": [
    "InventoryReport.inventoryListing.items"
  ]
}
serial: {
  "w5": {},
  "bare": [
    "InventoryReport.inventoryListing.items"
  ]
}
manufacturingDate: {
  "w5": {},
  "bare": [
    "InventoryReport.inventoryListing.items"
  ]
}
cancelledReason: {
  "w5": {},
  "bare": [
    "Invoice"
  ]
}
lineItem: {
  "w5": {},
  "bare": [
    "Invoice"
  ]
}
chargeItem[x]: {
  "w5": {},
  "bare": [
    "Invoice.lineItem"
  ]
}
totalPriceComponent: {
  "w5": {},
  "bare": [
    "Invoice"
  ]
}
totalNet: {
  "w5": {},
  "bare": [
    "Invoice"
  ]
}
totalGross: {
  "w5": {},
  "bare": [
    "Invoice"
  ]
}
paymentTerms: {
  "w5": {},
  "bare": [
    "Invoice"
  ]
}
flag: {
  "w5": {},
  "bare": [
    "List.entry"
  ]
}
deleted: {
  "w5": {},
  "bare": [
    "List.entry"
  ]
}
position: {
  "w5": {},
  "bare": [
    "Location"
  ]
}
longitude: {
  "w5": {},
  "bare": [
    "Location.position"
  ]
}
latitude: {
  "w5": {},
  "bare": [
    "Location.position"
  ]
}
altitude: {
  "w5": {},
  "bare": [
    "Location.position"
  ]
}
hoursOfOperation: {
  "w5": {},
  "bare": [
    "Location"
  ]
}
openingTime: {
  "w5": {},
  "bare": [
    "Location.hoursOfOperation"
  ]
}
closingTime: {
  "w5": {},
  "bare": [
    "Location.hoursOfOperation"
  ]
}
manufacturedDoseForm: {
  "w5": {},
  "bare": [
    "ManufacturedItemDefinition"
  ]
}
disclaimer: {
  "w5": {},
  "bare": [
    "Measure"
  ]
}
compositeScoring: {
  "w5": {},
  "bare": [
    "Measure"
  ]
}
riskAdjustment: {
  "w5": {},
  "bare": [
    "Measure"
  ]
}
rateAggregation: {
  "w5": {},
  "bare": [
    "Measure"
  ]
}
clinicalRecommendationStatement: {
  "w5": {},
  "bare": [
    "Measure"
  ]
}
guidance: {
  "w5": {},
  "bare": [
    "Measure"
  ]
}
inputPopulationId: {
  "w5": {},
  "bare": [
    "Measure.group.population"
  ]
}
aggregateMethod: {
  "w5": {},
  "bare": [
    "Measure.group.population"
  ]
}
supplementalData: {
  "w5": {},
  "bare": [
    "Measure"
  ]
}
dataUpdateType: {
  "w5": {},
  "bare": [
    "MeasureReport"
  ]
}
reportingVendor: {
  "w5": {},
  "bare": [
    "MeasureReport"
  ]
}
stratum: {
  "w5": {},
  "bare": [
    "MeasureReport.group.stratifier"
  ]
}
evaluatedResource: {
  "w5": {},
  "bare": [
    "MeasureReport"
  ]
}
batch: {
  "w5": {},
  "bare": [
    "Medication"
  ]
}
occurence[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "MedicationAdministration"
    ]
  },
  "bare": []
}
dose: {
  "w5": {},
  "bare": [
    "MedicationAdministration.dosage"
  ]
}
authorizingPrescription: {
  "w5": {},
  "bare": [
    "MedicationDispense"
  ]
}
daysSupply: {
  "w5": {},
  "bare": [
    "MedicationDispense"
  ]
}
whenPrepared: {
  "w5": {},
  "bare": [
    "MedicationDispense"
  ]
}
wasSubstituted: {
  "w5": {},
  "bare": [
    "MedicationDispense.substitution"
  ]
}
responsibleParty: {
  "w5": {},
  "bare": [
    "MedicationDispense.substitution"
  ]
}
relatedMedicationKnowledge: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
associatedMedication: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
associatedDefinition: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
productType: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
monograph: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
preparationInstruction: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
intendedRoute: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
cost[x]: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.cost"
  ]
}
monitoringProgram: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
indicationGuideline: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
dosingGuideline: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.indicationGuideline"
  ]
}
treatmentIntent: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.indicationGuideline.dosingGuideline"
  ]
}
administrationTreatment: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.indicationGuideline.dosingGuideline"
  ]
}
patientCharacteristic: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.indicationGuideline.dosingGuideline"
  ]
}
medicineClassification: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
drugCharacteristic: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
clinicalUseIssue: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
regulatory: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
regulatoryAuthority: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.regulatory"
  ]
}
allowed: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.regulatory.substitution"
  ]
}
maxDispense: {
  "w5": {},
  "bare": [
    "MedicationKnowledge.regulatory"
  ]
}
kineticCharacteristic: {
  "w5": {},
  "bare": [
    "MedicationKnowledge"
  ]
}
courseOfTherapyType: {
  "w5": {},
  "bare": [
    "MedicationRequest"
  ]
}
dispenseRequest: {
  "w5": {},
  "bare": [
    "MedicationRequest"
  ]
}
initialFill: {
  "w5": {},
  "bare": [
    "MedicationRequest.dispenseRequest"
  ]
}
dispenseInterval: {
  "w5": {},
  "bare": [
    "MedicationRequest.dispenseRequest"
  ]
}
numberOfRepeatsAllowed: {
  "w5": {},
  "bare": [
    "MedicationRequest.dispenseRequest"
  ]
}
expectedSupplyDuration: {
  "w5": {},
  "bare": [
    "MedicationRequest.dispenseRequest"
  ]
}
dispenser: {
  "w5": {
    "FiveWs.who": [
      "MedicationRequest.dispenseRequest"
    ]
  },
  "bare": []
}
dispenserInstruction: {
  "w5": {},
  "bare": [
    "MedicationRequest.dispenseRequest"
  ]
}
doseAdministrationAid: {
  "w5": {},
  "bare": [
    "MedicationRequest.dispenseRequest"
  ]
}
priorPrescription: {
  "w5": {},
  "bare": [
    "MedicationRequest"
  ]
}
adherence: {
  "w5": {},
  "bare": [
    "MedicationUsage"
  ]
}
combinedPharmaceuticalDoseForm: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
additionalMonitoringIndicator: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
specialMeasures: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
paediatricUseIndicator: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
impurity: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
masterFile: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
clinicalTrial: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
namePart: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition.name"
  ]
}
countryLanguage: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition.name"
  ]
}
crossReference: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
authorization: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition.operation"
  ]
}
confidentialityIndicator: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition.operation"
  ]
}
size[x]: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition.package"
  ]
}
administrableProduct: {
  "w5": {},
  "bare": [
    "MedicinalProductDefinition"
  ]
}
responseRequired: {
  "w5": {},
  "bare": [
    "MessageDefinition"
  ]
}
allowedResponse: {
  "w5": {},
  "bare": [
    "MessageDefinition"
  ]
}
situation: {
  "w5": {},
  "bare": [
    "MessageDefinition.allowedResponse"
  ]
}
graph: {
  "w5": {},
  "bare": [
    "MessageDefinition"
  ]
}
coordinateSystem: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
referenceSeq: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
chromosome: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
genomeBuild: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
referenceSeqId: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
referenceSeqPointer: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
referenceSeqString: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
strand: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
windowStart: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
windowEnd: {
  "w5": {},
  "bare": [
    "MolecularSequence.referenceSeq"
  ]
}
variant: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
observedAllele: {
  "w5": {},
  "bare": [
    "MolecularSequence.variant"
  ]
}
referenceAllele: {
  "w5": {},
  "bare": [
    "MolecularSequence.variant"
  ]
}
cigar: {
  "w5": {},
  "bare": [
    "MolecularSequence.variant"
  ]
}
variantPointer: {
  "w5": {},
  "bare": [
    "MolecularSequence.variant"
  ]
}
observedSeq: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
quality: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
standardSequence: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
truthTP: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
queryTP: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
truthFN: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
queryFP: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
gtFP: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
recall: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
fScore: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
roc: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality"
  ]
}
numTP: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality.roc"
  ]
}
numFP: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality.roc"
  ]
}
numFN: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality.roc"
  ]
}
sensitivity: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality.roc"
  ]
}
fMeasure: {
  "w5": {},
  "bare": [
    "MolecularSequence.quality.roc"
  ]
}
readCoverage: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
repository: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
datasetId: {
  "w5": {},
  "bare": [
    "MolecularSequence.repository"
  ]
}
variantsetId: {
  "w5": {},
  "bare": [
    "MolecularSequence.repository"
  ]
}
readsetId: {
  "w5": {},
  "bare": [
    "MolecularSequence.repository"
  ]
}
pointer: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
structureVariant: {
  "w5": {},
  "bare": [
    "MolecularSequence"
  ]
}
variantType: {
  "w5": {},
  "bare": [
    "MolecularSequence.structureVariant"
  ]
}
exact: {
  "w5": {},
  "bare": [
    "MolecularSequence.structureVariant"
  ]
}
outer: {
  "w5": {},
  "bare": [
    "MolecularSequence.structureVariant"
  ]
}
inner: {
  "w5": {},
  "bare": [
    "MolecularSequence.structureVariant"
  ]
}
uniqueId: {
  "w5": {},
  "bare": [
    "NamingSystem"
  ]
}
authoritative: {
  "w5": {},
  "bare": [
    "NamingSystem.uniqueId"
  ]
}
consumedItem: {
  "w5": {},
  "bare": [
    "NutritionIntake"
  ]
}
nutritionProduct: {
  "w5": {
    "FiveWs.what[x]": [
      "NutritionIntake.consumedItem"
    ]
  },
  "bare": []
}
rate: {
  "w5": {},
  "bare": [
    "NutritionIntake.consumedItem"
  ]
}
notConsumed: {
  "w5": {},
  "bare": [
    "NutritionIntake.consumedItem"
  ]
}
notConsumedReason: {
  "w5": {},
  "bare": [
    "NutritionIntake.consumedItem"
  ]
}
ingredientLabel: {
  "w5": {},
  "bare": [
    "NutritionIntake"
  ]
}
orderer: {
  "w5": {
    "FiveWs.author": [
      "NutritionOrder"
    ]
  },
  "bare": []
}
allergyIntolerance: {
  "w5": {},
  "bare": [
    "NutritionOrder"
  ]
}
foodPreferenceModifier: {
  "w5": {},
  "bare": [
    "NutritionOrder"
  ]
}
excludeFoodModifier: {
  "w5": {},
  "bare": [
    "NutritionOrder"
  ]
}
oralDiet: {
  "w5": {},
  "bare": [
    "NutritionOrder"
  ]
}
texture: {
  "w5": {},
  "bare": [
    "NutritionOrder.oralDiet"
  ]
}
foodType: {
  "w5": {},
  "bare": [
    "NutritionOrder.oralDiet.texture"
  ]
}
fluidConsistencyType: {
  "w5": {},
  "bare": [
    "NutritionOrder.oralDiet"
  ]
}
supplement: {
  "w5": {},
  "bare": [
    "NutritionOrder"
  ]
}
enteralFormula: {
  "w5": {},
  "bare": [
    "NutritionOrder"
  ]
}
baseFormulaType: {
  "w5": {
    "FiveWs.what[x]": [
      "NutritionOrder.enteralFormula"
    ]
  },
  "bare": []
}
baseFormulaProductName: {
  "w5": {},
  "bare": [
    "NutritionOrder.enteralFormula"
  ]
}
additiveType: {
  "w5": {
    "FiveWs.what[x]": [
      "NutritionOrder.enteralFormula"
    ]
  },
  "bare": []
}
additiveProductName: {
  "w5": {},
  "bare": [
    "NutritionOrder.enteralFormula"
  ]
}
caloricDensity: {
  "w5": {},
  "bare": [
    "NutritionOrder.enteralFormula"
  ]
}
routeofAdministration: {
  "w5": {},
  "bare": [
    "NutritionOrder.enteralFormula"
  ]
}
administration: {
  "w5": {},
  "bare": [
    "NutritionOrder.enteralFormula"
  ]
}
maxVolumeToDeliver: {
  "w5": {},
  "bare": [
    "NutritionOrder.enteralFormula"
  ]
}
administrationInstruction: {
  "w5": {},
  "bare": [
    "NutritionOrder.enteralFormula"
  ]
}
knownAllergen: {
  "w5": {},
  "bare": [
    "NutritionProduct"
  ]
}
productCharacteristic: {
  "w5": {},
  "bare": [
    "NutritionProduct"
  ]
}
useBy: {
  "w5": {},
  "bare": [
    "NutritionProduct.instance"
  ]
}
instantiates[x]: {
  "w5": {},
  "bare": [
    "Observation"
  ]
}
multipleResultsAllowed: {
  "w5": {},
  "bare": [
    "ObservationDefinition"
  ]
}
preferredReportName: {
  "w5": {},
  "bare": [
    "ObservationDefinition"
  ]
}
customaryUnit: {
  "w5": {},
  "bare": [
    "ObservationDefinition.quantitativeDetails"
  ]
}
conversionFactor: {
  "w5": {},
  "bare": [
    "ObservationDefinition.quantitativeDetails"
  ]
}
decimalPrecision: {
  "w5": {},
  "bare": [
    "ObservationDefinition.quantitativeDetails"
  ]
}
gestationalAge: {
  "w5": {},
  "bare": [
    "ObservationDefinition.qualifiedValue"
  ]
}
rangeCategory: {
  "w5": {},
  "bare": [
    "ObservationDefinition.qualifiedValue"
  ]
}
validCodedValueSet: {
  "w5": {},
  "bare": [
    "ObservationDefinition.qualifiedValue"
  ]
}
normalCodedValueSet: {
  "w5": {},
  "bare": [
    "ObservationDefinition.qualifiedValue"
  ]
}
abnormalCodedValueSet: {
  "w5": {},
  "bare": [
    "ObservationDefinition.qualifiedValue"
  ]
}
criticalCodedValueSet: {
  "w5": {},
  "bare": [
    "ObservationDefinition.qualifiedValue"
  ]
}
affectsState: {
  "w5": {},
  "bare": [
    "OperationDefinition"
  ]
}
inputProfile: {
  "w5": {},
  "bare": [
    "OperationDefinition"
  ]
}
outputProfile: {
  "w5": {},
  "bare": [
    "OperationDefinition"
  ]
}
targetProfile: {
  "w5": {},
  "bare": [
    "OperationDefinition.parameter"
  ]
}
searchType: {
  "w5": {},
  "bare": [
    "OperationDefinition.parameter"
  ]
}
binding: {
  "w5": {},
  "bare": [
    "OperationDefinition.parameter"
  ]
}
referencedFrom: {
  "w5": {},
  "bare": [
    "OperationDefinition.parameter"
  ]
}
overload: {
  "w5": {},
  "bare": [
    "OperationDefinition"
  ]
}
parameterName: {
  "w5": {},
  "bare": [
    "OperationDefinition.overload"
  ]
}
diagnostics: {
  "w5": {},
  "bare": [
    "OperationOutcome.issue"
  ]
}
participatingOrganization: {
  "w5": {},
  "bare": [
    "OrganizationAffiliation"
  ]
}
containedItemQuantity: {
  "w5": {},
  "bare": [
    "PackagedProductDefinition"
  ]
}
copackagedIndicator: {
  "w5": {},
  "bare": [
    "PackagedProductDefinition"
  ]
}
alternateMaterial: {
  "w5": {},
  "bare": [
    "PackagedProductDefinition.package"
  ]
}
containedItem: {
  "w5": {},
  "bare": [
    "PackagedProductDefinition.package"
  ]
}
multipleBirth[x]: {
  "w5": {},
  "bare": [
    "Patient"
  ]
}
generalPractitioner: {
  "w5": {},
  "bare": [
    "Patient"
  ]
}
paymentStatus: {
  "w5": {},
  "bare": [
    "PaymentNotice"
  ]
}
paymentIssuer: {
  "w5": {
    "FiveWs.source": [
      "PaymentReconciliation"
    ]
  },
  "bare": []
}
paymentAmount: {
  "w5": {},
  "bare": [
    "PaymentReconciliation"
  ]
}
paymentIdentifier: {
  "w5": {},
  "bare": [
    "PaymentReconciliation"
  ]
}
predecessor: {
  "w5": {},
  "bare": [
    "PaymentReconciliation.detail"
  ]
}
submitter: {
  "w5": {},
  "bare": [
    "PaymentReconciliation.detail"
  ]
}
assertionDate: {
  "w5": {},
  "bare": [
    "Permission"
  ]
}
validity: {
  "w5": {},
  "bare": [
    "Permission"
  ]
}
dataScope: {
  "w5": {},
  "bare": [
    "Permission"
  ]
}
processingActivity: {
  "w5": {},
  "bare": [
    "Permission"
  ]
}
partyReference: {
  "w5": {},
  "bare": [
    "Permission.processingActivity"
  ]
}
partyCodeableConcept: {
  "w5": {},
  "bare": [
    "Permission.processingActivity"
  ]
}
grounds: {
  "w5": {},
  "bare": [
    "Permission.justification"
  ]
}
usageLimitations: {
  "w5": {},
  "bare": [
    "Permission"
  ]
}
assurance: {
  "w5": {},
  "bare": [
    "Person.link"
  ]
}
due: {
  "w5": {},
  "bare": [
    "PlanDefinition.goal.target"
  ]
}
option: {
  "w5": {},
  "bare": [
    "PlanDefinition.actor"
  ]
}
goalId: {
  "w5": {},
  "bare": [
    "PlanDefinition.action"
  ]
}
practitioner: {
  "w5": {},
  "bare": [
    "PractitionerRole"
  ]
}
report: {
  "w5": {},
  "bare": [
    "Procedure"
  ]
}
complication: {
  "w5": {},
  "bare": [
    "Procedure"
  ]
}
complicationDetail: {
  "w5": {},
  "bare": [
    "Procedure"
  ]
}
followUp: {
  "w5": {},
  "bare": [
    "Procedure"
  ]
}
focalDevice: {
  "w5": {},
  "bare": [
    "Procedure"
  ]
}
manipulated: {
  "w5": {},
  "bare": [
    "Procedure.focalDevice"
  ]
}
used: {
  "w5": {},
  "bare": [
    "Procedure"
  ]
}
occurred[x]: {
  "w5": {
    "FiveWs.done[x]": [
      "Provenance"
    ]
  },
  "bare": []
}
subjectType: {
  "w5": {},
  "bare": [
    "Questionnaire"
  ]
}
enableWhen: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
question: {
  "w5": {},
  "bare": [
    "Questionnaire.item.enableWhen"
  ]
}
answer[x]: {
  "w5": {},
  "bare": [
    "Questionnaire.item.enableWhen"
  ]
}
enableBehavior: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
disabledDisplay: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
repeats: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
readOnly: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
maxLength: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
answerConstraint: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
answerValueSet: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
answerOption: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
initialSelected: {
  "w5": {},
  "bare": [
    "Questionnaire.item.answerOption"
  ]
}
initial: {
  "w5": {},
  "bare": [
    "Questionnaire.item"
  ]
}
authored: {
  "w5": {
    "FiveWs.recorded": [
      "QuestionnaireResponse"
    ]
  },
  "bare": []
}
region: {
  "w5": {},
  "bare": [
    "RegulatedAuthorization"
  ]
}
relatedDate: {
  "w5": {},
  "bare": [
    "RegulatedAuthorization"
  ]
}
jurisdictionalAuthorization: {
  "w5": {},
  "bare": [
    "RegulatedAuthorization"
  ]
}
holder: {
  "w5": {},
  "bare": [
    "RegulatedAuthorization"
  ]
}
regulator: {
  "w5": {},
  "bare": [
    "RegulatedAuthorization"
  ]
}
case: {
  "w5": {},
  "bare": [
    "RegulatedAuthorization"
  ]
}
application: {
  "w5": {},
  "bare": [
    "RegulatedAuthorization.case"
  ]
}
primaryPurposeType: {
  "w5": {},
  "bare": [
    "ResearchStudy"
  ]
}
focusType: {
  "w5": {},
  "bare": [
    "ResearchStudy.focus"
  ]
}
keyword: {
  "w5": {},
  "bare": [
    "ResearchStudy"
  ]
}
descriptionSummary: {
  "w5": {},
  "bare": [
    "ResearchStudy"
  ]
}
principalInvestigator: {
  "w5": {
    "FiveWs.actor": [
      "ResearchStudy"
    ]
  },
  "bare": []
}
associatedParty: {
  "w5": {},
  "bare": [
    "ResearchStudy"
  ]
}
whyStopped: {
  "w5": {
    "FiveWs.why[x]": [
      "ResearchStudy"
    ]
  },
  "bare": []
}
recruitment: {
  "w5": {
    "FiveWs.subject[x]": [
      "ResearchStudy"
    ]
  },
  "bare": []
}
targetNumber: {
  "w5": {},
  "bare": [
    "ResearchStudy.recruitment"
  ]
}
actualNumber: {
  "w5": {},
  "bare": [
    "ResearchStudy.recruitment"
  ]
}
actualGroup: {
  "w5": {
    "FiveWs.subject[x]": [
      "ResearchStudy.recruitment"
    ]
  },
  "bare": []
}
comparisonGroup: {
  "w5": {},
  "bare": [
    "ResearchStudy"
  ]
}
identifier[x]: {
  "w5": {},
  "bare": [
    "ResearchStudy.comparisonGroup"
  ]
}
intendedExposure: {
  "w5": {},
  "bare": [
    "ResearchStudy.comparisonGroup"
  ]
}
observedGroup: {
  "w5": {},
  "bare": [
    "ResearchStudy.comparisonGroup"
  ]
}
objective: {
  "w5": {},
  "bare": [
    "ResearchStudy"
  ]
}
outcomeMeasure: {
  "w5": {},
  "bare": [
    "ResearchStudy"
  ]
}
subjectState: {
  "w5": {
    "FiveWs.status": [
      "ResearchSubject.progress"
    ]
  },
  "bare": []
}
milestone: {
  "w5": {
    "FiveWs.status": [
      "ResearchSubject.progress"
    ]
  },
  "bare": []
}
startDate: {
  "w5": {},
  "bare": [
    "ResearchSubject.progress"
  ]
}
endDate: {
  "w5": {},
  "bare": [
    "ResearchSubject.progress"
  ]
}
assignedArm: {
  "w5": {},
  "bare": [
    "ResearchSubject"
  ]
}
actualArm: {
  "w5": {},
  "bare": [
    "ResearchSubject"
  ]
}
consent: {
  "w5": {},
  "bare": [
    "ResearchSubject"
  ]
}
prediction: {
  "w5": {},
  "bare": [
    "RiskAssessment"
  ]
}
probability[x]: {
  "w5": {},
  "bare": [
    "RiskAssessment.prediction"
  ]
}
qualitativeRisk: {
  "w5": {},
  "bare": [
    "RiskAssessment.prediction"
  ]
}
relativeRisk: {
  "w5": {},
  "bare": [
    "RiskAssessment.prediction"
  ]
}
when[x]: {
  "w5": {},
  "bare": [
    "RiskAssessment.prediction"
  ]
}
planningHorizon: {
  "w5": {
    "FiveWs.planned": [
      "Schedule"
    ]
  },
  "bare": []
}
xpath: {
  "w5": {},
  "bare": [
    "SearchParameter"
  ]
}
xpathUsage: {
  "w5": {},
  "bare": [
    "SearchParameter"
  ]
}
multipleOr: {
  "w5": {},
  "bare": [
    "SearchParameter"
  ]
}
multipleAnd: {
  "w5": {},
  "bare": [
    "SearchParameter"
  ]
}
comparator: {
  "w5": {},
  "bare": [
    "SearchParameter"
  ]
}
chain: {
  "w5": {},
  "bare": [
    "SearchParameter"
  ]
}
requisition: {
  "w5": {},
  "bare": [
    "ServiceRequest"
  ]
}
orderDetail: {
  "w5": {},
  "bare": [
    "ServiceRequest"
  ]
}
quantity[x]: {
  "w5": {},
  "bare": [
    "ServiceRequest"
  ]
}
asNeeded[x]: {
  "w5": {},
  "bare": [
    "ServiceRequest"
  ]
}
overbooked: {
  "w5": {},
  "bare": [
    "Slot"
  ]
}
accessionIdentifier: {
  "w5": {
    "FiveWs.identifier": [
      "Specimen"
    ]
  },
  "bare": []
}
receivedTime: {
  "w5": {
    "FiveWs.done[x]": [
      "Specimen"
    ]
  },
  "bare": []
}
fastingStatus[x]: {
  "w5": {},
  "bare": [
    "Specimen.collection"
  ]
}
specimenQuantity: {
  "w5": {},
  "bare": [
    "Specimen.container"
  ]
}
typeCollected: {
  "w5": {},
  "bare": [
    "SpecimenDefinition"
  ]
}
patientPreparation: {
  "w5": {},
  "bare": [
    "SpecimenDefinition"
  ]
}
timeAspect: {
  "w5": {},
  "bare": [
    "SpecimenDefinition"
  ]
}
typeTested: {
  "w5": {},
  "bare": [
    "SpecimenDefinition"
  ]
}
isDerived: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested"
  ]
}
preference: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested"
  ]
}
cap: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested.container"
  ]
}
minimumVolume[x]: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested.container"
  ]
}
preparation: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested.container"
  ]
}
retentionTime: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested"
  ]
}
singleUse: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested"
  ]
}
rejectionCriterion: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested"
  ]
}
temperatureQualifier: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested.handling"
  ]
}
temperatureRange: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested.handling"
  ]
}
maxDuration: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested.handling"
  ]
}
testingDestination: {
  "w5": {},
  "bare": [
    "SpecimenDefinition.typeTested"
  ]
}
import: {
  "w5": {},
  "bare": [
    "StructureMap"
  ]
}
extends: {
  "w5": {},
  "bare": [
    "StructureMap.group"
  ]
}
typeMode: {
  "w5": {},
  "bare": [
    "StructureMap.group"
  ]
}
defaultValue[x]: {
  "w5": {},
  "bare": [
    "StructureMap.group.rule.source"
  ]
}
check: {
  "w5": {},
  "bare": [
    "StructureMap.group.rule.source"
  ]
}
logMessage: {
  "w5": {},
  "bare": [
    "StructureMap.group.rule.source"
  ]
}
listRuleId: {
  "w5": {},
  "bare": [
    "StructureMap.group.rule.target"
  ]
}
filterBy: {
  "w5": {},
  "bare": [
    "Subscription"
  ]
}
channelType: {
  "w5": {},
  "bare": [
    "Subscription"
  ]
}
heartbeatPeriod: {
  "w5": {},
  "bare": [
    "Subscription"
  ]
}
timeout: {
  "w5": {},
  "bare": [
    "Subscription"
  ]
}
notificationUrlLocation: {
  "w5": {},
  "bare": [
    "Subscription"
  ]
}
maxCount: {
  "w5": {},
  "bare": [
    "Subscription"
  ]
}
eventsSinceSubscriptionStart: {
  "w5": {},
  "bare": [
    "SubscriptionStatus"
  ]
}
eventsInNotification: {
  "w5": {},
  "bare": [
    "SubscriptionStatus"
  ]
}
subscription: {
  "w5": {
    "FiveWs.why[x]": [
      "SubscriptionStatus"
    ]
  },
  "bare": []
}
resourceTrigger: {
  "w5": {},
  "bare": [
    "SubscriptionTopic"
  ]
}
methodCriteria: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger"
  ]
}
queryCriteria: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger"
  ]
}
resultForCreate: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger.queryCriteria"
  ]
}
current: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger.queryCriteria"
  ]
}
resultForDelete: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger.queryCriteria"
  ]
}
requireBoth: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger.queryCriteria"
  ]
}
fhirPathCriteria: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger"
  ]
}
canFilterBy: {
  "w5": {},
  "bare": [
    "SubscriptionTopic.resourceTrigger"
  ]
}
substance[x]: {
  "w5": {},
  "bare": [
    "Substance.ingredient"
  ]
}
grade: {
  "w5": {},
  "bare": [
    "SubstanceDefinition"
  ]
}
moiety: {
  "w5": {},
  "bare": [
    "SubstanceDefinition"
  ]
}
parameters: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.property"
  ]
}
definingSubstance: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.property"
  ]
}
referenceInformation: {
  "w5": {},
  "bare": [
    "SubstanceDefinition"
  ]
}
molecularFormulaByMoiety: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.structure"
  ]
}
technique: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.structure"
  ]
}
sourceDocument: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.structure"
  ]
}
official: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.name"
  ]
}
substanceDefinition[x]: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.relationship"
  ]
}
amountRatioHighLimit: {
  "w5": {},
  "bare": [
    "SubstanceDefinition.relationship"
  ]
}
nucleicAcid: {
  "w5": {},
  "bare": [
    "SubstanceDefinition"
  ]
}
polymer: {
  "w5": {},
  "bare": [
    "SubstanceDefinition"
  ]
}
protein: {
  "w5": {},
  "bare": [
    "SubstanceDefinition"
  ]
}
sourceMaterial: {
  "w5": {},
  "bare": [
    "SubstanceDefinition"
  ]
}
areaOfHybridisation: {
  "w5": {},
  "bare": [
    "SubstanceNucleicAcid"
  ]
}
oligoNucleotideType: {
  "w5": {},
  "bare": [
    "SubstanceNucleicAcid"
  ]
}
fivePrime: {
  "w5": {},
  "bare": [
    "SubstanceNucleicAcid.subunit"
  ]
}
threePrime: {
  "w5": {},
  "bare": [
    "SubstanceNucleicAcid.subunit"
  ]
}
linkage: {
  "w5": {},
  "bare": [
    "SubstanceNucleicAcid.subunit"
  ]
}
connectivity: {
  "w5": {},
  "bare": [
    "SubstanceNucleicAcid.subunit.linkage"
  ]
}
sugar: {
  "w5": {},
  "bare": [
    "SubstanceNucleicAcid.subunit"
  ]
}
geometry: {
  "w5": {},
  "bare": [
    "SubstancePolymer"
  ]
}
copolymerConnectivity: {
  "w5": {},
  "bare": [
    "SubstancePolymer"
  ]
}
modification: {
  "w5": {},
  "bare": [
    "SubstancePolymer"
  ]
}
monomerSet: {
  "w5": {},
  "bare": [
    "SubstancePolymer"
  ]
}
ratioType: {
  "w5": {},
  "bare": [
    "SubstancePolymer.monomerSet"
  ]
}
startingMaterial: {
  "w5": {},
  "bare": [
    "SubstancePolymer.monomerSet"
  ]
}
repeat: {
  "w5": {},
  "bare": [
    "SubstancePolymer"
  ]
}
averageMolecularFormula: {
  "w5": {},
  "bare": [
    "SubstancePolymer.repeat"
  ]
}
repeatUnitAmountType: {
  "w5": {},
  "bare": [
    "SubstancePolymer.repeat"
  ]
}
repeatUnit: {
  "w5": {},
  "bare": [
    "SubstancePolymer.repeat"
  ]
}
degreeOfPolymerisation: {
  "w5": {},
  "bare": [
    "SubstancePolymer.repeat.repeatUnit"
  ]
}
average: {
  "w5": {},
  "bare": [
    "SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation"
  ]
}
structuralRepresentation: {
  "w5": {},
  "bare": [
    "SubstancePolymer.repeat.repeatUnit"
  ]
}
disulfideLinkage: {
  "w5": {},
  "bare": [
    "SubstanceProtein"
  ]
}
nTerminalModificationId: {
  "w5": {},
  "bare": [
    "SubstanceProtein.subunit"
  ]
}
nTerminalModification: {
  "w5": {},
  "bare": [
    "SubstanceProtein.subunit"
  ]
}
cTerminalModificationId: {
  "w5": {},
  "bare": [
    "SubstanceProtein.subunit"
  ]
}
cTerminalModification: {
  "w5": {},
  "bare": [
    "SubstanceProtein.subunit"
  ]
}
geneSequenceOrigin: {
  "w5": {},
  "bare": [
    "SubstanceReferenceInformation.gene"
  ]
}
geneElement: {
  "w5": {},
  "bare": [
    "SubstanceReferenceInformation"
  ]
}
organismType: {
  "w5": {},
  "bare": [
    "SubstanceReferenceInformation.target"
  ]
}
sourceMaterialClass: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
sourceMaterialType: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
sourceMaterialState: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
organismId: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
organismName: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
parentSubstanceId: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
parentSubstanceName: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
geographicalLocation: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
developmentStage: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
fractionDescription: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
fraction: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.fractionDescription"
  ]
}
materialType: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.fractionDescription"
  ]
}
family: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism"
  ]
}
intraspecificType: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism"
  ]
}
intraspecificDescription: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism"
  ]
}
authorType: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.author"
  ]
}
authorDescription: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.author"
  ]
}
hybrid: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism"
  ]
}
maternalOrganismId: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.hybrid"
  ]
}
maternalOrganismName: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.hybrid"
  ]
}
paternalOrganismId: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.hybrid"
  ]
}
paternalOrganismName: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.hybrid"
  ]
}
hybridType: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.hybrid"
  ]
}
organismGeneral: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism"
  ]
}
kingdom: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.organismGeneral"
  ]
}
phylum: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.organism.organismGeneral"
  ]
}
partDescription: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial"
  ]
}
partLocation: {
  "w5": {},
  "bare": [
    "SubstanceSourceMaterial.partDescription"
  ]
}
suppliedItem: {
  "w5": {},
  "bare": [
    "SupplyDelivery"
  ]
}
deliverFrom: {
  "w5": {},
  "bare": [
    "SupplyRequest"
  ]
}
deliverTo: {
  "w5": {},
  "bare": [
    "SupplyRequest"
  ]
}
businessStatus: {
  "w5": {},
  "bare": [
    "Task"
  ]
}
for: {
  "w5": {
    "FiveWs.subject[x]": [
      "Task"
    ]
  },
  "bare": []
}
executionPeriod: {
  "w5": {
    "FiveWs.done[x]": [
      "Task"
    ]
  },
  "bare": []
}
lastModified: {
  "w5": {},
  "bare": [
    "Task"
  ]
}
reasonCode: {
  "w5": {
    "FiveWs.why[x]": [
      "Task"
    ]
  },
  "bare": []
}
reasonReference: {
  "w5": {
    "FiveWs.why[x]": [
      "Task"
    ]
  },
  "bare": []
}
restriction: {
  "w5": {},
  "bare": [
    "Task"
  ]
}
repetitions: {
  "w5": {},
  "bare": [
    "Task.restriction"
  ]
}
codeSystem: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities"
  ]
}
isDefault: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.codeSystem.version"
  ]
}
subsumption: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.codeSystem"
  ]
}
hierarchical: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.expansion"
  ]
}
paging: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.expansion"
  ]
}
incomplete: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.expansion"
  ]
}
textFilter: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.expansion"
  ]
}
codeSearch: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities"
  ]
}
validateCode: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities"
  ]
}
translations: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.validateCode"
  ]
}
needsMap: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities.translation"
  ]
}
closure: {
  "w5": {},
  "bare": [
    "TerminologyCapabilities"
  ]
}
testScript: {
  "w5": {},
  "bare": [
    "TestReport"
  ]
}
tester: {
  "w5": {},
  "bare": [
    "TestReport"
  ]
}
metadata: {
  "w5": {},
  "bare": [
    "TestScript"
  ]
}
validated: {
  "w5": {},
  "bare": [
    "TestScript.metadata.capability"
  ]
}
capabilities: {
  "w5": {},
  "bare": [
    "TestScript.metadata.capability"
  ]
}
artifact: {
  "w5": {},
  "bare": [
    "TestScript.scope"
  ]
}
conformance: {
  "w5": {},
  "bare": [
    "TestScript.scope"
  ]
}
fixture: {
  "w5": {},
  "bare": [
    "TestScript"
  ]
}
autocreate: {
  "w5": {},
  "bare": [
    "TestScript.fixture"
  ]
}
autodelete: {
  "w5": {},
  "bare": [
    "TestScript.fixture"
  ]
}
defaultValue: {
  "w5": {},
  "bare": [
    "TestScript.variable"
  ]
}
hint: {
  "w5": {},
  "bare": [
    "TestScript.variable"
  ]
}
accept: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.operation"
  ]
}
encodeRequestUrl: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.operation"
  ]
}
requestHeader: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.operation"
  ]
}
field: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.operation.requestHeader"
  ]
}
requestId: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.operation"
  ]
}
responseId: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.operation"
  ]
}
direction: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
compareToSourceId: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
compareToSourceExpression: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
compareToSourcePath: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
minimumId: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
navigationLinks: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
requestMethod: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
requestURL: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
responseCode: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
stopTestOnFail: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
validateProfileId: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
warningOnly: {
  "w5": {},
  "bare": [
    "TestScript.setup.action.assert"
  ]
}
immutable: {
  "w5": {},
  "bare": [
    "ValueSet"
  ]
}
compose: {
  "w5": {},
  "bare": [
    "ValueSet"
  ]
}
include: {
  "w5": {},
  "bare": [
    "ValueSet.compose"
  ]
}
timestamp: {
  "w5": {},
  "bare": [
    "ValueSet.expansion"
  ]
}
offset: {
  "w5": {},
  "bare": [
    "ValueSet.expansion"
  ]
}
inclusionCriteria: {
  "w5": {},
  "bare": [
    "ValueSet.scope"
  ]
}
exclusionCriteria: {
  "w5": {},
  "bare": [
    "ValueSet.scope"
  ]
}
targetLocation: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
need: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
validationType: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
validationProcess: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
frequency: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
lastPerformed: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
nextScheduled: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
failureAction: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
validationStatus: {
  "w5": {},
  "bare": [
    "VerificationResult.primarySource"
  ]
}
validationDate: {
  "w5": {},
  "bare": [
    "VerificationResult.primarySource"
  ]
}
canPushUpdates: {
  "w5": {},
  "bare": [
    "VerificationResult.primarySource"
  ]
}
pushTypeAvailable: {
  "w5": {},
  "bare": [
    "VerificationResult.primarySource"
  ]
}
attestation: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
sourceIdentityCertificate: {
  "w5": {},
  "bare": [
    "VerificationResult.attestation"
  ]
}
proxyIdentityCertificate: {
  "w5": {},
  "bare": [
    "VerificationResult.attestation"
  ]
}
proxySignature: {
  "w5": {},
  "bare": [
    "VerificationResult.attestation"
  ]
}
sourceSignature: {
  "w5": {},
  "bare": [
    "VerificationResult.attestation"
  ]
}
validator: {
  "w5": {},
  "bare": [
    "VerificationResult"
  ]
}
identityCertificate: {
  "w5": {},
  "bare": [
    "VerificationResult.validator"
  ]
}
attestationSignature: {
  "w5": {},
  "bare": [
    "VerificationResult.validator"
  ]
}
dateWritten: {
  "w5": {
    "FiveWs.recorded": [
      "VisionPrescription"
    ]
  },
  "bare": []
}
prescriber: {
  "w5": {
    "FiveWs.author": [
      "VisionPrescription"
    ]
  },
  "bare": []
}
lensSpecification: {
  "w5": {},
  "bare": [
    "VisionPrescription"
  ]
}
eye: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
sphere: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
cylinder: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
axis: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
prism: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
add: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
power: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
backCurve: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
diameter: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
brand: {
  "w5": {},
  "bare": [
    "VisionPrescription.lensSpecification"
  ]
}
